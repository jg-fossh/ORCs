
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3746 (git sha1 ec410c9b, gcc 10.2.1 -O3 -feliminate-unused-debug-types -fexceptions -fstack-protector -m64 -fasynchronous-unwind-tables -ftree-loop-distribute-patterns -fno-semantic-interposition -ffat-lto-objects -fno-trapping-math -mtune=skylake -fvisibility-inlines-hidden -fPIC -Os)


-- Executing script file `syn_ice40.ys' --

1. Executing Verilog-2005 frontend: ../../source/CSR.v
Parsing Verilog input from `../../source/CSR.v' to AST representation.
Generating RTLIL representation for module `\CSR'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../source/Memory_Backplane.v
Parsing Verilog input from `../../source/Memory_Backplane.v' to AST representation.
Generating RTLIL representation for module `\Memory_Backplane'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../source/Hart_Core.v
Parsing Verilog input from `../../source/Hart_Core.v' to AST representation.
Generating RTLIL representation for module `\Hart_Core'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../../source/ORC_R32I.v
Parsing Verilog input from `../../source/ORC_R32I.v' to AST representation.
Generating RTLIL representation for module `\ORC_R32I'.
Successfully finished Verilog frontend.

5. Executing SYNTH_ICE40 pass.

5.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

5.2. Executing HIERARCHY pass (managing design hierarchy).

5.2.1. Analyzing design hierarchy..
Top module:  \ORC_R32I
Used module:     \Memory_Backplane
Used module:     \CSR
Used module:     \Hart_Core
Parameter 1 (\P_MEM_STACK_ADDR) = 0
Parameter 2 (\P_MEM_ADDR_MSB) = 4
Parameter 3 (\P_MEM_DEPTH) = 32
Parameter 4 (\P_MEM_WIDTH) = 32
Parameter 5 (\P_MEM_NUM_REGS) = 32
Parameter 6 (\P_MEM_ANLOGIC_DRAM) = 0

5.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\Memory_Backplane'.
Parameter 1 (\P_MEM_STACK_ADDR) = 0
Parameter 2 (\P_MEM_ADDR_MSB) = 4
Parameter 3 (\P_MEM_DEPTH) = 32
Parameter 4 (\P_MEM_WIDTH) = 32
Parameter 5 (\P_MEM_NUM_REGS) = 32
Parameter 6 (\P_MEM_ANLOGIC_DRAM) = 0
Generating RTLIL representation for module `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane'.
Parameter 1 (\P_CORE_INITIAL_FETCH_ADDR) = 0
Parameter 2 (\P_CORE_MEMORY_ADDR_MSB) = 4

5.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\Hart_Core'.
Parameter 1 (\P_CORE_INITIAL_FETCH_ADDR) = 0
Parameter 2 (\P_CORE_MEMORY_ADDR_MSB) = 4
Generating RTLIL representation for module `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4'.

5.2.4. Analyzing design hierarchy..
Top module:  \ORC_R32I
Used module:     $paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane
Used module:     \CSR
Used module:     $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4

5.2.5. Analyzing design hierarchy..
Top module:  \ORC_R32I
Used module:     $paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane
Used module:     \CSR
Used module:     $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4
Removing unused module `\Hart_Core'.
Removing unused module `\Memory_Backplane'.
Removed 2 unused modules.

5.3. Executing PROC pass (convert processes to netlists).

5.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
Cleaned up 1 empty switch.

5.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$748 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$741 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$737 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$730 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$727 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$724 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$721 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$718 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$710 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$703 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$699 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$692 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$689 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$686 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$683 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$680 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$../../source/Hart_Core.v:567$1335 in module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Marked 8 switch rules as full_case in process $proc$../../source/Hart_Core.v:487$1306 in module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Marked 14 switch rules as full_case in process $proc$../../source/Hart_Core.v:298$1224 in module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Marked 1 switch rules as full_case in process $proc$../../source/Memory_Backplane.v:121$911 in module $paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.
Marked 1 switch rules as full_case in process $proc$../../source/Memory_Backplane.v:102$908 in module $paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.
Marked 1 switch rules as full_case in process $proc$../../source/CSR.v:106$8 in module CSR.
Marked 1 switch rules as full_case in process $proc$../../source/CSR.v:93$4 in module CSR.
Marked 1 switch rules as full_case in process $proc$../../source/CSR.v:79$1 in module CSR.
Removed a total of 0 dead cases.

5.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 11 redundant assignments.
Promoted 22 assignments to connections.

5.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$751'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$747'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$740'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$736'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$729'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$726'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$723'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$720'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$717'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$715'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$713'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$709'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$702'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$698'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$691'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$688'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$685'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$682'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$679'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$677'.
  Set init value: \Q = 1'0

5.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$748'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$737'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$727'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$721'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$710'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$699'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$689'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$683'.

5.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$751'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$748'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$747'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$741'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$740'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$737'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$736'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$730'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$729'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$727'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$726'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$724'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$723'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$721'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$720'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$718'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$717'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$716'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$715'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$714'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$713'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$710'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$709'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$703'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$702'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$699'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$698'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$692'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$691'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$689'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$688'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$686'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$685'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$683'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$682'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$680'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$679'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$678'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$677'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$676'.
Creating decoders for process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:567$1335'.
     1/4: $0\r_master_write_select[3:0]
     2/4: $0\r_master_write_addr[29:0]
     3/4: $0\r_master_write_ready[0:0]
     4/4: $0\r_s_data[31:0]
Creating decoders for process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:487$1306'.
     1/3: $0\r_master_read_addr[29:0]
     2/3: $0\r_master_read_ready[0:0]
     3/3: $0\r_load_cases[3:0]
Creating decoders for process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
     1/6: $0\r_decoded_instr[0:0]
     2/6: $0\r_rd3[4:0]
     3/6: $0\r_rd1[4:0]
     4/6: $0\r_program_counter_state[3:0]
     5/6: $0\r_program_counter_valid[0:0]
     6/6: $0\r_pc_fetch[31:0]
Creating decoders for process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:121$911'.
     1/6: $0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914
     2/6: $0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_DATA[31:0]$913
     3/6: $0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_ADDR[4:0]$912
     4/6: $0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917
     5/6: $0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_DATA[31:0]$916
     6/6: $0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_ADDR[4:0]$915
Creating decoders for process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:102$908'.
     1/1: $0\reset_index[4:0]
Creating decoders for process `\CSR.$proc$../../source/CSR.v:106$8'.
     1/2: $0\r_csr_read_ack[0:0]
     2/2: $0\r_csr_read_data[31:0]
Creating decoders for process `\CSR.$proc$../../source/CSR.v:93$4'.
     1/1: $0\r_instr_count[63:0]
Creating decoders for process `\CSR.$proc$../../source/CSR.v:79$1'.
     1/1: $0\r_cycle_count[63:0]

5.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

5.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$748'.
  created $adff cell `$procdff$1716' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$741'.
  created $dff cell `$procdff$1717' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$737'.
  created $adff cell `$procdff$1718' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$730'.
  created $dff cell `$procdff$1719' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$727'.
  created $adff cell `$procdff$1720' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$724'.
  created $dff cell `$procdff$1721' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$721'.
  created $adff cell `$procdff$1722' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$718'.
  created $dff cell `$procdff$1723' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$716'.
  created $dff cell `$procdff$1724' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$714'.
  created $dff cell `$procdff$1725' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$710'.
  created $adff cell `$procdff$1726' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$703'.
  created $dff cell `$procdff$1727' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$699'.
  created $adff cell `$procdff$1728' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$692'.
  created $dff cell `$procdff$1729' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$689'.
  created $adff cell `$procdff$1730' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$686'.
  created $dff cell `$procdff$1731' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$683'.
  created $adff cell `$procdff$1732' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$680'.
  created $dff cell `$procdff$1733' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$678'.
  created $dff cell `$procdff$1734' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$676'.
  created $dff cell `$procdff$1735' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_s_data' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:567$1335'.
  created $dff cell `$procdff$1736' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_master_write_ready' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:567$1335'.
  created $dff cell `$procdff$1737' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_master_write_addr' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:567$1335'.
  created $dff cell `$procdff$1738' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_master_write_select' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:567$1335'.
  created $dff cell `$procdff$1739' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_load_cases' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:487$1306'.
  created $dff cell `$procdff$1740' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_master_read_ready' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:487$1306'.
  created $dff cell `$procdff$1741' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_master_read_addr' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:487$1306'.
  created $dff cell `$procdff$1742' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_pc_fetch' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
  created $dff cell `$procdff$1743' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_program_counter_valid' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
  created $dff cell `$procdff$1744' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_program_counter_state' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
  created $dff cell `$procdff$1745' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_rd1' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
  created $dff cell `$procdff$1746' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_rd3' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
  created $dff cell `$procdff$1747' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_decoded_instr' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
  created $dff cell `$procdff$1748' with positive edge clock.
Creating register for signal `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_ADDR' using process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:121$911'.
  created $dff cell `$procdff$1749' with positive edge clock.
Creating register for signal `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_DATA' using process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:121$911'.
  created $dff cell `$procdff$1750' with positive edge clock.
Creating register for signal `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN' using process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:121$911'.
  created $dff cell `$procdff$1751' with positive edge clock.
Creating register for signal `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_ADDR' using process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:121$911'.
  created $dff cell `$procdff$1752' with positive edge clock.
Creating register for signal `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_DATA' using process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:121$911'.
  created $dff cell `$procdff$1753' with positive edge clock.
Creating register for signal `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN' using process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:121$911'.
  created $dff cell `$procdff$1754' with positive edge clock.
Creating register for signal `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.\reset_index' using process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:102$908'.
  created $dff cell `$procdff$1755' with positive edge clock.
Creating register for signal `\CSR.\r_csr_read_data' using process `\CSR.$proc$../../source/CSR.v:106$8'.
  created $dff cell `$procdff$1756' with positive edge clock.
Creating register for signal `\CSR.\r_csr_read_ack' using process `\CSR.$proc$../../source/CSR.v:106$8'.
  created $dff cell `$procdff$1757' with positive edge clock.
Creating register for signal `\CSR.\r_instr_count' using process `\CSR.$proc$../../source/CSR.v:93$4'.
  created $dff cell `$procdff$1758' with positive edge clock.
Creating register for signal `\CSR.\r_cycle_count' using process `\CSR.$proc$../../source/CSR.v:79$1'.
  created $dff cell `$procdff$1759' with positive edge clock.

5.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$751'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$748'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$748'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$747'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$741'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$741'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$740'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$737'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$737'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$736'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$730'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$730'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$729'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$727'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$726'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$724'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$724'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$723'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$721'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$720'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$718'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$718'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$717'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$716'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$716'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$715'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$714'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$713'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$710'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$710'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$709'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$703'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$703'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$702'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$699'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$699'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$698'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$692'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$692'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$691'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$689'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$688'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$686'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$686'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$685'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$683'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$682'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$680'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$680'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$679'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$678'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$678'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$677'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$676'.
Found and cleaned up 3 empty switches in `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:567$1335'.
Removing empty process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:567$1335'.
Found and cleaned up 18 empty switches in `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:487$1306'.
Removing empty process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:487$1306'.
Found and cleaned up 17 empty switches in `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
Removing empty process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:298$1224'.
Found and cleaned up 2 empty switches in `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:121$911'.
Removing empty process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:121$911'.
Found and cleaned up 1 empty switch in `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:102$908'.
Removing empty process `$paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.$proc$../../source/Memory_Backplane.v:102$908'.
Found and cleaned up 3 empty switches in `\CSR.$proc$../../source/CSR.v:106$8'.
Removing empty process `CSR.$proc$../../source/CSR.v:106$8'.
Found and cleaned up 2 empty switches in `\CSR.$proc$../../source/CSR.v:93$4'.
Removing empty process `CSR.$proc$../../source/CSR.v:93$4'.
Found and cleaned up 1 empty switch in `\CSR.$proc$../../source/CSR.v:79$1'.
Removing empty process `CSR.$proc$../../source/CSR.v:79$1'.
Cleaned up 65 empty switches.

5.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Deleting now unused module $paramod$4b26b2bf8e52b36a39c7af7d3e3ba4ad279f7f48\Memory_Backplane.
Deleting now unused module CSR.
<suppressed ~3 debug messages>

5.5. Executing TRIBUF pass.

5.6. Executing DEMINOUT pass (demote inout ports to input or output).

5.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~215 debug messages>

5.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 28 unused cells and 372 unused wires.
<suppressed ~39 debug messages>

5.9. Executing CHECK pass (checking for obvious problems).
Checking module ORC_R32I...
Found and reported 0 problems.

5.10. Executing OPT pass (performing simple optimizations).

5.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

5.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\core.$procmux$1596: \core.r_program_counter_state -> { \core.r_program_counter_state [3] 3'100 }
      Replacing known input bits on port A of cell $flatten\core.$procmux$1593: \core.r_program_counter_state -> { \core.r_program_counter_state [3] 3'100 }
      Replacing known input bits on port A of cell $flatten\core.$procmux$1590: \core.r_program_counter_state -> 4'0000
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\mem_access_controller.$ternary$../../source/Memory_Backplane.v:84$899.
Removed 1 multiplexer ports.
<suppressed ~71 debug messages>

5.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $flatten\mem_access_controller.$procmux$1666:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914
      New ports: A=1'0, B=1'1, Y=$flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0]
      New connections: $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [31:1] = { $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN[31:0]$914 [0] }
    Consolidated identical input bits for $mux cell $flatten\mem_access_controller.$procmux$1674:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\mem_access_controller.$procmux$1674_Y
      New ports: A=1'0, B=1'1, Y=$flatten\mem_access_controller.$procmux$1674_Y [0]
      New connections: $flatten\mem_access_controller.$procmux$1674_Y [31:1] = { $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] $flatten\mem_access_controller.$procmux$1674_Y [0] }
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $flatten\mem_access_controller.$procmux$1677:
      Old ports: A=$flatten\mem_access_controller.$procmux$1674_Y, B=0, Y=$flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917
      New ports: A=$flatten\mem_access_controller.$procmux$1674_Y [0], B=1'0, Y=$flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0]
      New connections: $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [31:1] = { $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] $flatten\mem_access_controller.$0$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN[31:0]$917 [0] }
  Optimizing cells in module \ORC_R32I.
Performed a total of 3 changes.

5.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

5.10.6. Executing OPT_DFF pass (perform DFF optimizations).

5.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 45 unused wires.
<suppressed ~1 debug messages>

5.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.10.9. Rerunning OPT passes. (Maybe there is more to do..)

5.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

5.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

5.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.10.13. Executing OPT_DFF pass (perform DFF optimizations).

5.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.10.16. Finished OPT passes. (There is nothing left to do.)

5.11. Executing FSM pass (extract and optimize FSM).

5.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ORC_R32I.$flatten\mem_access_controller.$memwr$\general_regs$../../source/Memory_Backplane.v:123$888_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking ORC_R32I.$flatten\mem_access_controller.$memwr$\general_regs$../../source/Memory_Backplane.v:128$889_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register ORC_R32I.core.r_load_cases.

5.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\core.r_load_cases' from module `\ORC_R32I'.
  found $dff cell for state register: $flatten\core.$procdff$1740
  root of input selection tree: $flatten\core.$0\r_load_cases[3:0]
  found reset state: 4'1111 (guessed from mux tree)
  found ctrl input: \i_reset_sync
  found ctrl input: \core.w_lcc
  found ctrl input: \core.w_fct3_one_hot [0]
  found ctrl input: \core.w_fct3_one_hot [4]
  found ctrl input: \core.w_fct3_one_hot [1]
  found ctrl input: \core.w_fct3_one_hot [5]
  found ctrl input: \core.w_fct3_one_hot [2]
  found state code: 4'1111
  found state code: 4'1100
  found ctrl input: \core.w_master_addr [1]
  found state code: 4'1011
  found state code: 4'1010
  found state code: 4'1001
  found state code: 4'1000
  found ctrl input: $flatten\core.$eq$../../source/Hart_Core.v:509$1313_Y
  found ctrl input: $flatten\core.$eq$../../source/Hart_Core.v:506$1312_Y
  found ctrl input: $flatten\core.$eq$../../source/Hart_Core.v:503$1311_Y
  found ctrl input: $flatten\core.$eq$../../source/Hart_Core.v:500$1310_Y
  found state code: 4'0100
  found state code: 4'0101
  found state code: 4'0110
  found state code: 4'0111
  found state code: 4'0000
  found state code: 4'0001
  found state code: 4'0010
  found state code: 4'0011
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:258$1149_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:257$1148_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:256$1147_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:255$1144_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:254$1141_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:253$1140_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:252$1139_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:251$1138_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:250$1137_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:249$1134_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:248$1131_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:247$1128_Y
  found ctrl output: $flatten\core.$eq$../../source/Hart_Core.v:246$1125_Y
  ctrl inputs: { \core.w_fct3_one_hot [5:4] \core.w_fct3_one_hot [2:0] \core.w_lcc \core.w_master_addr [1] $flatten\core.$eq$../../source/Hart_Core.v:509$1313_Y $flatten\core.$eq$../../source/Hart_Core.v:506$1312_Y $flatten\core.$eq$../../source/Hart_Core.v:503$1311_Y $flatten\core.$eq$../../source/Hart_Core.v:500$1310_Y \i_reset_sync }
  ctrl outputs: { $flatten\core.$0\r_load_cases[3:0] $flatten\core.$eq$../../source/Hart_Core.v:258$1149_Y $flatten\core.$eq$../../source/Hart_Core.v:257$1148_Y $flatten\core.$eq$../../source/Hart_Core.v:256$1147_Y $flatten\core.$eq$../../source/Hart_Core.v:255$1144_Y $flatten\core.$eq$../../source/Hart_Core.v:254$1141_Y $flatten\core.$eq$../../source/Hart_Core.v:253$1140_Y $flatten\core.$eq$../../source/Hart_Core.v:252$1139_Y $flatten\core.$eq$../../source/Hart_Core.v:251$1138_Y $flatten\core.$eq$../../source/Hart_Core.v:250$1137_Y $flatten\core.$eq$../../source/Hart_Core.v:249$1134_Y $flatten\core.$eq$../../source/Hart_Core.v:248$1131_Y $flatten\core.$eq$../../source/Hart_Core.v:247$1128_Y $flatten\core.$eq$../../source/Hart_Core.v:246$1125_Y }
  transition:     4'0000 12'-----0-----0 ->     4'0000 17'00000000000000001
  transition:     4'0000 12'000001-----0 ->     4'1111 17'11110000000000001
  transition:     4'0000 12'001001-----0 ->     4'1100 17'11000000000000001
  transition:     4'0000 12'10-0010----0 ->     4'1011 17'10110000000000001
  transition:     4'0000 12'10-0011----0 ->     4'1010 17'10100000000000001
  transition:     4'0000 12'-0-1010----0 ->     4'1001 17'10010000000000001
  transition:     4'0000 12'-0-1011----0 ->     4'1000 17'10000000000000001
  transition:     4'0000 12'-1--01-00000 ->     4'0000 17'00000000000000001
  transition:     4'0000 12'-1--01-00010 ->     4'0100 17'01000000000000001
  transition:     4'0000 12'-1--01-001-0 ->     4'0101 17'01010000000000001
  transition:     4'0000 12'-1--01-01--0 ->     4'0110 17'01100000000000001
  transition:     4'0000 12'-1--01-1---0 ->     4'0111 17'01110000000000001
  transition:     4'0000 12'----11-00000 ->     4'0000 17'00000000000000001
  transition:     4'0000 12'----11-00010 ->     4'0000 17'00000000000000001
  transition:     4'0000 12'----11-001-0 ->     4'0001 17'00010000000000001
  transition:     4'0000 12'----11-01--0 ->     4'0010 17'00100000000000001
  transition:     4'0000 12'----11-1---0 ->     4'0011 17'00110000000000001
  transition:     4'0000 12'-----------1 ->     4'1111 17'11110000000000001
  transition:     4'1000 12'-----0-----0 ->     4'1000 17'10000000100000000
  transition:     4'1000 12'000001-----0 ->     4'1111 17'11110000100000000
  transition:     4'1000 12'001001-----0 ->     4'1100 17'11000000100000000
  transition:     4'1000 12'10-0010----0 ->     4'1011 17'10110000100000000
  transition:     4'1000 12'10-0011----0 ->     4'1010 17'10100000100000000
  transition:     4'1000 12'-0-1010----0 ->     4'1001 17'10010000100000000
  transition:     4'1000 12'-0-1011----0 ->     4'1000 17'10000000100000000
  transition:     4'1000 12'-1--01-00000 ->     4'1000 17'10000000100000000
  transition:     4'1000 12'-1--01-00010 ->     4'0100 17'01000000100000000
  transition:     4'1000 12'-1--01-001-0 ->     4'0101 17'01010000100000000
  transition:     4'1000 12'-1--01-01--0 ->     4'0110 17'01100000100000000
  transition:     4'1000 12'-1--01-1---0 ->     4'0111 17'01110000100000000
  transition:     4'1000 12'----11-00000 ->     4'1000 17'10000000100000000
  transition:     4'1000 12'----11-00010 ->     4'0000 17'00000000100000000
  transition:     4'1000 12'----11-001-0 ->     4'0001 17'00010000100000000
  transition:     4'1000 12'----11-01--0 ->     4'0010 17'00100000100000000
  transition:     4'1000 12'----11-1---0 ->     4'0011 17'00110000100000000
  transition:     4'1000 12'-----------1 ->     4'1111 17'11110000100000000
  transition:     4'0100 12'-----0-----0 ->     4'0100 17'01000000000010000
  transition:     4'0100 12'000001-----0 ->     4'1111 17'11110000000010000
  transition:     4'0100 12'001001-----0 ->     4'1100 17'11000000000010000
  transition:     4'0100 12'10-0010----0 ->     4'1011 17'10110000000010000
  transition:     4'0100 12'10-0011----0 ->     4'1010 17'10100000000010000
  transition:     4'0100 12'-0-1010----0 ->     4'1001 17'10010000000010000
  transition:     4'0100 12'-0-1011----0 ->     4'1000 17'10000000000010000
  transition:     4'0100 12'-1--01-00000 ->     4'0100 17'01000000000010000
  transition:     4'0100 12'-1--01-00010 ->     4'0100 17'01000000000010000
  transition:     4'0100 12'-1--01-001-0 ->     4'0101 17'01010000000010000
  transition:     4'0100 12'-1--01-01--0 ->     4'0110 17'01100000000010000
  transition:     4'0100 12'-1--01-1---0 ->     4'0111 17'01110000000010000
  transition:     4'0100 12'----11-00000 ->     4'0100 17'01000000000010000
  transition:     4'0100 12'----11-00010 ->     4'0000 17'00000000000010000
  transition:     4'0100 12'----11-001-0 ->     4'0001 17'00010000000010000
  transition:     4'0100 12'----11-01--0 ->     4'0010 17'00100000000010000
  transition:     4'0100 12'----11-1---0 ->     4'0011 17'00110000000010000
  transition:     4'0100 12'-----------1 ->     4'1111 17'11110000000010000
  transition:     4'1100 12'-----0-----0 ->     4'1100 17'11001000000000000
  transition:     4'1100 12'000001-----0 ->     4'1111 17'11111000000000000
  transition:     4'1100 12'001001-----0 ->     4'1100 17'11001000000000000
  transition:     4'1100 12'10-0010----0 ->     4'1011 17'10111000000000000
  transition:     4'1100 12'10-0011----0 ->     4'1010 17'10101000000000000
  transition:     4'1100 12'-0-1010----0 ->     4'1001 17'10011000000000000
  transition:     4'1100 12'-0-1011----0 ->     4'1000 17'10001000000000000
  transition:     4'1100 12'-1--01-00000 ->     4'1100 17'11001000000000000
  transition:     4'1100 12'-1--01-00010 ->     4'0100 17'01001000000000000
  transition:     4'1100 12'-1--01-001-0 ->     4'0101 17'01011000000000000
  transition:     4'1100 12'-1--01-01--0 ->     4'0110 17'01101000000000000
  transition:     4'1100 12'-1--01-1---0 ->     4'0111 17'01111000000000000
  transition:     4'1100 12'----11-00000 ->     4'1100 17'11001000000000000
  transition:     4'1100 12'----11-00010 ->     4'0000 17'00001000000000000
  transition:     4'1100 12'----11-001-0 ->     4'0001 17'00011000000000000
  transition:     4'1100 12'----11-01--0 ->     4'0010 17'00101000000000000
  transition:     4'1100 12'----11-1---0 ->     4'0011 17'00111000000000000
  transition:     4'1100 12'-----------1 ->     4'1111 17'11111000000000000
  transition:     4'0010 12'-----0-----0 ->     4'0010 17'00100000000000100
  transition:     4'0010 12'000001-----0 ->     4'1111 17'11110000000000100
  transition:     4'0010 12'001001-----0 ->     4'1100 17'11000000000000100
  transition:     4'0010 12'10-0010----0 ->     4'1011 17'10110000000000100
  transition:     4'0010 12'10-0011----0 ->     4'1010 17'10100000000000100
  transition:     4'0010 12'-0-1010----0 ->     4'1001 17'10010000000000100
  transition:     4'0010 12'-0-1011----0 ->     4'1000 17'10000000000000100
  transition:     4'0010 12'-1--01-00000 ->     4'0010 17'00100000000000100
  transition:     4'0010 12'-1--01-00010 ->     4'0100 17'01000000000000100
  transition:     4'0010 12'-1--01-001-0 ->     4'0101 17'01010000000000100
  transition:     4'0010 12'-1--01-01--0 ->     4'0110 17'01100000000000100
  transition:     4'0010 12'-1--01-1---0 ->     4'0111 17'01110000000000100
  transition:     4'0010 12'----11-00000 ->     4'0010 17'00100000000000100
  transition:     4'0010 12'----11-00010 ->     4'0000 17'00000000000000100
  transition:     4'0010 12'----11-001-0 ->     4'0001 17'00010000000000100
  transition:     4'0010 12'----11-01--0 ->     4'0010 17'00100000000000100
  transition:     4'0010 12'----11-1---0 ->     4'0011 17'00110000000000100
  transition:     4'0010 12'-----------1 ->     4'1111 17'11110000000000100
  transition:     4'1010 12'-----0-----0 ->     4'1010 17'10100010000000000
  transition:     4'1010 12'000001-----0 ->     4'1111 17'11110010000000000
  transition:     4'1010 12'001001-----0 ->     4'1100 17'11000010000000000
  transition:     4'1010 12'10-0010----0 ->     4'1011 17'10110010000000000
  transition:     4'1010 12'10-0011----0 ->     4'1010 17'10100010000000000
  transition:     4'1010 12'-0-1010----0 ->     4'1001 17'10010010000000000
  transition:     4'1010 12'-0-1011----0 ->     4'1000 17'10000010000000000
  transition:     4'1010 12'-1--01-00000 ->     4'1010 17'10100010000000000
  transition:     4'1010 12'-1--01-00010 ->     4'0100 17'01000010000000000
  transition:     4'1010 12'-1--01-001-0 ->     4'0101 17'01010010000000000
  transition:     4'1010 12'-1--01-01--0 ->     4'0110 17'01100010000000000
  transition:     4'1010 12'-1--01-1---0 ->     4'0111 17'01110010000000000
  transition:     4'1010 12'----11-00000 ->     4'1010 17'10100010000000000
  transition:     4'1010 12'----11-00010 ->     4'0000 17'00000010000000000
  transition:     4'1010 12'----11-001-0 ->     4'0001 17'00010010000000000
  transition:     4'1010 12'----11-01--0 ->     4'0010 17'00100010000000000
  transition:     4'1010 12'----11-1---0 ->     4'0011 17'00110010000000000
  transition:     4'1010 12'-----------1 ->     4'1111 17'11110010000000000
  transition:     4'0110 12'-----0-----0 ->     4'0110 17'01100000001000000
  transition:     4'0110 12'000001-----0 ->     4'1111 17'11110000001000000
  transition:     4'0110 12'001001-----0 ->     4'1100 17'11000000001000000
  transition:     4'0110 12'10-0010----0 ->     4'1011 17'10110000001000000
  transition:     4'0110 12'10-0011----0 ->     4'1010 17'10100000001000000
  transition:     4'0110 12'-0-1010----0 ->     4'1001 17'10010000001000000
  transition:     4'0110 12'-0-1011----0 ->     4'1000 17'10000000001000000
  transition:     4'0110 12'-1--01-00000 ->     4'0110 17'01100000001000000
  transition:     4'0110 12'-1--01-00010 ->     4'0100 17'01000000001000000
  transition:     4'0110 12'-1--01-001-0 ->     4'0101 17'01010000001000000
  transition:     4'0110 12'-1--01-01--0 ->     4'0110 17'01100000001000000
  transition:     4'0110 12'-1--01-1---0 ->     4'0111 17'01110000001000000
  transition:     4'0110 12'----11-00000 ->     4'0110 17'01100000001000000
  transition:     4'0110 12'----11-00010 ->     4'0000 17'00000000001000000
  transition:     4'0110 12'----11-001-0 ->     4'0001 17'00010000001000000
  transition:     4'0110 12'----11-01--0 ->     4'0010 17'00100000001000000
  transition:     4'0110 12'----11-1---0 ->     4'0011 17'00110000001000000
  transition:     4'0110 12'-----------1 ->     4'1111 17'11110000001000000
  transition:     4'0001 12'-----0-----0 ->     4'0001 17'00010000000000010
  transition:     4'0001 12'000001-----0 ->     4'1111 17'11110000000000010
  transition:     4'0001 12'001001-----0 ->     4'1100 17'11000000000000010
  transition:     4'0001 12'10-0010----0 ->     4'1011 17'10110000000000010
  transition:     4'0001 12'10-0011----0 ->     4'1010 17'10100000000000010
  transition:     4'0001 12'-0-1010----0 ->     4'1001 17'10010000000000010
  transition:     4'0001 12'-0-1011----0 ->     4'1000 17'10000000000000010
  transition:     4'0001 12'-1--01-00000 ->     4'0001 17'00010000000000010
  transition:     4'0001 12'-1--01-00010 ->     4'0100 17'01000000000000010
  transition:     4'0001 12'-1--01-001-0 ->     4'0101 17'01010000000000010
  transition:     4'0001 12'-1--01-01--0 ->     4'0110 17'01100000000000010
  transition:     4'0001 12'-1--01-1---0 ->     4'0111 17'01110000000000010
  transition:     4'0001 12'----11-00000 ->     4'0001 17'00010000000000010
  transition:     4'0001 12'----11-00010 ->     4'0000 17'00000000000000010
  transition:     4'0001 12'----11-001-0 ->     4'0001 17'00010000000000010
  transition:     4'0001 12'----11-01--0 ->     4'0010 17'00100000000000010
  transition:     4'0001 12'----11-1---0 ->     4'0011 17'00110000000000010
  transition:     4'0001 12'-----------1 ->     4'1111 17'11110000000000010
  transition:     4'1001 12'-----0-----0 ->     4'1001 17'10010001000000000
  transition:     4'1001 12'000001-----0 ->     4'1111 17'11110001000000000
  transition:     4'1001 12'001001-----0 ->     4'1100 17'11000001000000000
  transition:     4'1001 12'10-0010----0 ->     4'1011 17'10110001000000000
  transition:     4'1001 12'10-0011----0 ->     4'1010 17'10100001000000000
  transition:     4'1001 12'-0-1010----0 ->     4'1001 17'10010001000000000
  transition:     4'1001 12'-0-1011----0 ->     4'1000 17'10000001000000000
  transition:     4'1001 12'-1--01-00000 ->     4'1001 17'10010001000000000
  transition:     4'1001 12'-1--01-00010 ->     4'0100 17'01000001000000000
  transition:     4'1001 12'-1--01-001-0 ->     4'0101 17'01010001000000000
  transition:     4'1001 12'-1--01-01--0 ->     4'0110 17'01100001000000000
  transition:     4'1001 12'-1--01-1---0 ->     4'0111 17'01110001000000000
  transition:     4'1001 12'----11-00000 ->     4'1001 17'10010001000000000
  transition:     4'1001 12'----11-00010 ->     4'0000 17'00000001000000000
  transition:     4'1001 12'----11-001-0 ->     4'0001 17'00010001000000000
  transition:     4'1001 12'----11-01--0 ->     4'0010 17'00100001000000000
  transition:     4'1001 12'----11-1---0 ->     4'0011 17'00110001000000000
  transition:     4'1001 12'-----------1 ->     4'1111 17'11110001000000000
  transition:     4'0101 12'-----0-----0 ->     4'0101 17'01010000000100000
  transition:     4'0101 12'000001-----0 ->     4'1111 17'11110000000100000
  transition:     4'0101 12'001001-----0 ->     4'1100 17'11000000000100000
  transition:     4'0101 12'10-0010----0 ->     4'1011 17'10110000000100000
  transition:     4'0101 12'10-0011----0 ->     4'1010 17'10100000000100000
  transition:     4'0101 12'-0-1010----0 ->     4'1001 17'10010000000100000
  transition:     4'0101 12'-0-1011----0 ->     4'1000 17'10000000000100000
  transition:     4'0101 12'-1--01-00000 ->     4'0101 17'01010000000100000
  transition:     4'0101 12'-1--01-00010 ->     4'0100 17'01000000000100000
  transition:     4'0101 12'-1--01-001-0 ->     4'0101 17'01010000000100000
  transition:     4'0101 12'-1--01-01--0 ->     4'0110 17'01100000000100000
  transition:     4'0101 12'-1--01-1---0 ->     4'0111 17'01110000000100000
  transition:     4'0101 12'----11-00000 ->     4'0101 17'01010000000100000
  transition:     4'0101 12'----11-00010 ->     4'0000 17'00000000000100000
  transition:     4'0101 12'----11-001-0 ->     4'0001 17'00010000000100000
  transition:     4'0101 12'----11-01--0 ->     4'0010 17'00100000000100000
  transition:     4'0101 12'----11-1---0 ->     4'0011 17'00110000000100000
  transition:     4'0101 12'-----------1 ->     4'1111 17'11110000000100000
  transition:     4'0011 12'-----0-----0 ->     4'0011 17'00110000000001000
  transition:     4'0011 12'000001-----0 ->     4'1111 17'11110000000001000
  transition:     4'0011 12'001001-----0 ->     4'1100 17'11000000000001000
  transition:     4'0011 12'10-0010----0 ->     4'1011 17'10110000000001000
  transition:     4'0011 12'10-0011----0 ->     4'1010 17'10100000000001000
  transition:     4'0011 12'-0-1010----0 ->     4'1001 17'10010000000001000
  transition:     4'0011 12'-0-1011----0 ->     4'1000 17'10000000000001000
  transition:     4'0011 12'-1--01-00000 ->     4'0011 17'00110000000001000
  transition:     4'0011 12'-1--01-00010 ->     4'0100 17'01000000000001000
  transition:     4'0011 12'-1--01-001-0 ->     4'0101 17'01010000000001000
  transition:     4'0011 12'-1--01-01--0 ->     4'0110 17'01100000000001000
  transition:     4'0011 12'-1--01-1---0 ->     4'0111 17'01110000000001000
  transition:     4'0011 12'----11-00000 ->     4'0011 17'00110000000001000
  transition:     4'0011 12'----11-00010 ->     4'0000 17'00000000000001000
  transition:     4'0011 12'----11-001-0 ->     4'0001 17'00010000000001000
  transition:     4'0011 12'----11-01--0 ->     4'0010 17'00100000000001000
  transition:     4'0011 12'----11-1---0 ->     4'0011 17'00110000000001000
  transition:     4'0011 12'-----------1 ->     4'1111 17'11110000000001000
  transition:     4'1011 12'-----0-----0 ->     4'1011 17'10110100000000000
  transition:     4'1011 12'000001-----0 ->     4'1111 17'11110100000000000
  transition:     4'1011 12'001001-----0 ->     4'1100 17'11000100000000000
  transition:     4'1011 12'10-0010----0 ->     4'1011 17'10110100000000000
  transition:     4'1011 12'10-0011----0 ->     4'1010 17'10100100000000000
  transition:     4'1011 12'-0-1010----0 ->     4'1001 17'10010100000000000
  transition:     4'1011 12'-0-1011----0 ->     4'1000 17'10000100000000000
  transition:     4'1011 12'-1--01-00000 ->     4'1011 17'10110100000000000
  transition:     4'1011 12'-1--01-00010 ->     4'0100 17'01000100000000000
  transition:     4'1011 12'-1--01-001-0 ->     4'0101 17'01010100000000000
  transition:     4'1011 12'-1--01-01--0 ->     4'0110 17'01100100000000000
  transition:     4'1011 12'-1--01-1---0 ->     4'0111 17'01110100000000000
  transition:     4'1011 12'----11-00000 ->     4'1011 17'10110100000000000
  transition:     4'1011 12'----11-00010 ->     4'0000 17'00000100000000000
  transition:     4'1011 12'----11-001-0 ->     4'0001 17'00010100000000000
  transition:     4'1011 12'----11-01--0 ->     4'0010 17'00100100000000000
  transition:     4'1011 12'----11-1---0 ->     4'0011 17'00110100000000000
  transition:     4'1011 12'-----------1 ->     4'1111 17'11110100000000000
  transition:     4'0111 12'-----0-----0 ->     4'0111 17'01110000010000000
  transition:     4'0111 12'000001-----0 ->     4'1111 17'11110000010000000
  transition:     4'0111 12'001001-----0 ->     4'1100 17'11000000010000000
  transition:     4'0111 12'10-0010----0 ->     4'1011 17'10110000010000000
  transition:     4'0111 12'10-0011----0 ->     4'1010 17'10100000010000000
  transition:     4'0111 12'-0-1010----0 ->     4'1001 17'10010000010000000
  transition:     4'0111 12'-0-1011----0 ->     4'1000 17'10000000010000000
  transition:     4'0111 12'-1--01-00000 ->     4'0111 17'01110000010000000
  transition:     4'0111 12'-1--01-00010 ->     4'0100 17'01000000010000000
  transition:     4'0111 12'-1--01-001-0 ->     4'0101 17'01010000010000000
  transition:     4'0111 12'-1--01-01--0 ->     4'0110 17'01100000010000000
  transition:     4'0111 12'-1--01-1---0 ->     4'0111 17'01110000010000000
  transition:     4'0111 12'----11-00000 ->     4'0111 17'01110000010000000
  transition:     4'0111 12'----11-00010 ->     4'0000 17'00000000010000000
  transition:     4'0111 12'----11-001-0 ->     4'0001 17'00010000010000000
  transition:     4'0111 12'----11-01--0 ->     4'0010 17'00100000010000000
  transition:     4'0111 12'----11-1---0 ->     4'0011 17'00110000010000000
  transition:     4'0111 12'-----------1 ->     4'1111 17'11110000010000000
  transition:     4'1111 12'-----0-----0 ->     4'1111 17'11110000000000000
  transition:     4'1111 12'000001-----0 ->     4'1111 17'11110000000000000
  transition:     4'1111 12'001001-----0 ->     4'1100 17'11000000000000000
  transition:     4'1111 12'10-0010----0 ->     4'1011 17'10110000000000000
  transition:     4'1111 12'10-0011----0 ->     4'1010 17'10100000000000000
  transition:     4'1111 12'-0-1010----0 ->     4'1001 17'10010000000000000
  transition:     4'1111 12'-0-1011----0 ->     4'1000 17'10000000000000000
  transition:     4'1111 12'-1--01-00000 ->     4'1111 17'11110000000000000
  transition:     4'1111 12'-1--01-00010 ->     4'0100 17'01000000000000000
  transition:     4'1111 12'-1--01-001-0 ->     4'0101 17'01010000000000000
  transition:     4'1111 12'-1--01-01--0 ->     4'0110 17'01100000000000000
  transition:     4'1111 12'-1--01-1---0 ->     4'0111 17'01110000000000000
  transition:     4'1111 12'----11-00000 ->     4'1111 17'11110000000000000
  transition:     4'1111 12'----11-00010 ->     4'0000 17'00000000000000000
  transition:     4'1111 12'----11-001-0 ->     4'0001 17'00010000000000000
  transition:     4'1111 12'----11-01--0 ->     4'0010 17'00100000000000000
  transition:     4'1111 12'----11-1---0 ->     4'0011 17'00110000000000000
  transition:     4'1111 12'-----------1 ->     4'1111 17'11110000000000000

5.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\core.r_load_cases$1760' from module `\ORC_R32I'.
  Merging pattern 12'----11-00000 and 12'----11-00010 from group (0 0 17'00000000000000001).
  Merging pattern 12'----11-00010 and 12'----11-00000 from group (0 0 17'00000000000000001).
  Merging pattern 12'-1--01-00000 and 12'-1--01-00010 from group (2 2 17'01000000000010000).
  Merging pattern 12'-1--01-00010 and 12'-1--01-00000 from group (2 2 17'01000000000010000).

5.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 31 unused cells and 31 unused wires.
<suppressed ~32 debug messages>

5.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\core.r_load_cases$1760' from module `\ORC_R32I'.
  Removing unused output signal $flatten\core.$0\r_load_cases[3:0] [0].
  Removing unused output signal $flatten\core.$0\r_load_cases[3:0] [1].
  Removing unused output signal $flatten\core.$0\r_load_cases[3:0] [2].
  Removing unused output signal $flatten\core.$0\r_load_cases[3:0] [3].

5.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\core.r_load_cases$1760' from module `\ORC_R32I' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ------------1-
  1000 -> -----------1--
  0100 -> ----------1---
  1100 -> ---------1----
  0010 -> --------1-----
  1010 -> -------1------
  0110 -> ------1-------
  0001 -> -----1--------
  1001 -> ----1---------
  0101 -> ---1----------
  0011 -> --1-----------
  1011 -> -1------------
  0111 -> 1-------------
  1111 -> -------------1

5.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\core.r_load_cases$1760' from module `ORC_R32I':
-------------------------------------

  Information on FSM $fsm$\core.r_load_cases$1760 (\core.r_load_cases):

  Number of input signals:   12
  Number of output signals:  13
  Number of state bits:      14

  Input signals:
    0: \i_reset_sync
    1: $flatten\core.$eq$../../source/Hart_Core.v:500$1310_Y
    2: $flatten\core.$eq$../../source/Hart_Core.v:503$1311_Y
    3: $flatten\core.$eq$../../source/Hart_Core.v:506$1312_Y
    4: $flatten\core.$eq$../../source/Hart_Core.v:509$1313_Y
    5: \core.w_master_addr [1]
    6: \core.w_lcc
    7: \core.w_fct3_one_hot [0]
    8: \core.w_fct3_one_hot [1]
    9: \core.w_fct3_one_hot [2]
   10: \core.w_fct3_one_hot [4]
   11: \core.w_fct3_one_hot [5]

  Output signals:
    0: $flatten\core.$eq$../../source/Hart_Core.v:246$1125_Y
    1: $flatten\core.$eq$../../source/Hart_Core.v:247$1128_Y
    2: $flatten\core.$eq$../../source/Hart_Core.v:248$1131_Y
    3: $flatten\core.$eq$../../source/Hart_Core.v:249$1134_Y
    4: $flatten\core.$eq$../../source/Hart_Core.v:250$1137_Y
    5: $flatten\core.$eq$../../source/Hart_Core.v:251$1138_Y
    6: $flatten\core.$eq$../../source/Hart_Core.v:252$1139_Y
    7: $flatten\core.$eq$../../source/Hart_Core.v:253$1140_Y
    8: $flatten\core.$eq$../../source/Hart_Core.v:254$1141_Y
    9: $flatten\core.$eq$../../source/Hart_Core.v:255$1144_Y
   10: $flatten\core.$eq$../../source/Hart_Core.v:256$1147_Y
   11: $flatten\core.$eq$../../source/Hart_Core.v:257$1148_Y
   12: $flatten\core.$eq$../../source/Hart_Core.v:258$1149_Y

  State encoding:
    0: 14'------------1-
    1: 14'-----------1--
    2: 14'----------1---
    3: 14'---------1----
    4: 14'--------1-----
    5: 14'-------1------
    6: 14'------1-------
    7: 14'-----1--------
    8: 14'----1---------
    9: 14'---1----------
   10: 14'--1-----------
   11: 14'-1------------
   12: 14'1-------------
   13: 14'-------------1  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 12'-1--01-00000   ->     0 13'0000000000001
      1:     0 12'----11-000-0   ->     0 13'0000000000001
      2:     0 12'-----0-----0   ->     0 13'0000000000001
      3:     0 12'-0-1011----0   ->     1 13'0000000000001
      4:     0 12'-1--01-00010   ->     2 13'0000000000001
      5:     0 12'001001-----0   ->     3 13'0000000000001
      6:     0 12'----11-01--0   ->     4 13'0000000000001
      7:     0 12'10-0011----0   ->     5 13'0000000000001
      8:     0 12'-1--01-01--0   ->     6 13'0000000000001
      9:     0 12'----11-001-0   ->     7 13'0000000000001
     10:     0 12'-0-1010----0   ->     8 13'0000000000001
     11:     0 12'-1--01-001-0   ->     9 13'0000000000001
     12:     0 12'----11-1---0   ->    10 13'0000000000001
     13:     0 12'10-0010----0   ->    11 13'0000000000001
     14:     0 12'-1--01-1---0   ->    12 13'0000000000001
     15:     0 12'000001-----0   ->    13 13'0000000000001
     16:     0 12'-----------1   ->    13 13'0000000000001
     17:     1 12'----11-00010   ->     0 13'0000100000000
     18:     1 12'-1--01-00000   ->     1 13'0000100000000
     19:     1 12'----11-00000   ->     1 13'0000100000000
     20:     1 12'-0-1011----0   ->     1 13'0000100000000
     21:     1 12'-----0-----0   ->     1 13'0000100000000
     22:     1 12'-1--01-00010   ->     2 13'0000100000000
     23:     1 12'001001-----0   ->     3 13'0000100000000
     24:     1 12'----11-01--0   ->     4 13'0000100000000
     25:     1 12'10-0011----0   ->     5 13'0000100000000
     26:     1 12'-1--01-01--0   ->     6 13'0000100000000
     27:     1 12'----11-001-0   ->     7 13'0000100000000
     28:     1 12'-0-1010----0   ->     8 13'0000100000000
     29:     1 12'-1--01-001-0   ->     9 13'0000100000000
     30:     1 12'----11-1---0   ->    10 13'0000100000000
     31:     1 12'10-0010----0   ->    11 13'0000100000000
     32:     1 12'-1--01-1---0   ->    12 13'0000100000000
     33:     1 12'000001-----0   ->    13 13'0000100000000
     34:     1 12'-----------1   ->    13 13'0000100000000
     35:     2 12'----11-00010   ->     0 13'0000000010000
     36:     2 12'-0-1011----0   ->     1 13'0000000010000
     37:     2 12'----11-00000   ->     2 13'0000000010000
     38:     2 12'-1--01-000-0   ->     2 13'0000000010000
     39:     2 12'-----0-----0   ->     2 13'0000000010000
     40:     2 12'001001-----0   ->     3 13'0000000010000
     41:     2 12'----11-01--0   ->     4 13'0000000010000
     42:     2 12'10-0011----0   ->     5 13'0000000010000
     43:     2 12'-1--01-01--0   ->     6 13'0000000010000
     44:     2 12'----11-001-0   ->     7 13'0000000010000
     45:     2 12'-0-1010----0   ->     8 13'0000000010000
     46:     2 12'-1--01-001-0   ->     9 13'0000000010000
     47:     2 12'----11-1---0   ->    10 13'0000000010000
     48:     2 12'10-0010----0   ->    11 13'0000000010000
     49:     2 12'-1--01-1---0   ->    12 13'0000000010000
     50:     2 12'000001-----0   ->    13 13'0000000010000
     51:     2 12'-----------1   ->    13 13'0000000010000
     52:     3 12'----11-00010   ->     0 13'1000000000000
     53:     3 12'-0-1011----0   ->     1 13'1000000000000
     54:     3 12'-1--01-00010   ->     2 13'1000000000000
     55:     3 12'-1--01-00000   ->     3 13'1000000000000
     56:     3 12'----11-00000   ->     3 13'1000000000000
     57:     3 12'-----0-----0   ->     3 13'1000000000000
     58:     3 12'001001-----0   ->     3 13'1000000000000
     59:     3 12'----11-01--0   ->     4 13'1000000000000
     60:     3 12'10-0011----0   ->     5 13'1000000000000
     61:     3 12'-1--01-01--0   ->     6 13'1000000000000
     62:     3 12'----11-001-0   ->     7 13'1000000000000
     63:     3 12'-0-1010----0   ->     8 13'1000000000000
     64:     3 12'-1--01-001-0   ->     9 13'1000000000000
     65:     3 12'----11-1---0   ->    10 13'1000000000000
     66:     3 12'10-0010----0   ->    11 13'1000000000000
     67:     3 12'-1--01-1---0   ->    12 13'1000000000000
     68:     3 12'000001-----0   ->    13 13'1000000000000
     69:     3 12'-----------1   ->    13 13'1000000000000
     70:     4 12'----11-00010   ->     0 13'0000000000100
     71:     4 12'-0-1011----0   ->     1 13'0000000000100
     72:     4 12'-1--01-00010   ->     2 13'0000000000100
     73:     4 12'001001-----0   ->     3 13'0000000000100
     74:     4 12'-1--01-00000   ->     4 13'0000000000100
     75:     4 12'----11-00000   ->     4 13'0000000000100
     76:     4 12'----11-01--0   ->     4 13'0000000000100
     77:     4 12'-----0-----0   ->     4 13'0000000000100
     78:     4 12'10-0011----0   ->     5 13'0000000000100
     79:     4 12'-1--01-01--0   ->     6 13'0000000000100
     80:     4 12'----11-001-0   ->     7 13'0000000000100
     81:     4 12'-0-1010----0   ->     8 13'0000000000100
     82:     4 12'-1--01-001-0   ->     9 13'0000000000100
     83:     4 12'----11-1---0   ->    10 13'0000000000100
     84:     4 12'10-0010----0   ->    11 13'0000000000100
     85:     4 12'-1--01-1---0   ->    12 13'0000000000100
     86:     4 12'000001-----0   ->    13 13'0000000000100
     87:     4 12'-----------1   ->    13 13'0000000000100
     88:     5 12'----11-00010   ->     0 13'0010000000000
     89:     5 12'-0-1011----0   ->     1 13'0010000000000
     90:     5 12'-1--01-00010   ->     2 13'0010000000000
     91:     5 12'001001-----0   ->     3 13'0010000000000
     92:     5 12'----11-01--0   ->     4 13'0010000000000
     93:     5 12'-1--01-00000   ->     5 13'0010000000000
     94:     5 12'----11-00000   ->     5 13'0010000000000
     95:     5 12'10-0011----0   ->     5 13'0010000000000
     96:     5 12'-----0-----0   ->     5 13'0010000000000
     97:     5 12'-1--01-01--0   ->     6 13'0010000000000
     98:     5 12'----11-001-0   ->     7 13'0010000000000
     99:     5 12'-0-1010----0   ->     8 13'0010000000000
    100:     5 12'-1--01-001-0   ->     9 13'0010000000000
    101:     5 12'----11-1---0   ->    10 13'0010000000000
    102:     5 12'10-0010----0   ->    11 13'0010000000000
    103:     5 12'-1--01-1---0   ->    12 13'0010000000000
    104:     5 12'000001-----0   ->    13 13'0010000000000
    105:     5 12'-----------1   ->    13 13'0010000000000
    106:     6 12'----11-00010   ->     0 13'0000001000000
    107:     6 12'-0-1011----0   ->     1 13'0000001000000
    108:     6 12'-1--01-00010   ->     2 13'0000001000000
    109:     6 12'001001-----0   ->     3 13'0000001000000
    110:     6 12'----11-01--0   ->     4 13'0000001000000
    111:     6 12'10-0011----0   ->     5 13'0000001000000
    112:     6 12'-1--01-00000   ->     6 13'0000001000000
    113:     6 12'----11-00000   ->     6 13'0000001000000
    114:     6 12'-1--01-01--0   ->     6 13'0000001000000
    115:     6 12'-----0-----0   ->     6 13'0000001000000
    116:     6 12'----11-001-0   ->     7 13'0000001000000
    117:     6 12'-0-1010----0   ->     8 13'0000001000000
    118:     6 12'-1--01-001-0   ->     9 13'0000001000000
    119:     6 12'----11-1---0   ->    10 13'0000001000000
    120:     6 12'10-0010----0   ->    11 13'0000001000000
    121:     6 12'-1--01-1---0   ->    12 13'0000001000000
    122:     6 12'000001-----0   ->    13 13'0000001000000
    123:     6 12'-----------1   ->    13 13'0000001000000
    124:     7 12'----11-00010   ->     0 13'0000000000010
    125:     7 12'-0-1011----0   ->     1 13'0000000000010
    126:     7 12'-1--01-00010   ->     2 13'0000000000010
    127:     7 12'001001-----0   ->     3 13'0000000000010
    128:     7 12'----11-01--0   ->     4 13'0000000000010
    129:     7 12'10-0011----0   ->     5 13'0000000000010
    130:     7 12'-1--01-01--0   ->     6 13'0000000000010
    131:     7 12'-1--01-00000   ->     7 13'0000000000010
    132:     7 12'----11-00000   ->     7 13'0000000000010
    133:     7 12'----11-001-0   ->     7 13'0000000000010
    134:     7 12'-----0-----0   ->     7 13'0000000000010
    135:     7 12'-0-1010----0   ->     8 13'0000000000010
    136:     7 12'-1--01-001-0   ->     9 13'0000000000010
    137:     7 12'----11-1---0   ->    10 13'0000000000010
    138:     7 12'10-0010----0   ->    11 13'0000000000010
    139:     7 12'-1--01-1---0   ->    12 13'0000000000010
    140:     7 12'000001-----0   ->    13 13'0000000000010
    141:     7 12'-----------1   ->    13 13'0000000000010
    142:     8 12'----11-00010   ->     0 13'0001000000000
    143:     8 12'-0-1011----0   ->     1 13'0001000000000
    144:     8 12'-1--01-00010   ->     2 13'0001000000000
    145:     8 12'001001-----0   ->     3 13'0001000000000
    146:     8 12'----11-01--0   ->     4 13'0001000000000
    147:     8 12'10-0011----0   ->     5 13'0001000000000
    148:     8 12'-1--01-01--0   ->     6 13'0001000000000
    149:     8 12'----11-001-0   ->     7 13'0001000000000
    150:     8 12'-1--01-00000   ->     8 13'0001000000000
    151:     8 12'----11-00000   ->     8 13'0001000000000
    152:     8 12'-0-1010----0   ->     8 13'0001000000000
    153:     8 12'-----0-----0   ->     8 13'0001000000000
    154:     8 12'-1--01-001-0   ->     9 13'0001000000000
    155:     8 12'----11-1---0   ->    10 13'0001000000000
    156:     8 12'10-0010----0   ->    11 13'0001000000000
    157:     8 12'-1--01-1---0   ->    12 13'0001000000000
    158:     8 12'000001-----0   ->    13 13'0001000000000
    159:     8 12'-----------1   ->    13 13'0001000000000
    160:     9 12'----11-00010   ->     0 13'0000000100000
    161:     9 12'-0-1011----0   ->     1 13'0000000100000
    162:     9 12'-1--01-00010   ->     2 13'0000000100000
    163:     9 12'001001-----0   ->     3 13'0000000100000
    164:     9 12'----11-01--0   ->     4 13'0000000100000
    165:     9 12'10-0011----0   ->     5 13'0000000100000
    166:     9 12'-1--01-01--0   ->     6 13'0000000100000
    167:     9 12'----11-001-0   ->     7 13'0000000100000
    168:     9 12'-0-1010----0   ->     8 13'0000000100000
    169:     9 12'-1--01-00000   ->     9 13'0000000100000
    170:     9 12'----11-00000   ->     9 13'0000000100000
    171:     9 12'-1--01-001-0   ->     9 13'0000000100000
    172:     9 12'-----0-----0   ->     9 13'0000000100000
    173:     9 12'----11-1---0   ->    10 13'0000000100000
    174:     9 12'10-0010----0   ->    11 13'0000000100000
    175:     9 12'-1--01-1---0   ->    12 13'0000000100000
    176:     9 12'000001-----0   ->    13 13'0000000100000
    177:     9 12'-----------1   ->    13 13'0000000100000
    178:    10 12'----11-00010   ->     0 13'0000000001000
    179:    10 12'-0-1011----0   ->     1 13'0000000001000
    180:    10 12'-1--01-00010   ->     2 13'0000000001000
    181:    10 12'001001-----0   ->     3 13'0000000001000
    182:    10 12'----11-01--0   ->     4 13'0000000001000
    183:    10 12'10-0011----0   ->     5 13'0000000001000
    184:    10 12'-1--01-01--0   ->     6 13'0000000001000
    185:    10 12'----11-001-0   ->     7 13'0000000001000
    186:    10 12'-0-1010----0   ->     8 13'0000000001000
    187:    10 12'-1--01-001-0   ->     9 13'0000000001000
    188:    10 12'-1--01-00000   ->    10 13'0000000001000
    189:    10 12'----11-00000   ->    10 13'0000000001000
    190:    10 12'----11-1---0   ->    10 13'0000000001000
    191:    10 12'-----0-----0   ->    10 13'0000000001000
    192:    10 12'10-0010----0   ->    11 13'0000000001000
    193:    10 12'-1--01-1---0   ->    12 13'0000000001000
    194:    10 12'000001-----0   ->    13 13'0000000001000
    195:    10 12'-----------1   ->    13 13'0000000001000
    196:    11 12'----11-00010   ->     0 13'0100000000000
    197:    11 12'-0-1011----0   ->     1 13'0100000000000
    198:    11 12'-1--01-00010   ->     2 13'0100000000000
    199:    11 12'001001-----0   ->     3 13'0100000000000
    200:    11 12'----11-01--0   ->     4 13'0100000000000
    201:    11 12'10-0011----0   ->     5 13'0100000000000
    202:    11 12'-1--01-01--0   ->     6 13'0100000000000
    203:    11 12'----11-001-0   ->     7 13'0100000000000
    204:    11 12'-0-1010----0   ->     8 13'0100000000000
    205:    11 12'-1--01-001-0   ->     9 13'0100000000000
    206:    11 12'----11-1---0   ->    10 13'0100000000000
    207:    11 12'-1--01-00000   ->    11 13'0100000000000
    208:    11 12'----11-00000   ->    11 13'0100000000000
    209:    11 12'10-0010----0   ->    11 13'0100000000000
    210:    11 12'-----0-----0   ->    11 13'0100000000000
    211:    11 12'-1--01-1---0   ->    12 13'0100000000000
    212:    11 12'000001-----0   ->    13 13'0100000000000
    213:    11 12'-----------1   ->    13 13'0100000000000
    214:    12 12'----11-00010   ->     0 13'0000010000000
    215:    12 12'-0-1011----0   ->     1 13'0000010000000
    216:    12 12'-1--01-00010   ->     2 13'0000010000000
    217:    12 12'001001-----0   ->     3 13'0000010000000
    218:    12 12'----11-01--0   ->     4 13'0000010000000
    219:    12 12'10-0011----0   ->     5 13'0000010000000
    220:    12 12'-1--01-01--0   ->     6 13'0000010000000
    221:    12 12'----11-001-0   ->     7 13'0000010000000
    222:    12 12'-0-1010----0   ->     8 13'0000010000000
    223:    12 12'-1--01-001-0   ->     9 13'0000010000000
    224:    12 12'----11-1---0   ->    10 13'0000010000000
    225:    12 12'10-0010----0   ->    11 13'0000010000000
    226:    12 12'-1--01-00000   ->    12 13'0000010000000
    227:    12 12'----11-00000   ->    12 13'0000010000000
    228:    12 12'-1--01-1---0   ->    12 13'0000010000000
    229:    12 12'-----0-----0   ->    12 13'0000010000000
    230:    12 12'000001-----0   ->    13 13'0000010000000
    231:    12 12'-----------1   ->    13 13'0000010000000
    232:    13 12'----11-00010   ->     0 13'0000000000000
    233:    13 12'-0-1011----0   ->     1 13'0000000000000
    234:    13 12'-1--01-00010   ->     2 13'0000000000000
    235:    13 12'001001-----0   ->     3 13'0000000000000
    236:    13 12'----11-01--0   ->     4 13'0000000000000
    237:    13 12'10-0011----0   ->     5 13'0000000000000
    238:    13 12'-1--01-01--0   ->     6 13'0000000000000
    239:    13 12'----11-001-0   ->     7 13'0000000000000
    240:    13 12'-0-1010----0   ->     8 13'0000000000000
    241:    13 12'-1--01-001-0   ->     9 13'0000000000000
    242:    13 12'----11-1---0   ->    10 13'0000000000000
    243:    13 12'10-0010----0   ->    11 13'0000000000000
    244:    13 12'-1--01-1---0   ->    12 13'0000000000000
    245:    13 12'-1--01-00000   ->    13 13'0000000000000
    246:    13 12'----11-00000   ->    13 13'0000000000000
    247:    13 12'-----0-----0   ->    13 13'0000000000000
    248:    13 12'000001-----0   ->    13 13'0000000000000
    249:    13 12'-----------1   ->    13 13'0000000000000

-------------------------------------

5.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\core.r_load_cases$1760' from module `\ORC_R32I'.

5.12. Executing OPT pass (performing simple optimizations).

5.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~15 debug messages>

5.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~111 debug messages>
Removed a total of 37 cells.

5.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

5.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

5.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\mem_access_controller.$procdff$1755 ($dff) from module ORC_R32I (D = $flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:104$910_Y [4:0], Q = \mem_access_controller.reset_index, rval = 5'00000).
Adding SRST signal on $flatten\csrs.$procdff$1759 ($dff) from module ORC_R32I (D = $flatten\csrs.$add$../../source/CSR.v:84$3_Y, Q = \csrs.r_cycle_count, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $flatten\csrs.$procdff$1758 ($dff) from module ORC_R32I (D = $flatten\csrs.$procmux$1708_Y, Q = \csrs.r_instr_count, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$1993 ($sdff) from module ORC_R32I (D = $flatten\csrs.$add$../../source/CSR.v:98$7_Y, Q = \csrs.r_instr_count).
Adding SRST signal on $flatten\csrs.$procdff$1757 ($dff) from module ORC_R32I (D = \csrs.i_slave_csr_read_stb, Q = \csrs.r_csr_read_ack, rval = 1'0).
Adding SRST signal on $flatten\csrs.$procdff$1756 ($dff) from module ORC_R32I (D = $flatten\csrs.$procmux$1703_Y, Q = \csrs.r_csr_read_data, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$1996 ($sdff) from module ORC_R32I (D = $flatten\csrs.$procmux$1701_Y, Q = \csrs.r_csr_read_data).
Adding SRST signal on $flatten\core.$procdff$1748 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1532_Y, Q = \core.r_decoded_instr, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$2002 ($sdff) from module ORC_R32I (D = $flatten\core.$procmux$1530_Y, Q = \core.r_decoded_instr).
Adding SRST signal on $flatten\core.$procdff$1747 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1560_Y, Q = \core.r_rd3, rval = 5'00000).
Adding EN signal on $auto$opt_dff.cc:702:run$2012 ($sdff) from module ORC_R32I (D = $flatten\core.$procmux$1558_Y, Q = \core.r_rd3).
Adding SRST signal on $flatten\core.$procdff$1746 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1582_Y, Q = \core.r_rd1, rval = 5'00000).
Adding EN signal on $auto$opt_dff.cc:702:run$2028 ($sdff) from module ORC_R32I (D = $flatten\core.$procmux$1580_Y, Q = \core.r_rd1).
Adding SRST signal on $flatten\core.$procdff$1745 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1616_Y [1:0], Q = \core.r_program_counter_state [1:0], rval = 2'01).
Adding SRST signal on $flatten\core.$procdff$1745 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1614_Y [3:2], Q = \core.r_program_counter_state [3:2], rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$2047 ($sdff) from module ORC_R32I (D = $flatten\core.$procmux$1614_Y [3], Q = \core.r_program_counter_state [3]).
Adding SRST signal on $flatten\core.$procdff$1744 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1624_Y, Q = \core.r_program_counter_valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$2055 ($sdff) from module ORC_R32I (D = 1'1, Q = \core.r_program_counter_valid).
Adding SRST signal on $flatten\core.$procdff$1743 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1660_Y, Q = \core.r_pc_fetch, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$2057 ($sdff) from module ORC_R32I (D = $flatten\core.$procmux$1658_Y, Q = \core.r_pc_fetch).
Adding SRST signal on $flatten\core.$procdff$1742 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1449_Y, Q = \core.r_master_read_addr, rval = 30'000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$2071 ($sdff) from module ORC_R32I (D = \core.w_master_addr [31:2], Q = \core.r_master_read_addr).
Adding SRST signal on $flatten\core.$procdff$1741 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1454_Y, Q = \core.r_master_read_ready, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$2075 ($sdff) from module ORC_R32I (D = 1'0, Q = \core.r_master_read_ready).
Adding SRST signal on $flatten\core.$procdff$1739 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1427_Y, Q = \core.r_master_write_select, rval = 4'0000).
Adding EN signal on $auto$opt_dff.cc:702:run$2077 ($sdff) from module ORC_R32I (D = \core.o_master_write_sel, Q = \core.r_master_write_select).
Adding SRST signal on $flatten\core.$procdff$1738 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1432_Y, Q = \core.r_master_write_addr, rval = 30'000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$2079 ($sdff) from module ORC_R32I (D = \core.w_master_addr [31:2], Q = \core.r_master_write_addr).
Adding SRST signal on $flatten\core.$procdff$1737 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1437_Y, Q = \core.r_master_write_ready, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$2083 ($sdff) from module ORC_R32I (D = 1'0, Q = \core.r_master_write_ready).
Adding SRST signal on $flatten\core.$procdff$1736 ($dff) from module ORC_R32I (D = $flatten\core.$procmux$1444_Y, Q = \core.r_s_data, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$2085 ($sdff) from module ORC_R32I (D = \core.w_s_data, Q = \core.r_s_data).

5.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 32 unused cells and 86 unused wires.
<suppressed ~33 debug messages>

5.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~5 debug messages>

5.12.9. Rerunning OPT passes. (Maybe there is more to do..)

5.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

5.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

5.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

5.12.13. Executing OPT_DFF pass (perform DFF optimizations).

5.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

5.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.12.16. Rerunning OPT passes. (Maybe there is more to do..)

5.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

5.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

5.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.12.20. Executing OPT_DFF pass (perform DFF optimizations).

5.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.12.23. Finished OPT passes. (There is nothing left to do.)

5.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 6) from port B of cell ORC_R32I.$auto$fsm_map.cc:77:implement_pattern_cache$1803 ($eq).
Removed top 2 bits (of 7) from port B of cell ORC_R32I.$auto$fsm_map.cc:77:implement_pattern_cache$1837 ($eq).
Removed top 5 bits (of 7) from port B of cell ORC_R32I.$auto$fsm_map.cc:77:implement_pattern_cache$1987 ($eq).
Removed cell ORC_R32I.$flatten\core.$procmux$1656 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1647 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1645 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1637 ($mux).
Removed top 2 bits (of 4) from mux cell ORC_R32I.$flatten\core.$procmux$1616 ($mux).
Removed top 1 bits (of 4) from mux cell ORC_R32I.$flatten\core.$procmux$1596 ($mux).
Removed top 1 bits (of 4) from mux cell ORC_R32I.$flatten\core.$procmux$1593 ($mux).
Removed top 1 bits (of 4) from mux cell ORC_R32I.$flatten\core.$procmux$1588 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1578 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1576 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1572 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1570 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1568 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1556 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1554 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1547 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1545 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1543 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1509 ($mux).
Removed cell ORC_R32I.$flatten\core.$procmux$1503 ($mux).
Removed top 28 bits (of 32) from mux cell ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:595$1372 ($mux).
Removed top 28 bits (of 32) from mux cell ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:605$1371 ($mux).
Removed top 28 bits (of 32) from mux cell ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:596$1368 ($mux).
Removed top 28 bits (of 32) from mux cell ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:601$1367 ($mux).
Removed top 28 bits (of 32) from mux cell ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:597$1362 ($mux).
Removed top 28 bits (of 32) from mux cell ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:598$1360 ($mux).
Removed top 2 bits (of 4) from mux cell ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:599$1358 ($mux).
Removed top 1 bits (of 2) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:506$1312 ($eq).
Removed top 1 bits (of 6) from port B of cell ORC_R32I.$auto$fsm_map.cc:77:implement_pattern_cache$1908 ($eq).
Removed top 29 bits (of 32) from port B of cell ORC_R32I.$flatten\core.$add$../../source/Hart_Core.v:349$1234 ($add).
Removed top 1 bits (of 2) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:281$1193 ($eq).
Removed top 1 bits (of 2) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:280$1189 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:222$1075 ($mux).
Removed top 1 bits (of 5) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:171$963 ($eq).
Removed top 1 bits (of 5) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:169$959 ($eq).
Removed top 2 bits (of 5) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:168$957 ($eq).
Removed top 2 bits (of 5) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:164$949 ($eq).
Removed top 1 bits (of 5) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:163$947 ($eq).
Removed top 27 bits (of 32) from mux cell ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:161$946 ($mux).
Removed top 1 bits (of 3) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:154$931 ($eq).
Removed top 1 bits (of 3) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:153$930 ($eq).
Removed top 2 bits (of 3) from port B of cell ORC_R32I.$flatten\core.$eq$../../source/Hart_Core.v:152$929 ($eq).
Removed cell ORC_R32I.$flatten\csrs.$procmux$1695 ($mux).
Removed top 31 bits (of 32) from port B of cell ORC_R32I.$flatten\csrs.$add$../../source/CSR.v:98$7 ($add).
Removed top 31 bits (of 32) from port B of cell ORC_R32I.$flatten\csrs.$add$../../source/CSR.v:84$3 ($add).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$flatten\mem_access_controller.$procdff$1754 ($dff).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$flatten\mem_access_controller.$procdff$1751 ($dff).
Removed cell ORC_R32I.$flatten\mem_access_controller.$procmux$1687 ($mux).
Removed cell ORC_R32I.$flatten\mem_access_controller.$procmux$1684 ($mux).
Removed cell ORC_R32I.$flatten\mem_access_controller.$procmux$1682 ($mux).
Removed cell ORC_R32I.$flatten\mem_access_controller.$procmux$1679 ($mux).
Removed cell ORC_R32I.$flatten\mem_access_controller.$procmux$1672 ($mux).
Removed cell ORC_R32I.$flatten\mem_access_controller.$procmux$1669 ($mux).
Removed top 31 bits (of 32) from port B of cell ORC_R32I.$flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:104$910 ($add).
Removed top 27 bits (of 32) from port Y of cell ORC_R32I.$flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:104$910 ($add).
Removed top 27 bits (of 32) from mux cell ORC_R32I.$flatten\mem_access_controller.$ternary$../../source/Memory_Backplane.v:85$897 ($mux).
Removed top 27 bits (of 32) from mux cell ORC_R32I.$flatten\mem_access_controller.$ternary$../../source/Memory_Backplane.v:86$895 ($mux).
Removed top 1 bits (of 4) from wire ORC_R32I.$flatten\core.$procmux$1588_Y.
Removed top 1 bits (of 4) from wire ORC_R32I.$flatten\core.$procmux$1593_Y.
Removed top 1 bits (of 4) from wire ORC_R32I.$flatten\core.$procmux$1596_Y.
Removed top 2 bits (of 4) from wire ORC_R32I.$flatten\core.$procmux$1616_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:222$1075_Y.
Removed top 28 bits (of 32) from wire ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:596$1368_Y.
Removed top 28 bits (of 32) from wire ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:597$1362_Y.
Removed top 28 bits (of 32) from wire ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:598$1360_Y.
Removed top 2 bits (of 4) from wire ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:599$1358_Y.
Removed top 28 bits (of 32) from wire ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:601$1367_Y.
Removed top 28 bits (of 32) from wire ORC_R32I.$flatten\core.$ternary$../../source/Hart_Core.v:605$1371_Y.
Removed top 27 bits (of 32) from wire ORC_R32I.$flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:104$910_Y.
Removed top 27 bits (of 32) from wire ORC_R32I.$flatten\mem_access_controller.$ternary$../../source/Memory_Backplane.v:86$895_Y.

5.14. Executing PEEPOPT pass (run peephole optimizers).

5.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 39 unused wires.
<suppressed ~1 debug messages>

5.16. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module ORC_R32I that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\mem_access_controller.$memrd$\general_regs$../../source/Memory_Backplane.v:134$921 ($memrd):
    Cell is always active. Therefore no sharing is possible.
  Analyzing resource sharing options for $flatten\core.$sshr$../../source/Hart_Core.v:225$1081 ($sshr):
    Found 1 activation_patterns using ctrl signal { \mem_access_controller.i_slave_core_write_stb \core.w_lui \core.w_auipc \core.w_jal \core.w_jalr \core.w_add \core.w_sub \core.w_sll \core.w_slt \core.w_xor \core.w_srl \core.w_sra $flatten\core.$logic_or$../../source/Hart_Core.v:477$1299_Y \i_master_read_ack \i_reset_sync }.
    No candidates found.
  Analyzing resource sharing options for $flatten\core.$shr$../../source/Hart_Core.v:224$1079 ($shr):
    Found 1 activation_patterns using ctrl signal { \mem_access_controller.i_slave_core_write_stb \core.w_lui \core.w_auipc \core.w_jal \core.w_jalr \core.w_add \core.w_sub \core.w_sll \core.w_slt \core.w_xor \core.w_srl $flatten\core.$logic_or$../../source/Hart_Core.v:477$1299_Y \i_master_read_ack \i_reset_sync }.
    No candidates found.
  Analyzing resource sharing options for $flatten\core.$shl$../../source/Hart_Core.v:221$1072 ($shl):
    Found 1 activation_patterns using ctrl signal { \mem_access_controller.i_slave_core_write_stb \core.w_lui \core.w_auipc \core.w_jal \core.w_jalr \core.w_add \core.w_sub \core.w_sll $flatten\core.$logic_or$../../source/Hart_Core.v:477$1299_Y \i_master_read_ack \i_reset_sync }.
    No candidates found.

5.17. Executing TECHMAP pass (map to technology primitives).

5.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

5.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~114 debug messages>

5.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~2 debug messages>

5.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

5.20. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$flatten\mem_access_controller.$memwr$\general_regs$../../source/Memory_Backplane.v:0$922' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$flatten\mem_access_controller.$memwr$\general_regs$../../source/Memory_Backplane.v:0$923' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$flatten\mem_access_controller.$memrd$\general_regs$../../source/Memory_Backplane.v:133$920' in module `\ORC_R32I': no (compatible) $dff found.
Checking cell `$flatten\mem_access_controller.$memrd$\general_regs$../../source/Memory_Backplane.v:134$921' in module `\ORC_R32I': no (compatible) $dff found.

5.21. Executing WREDUCE pass (reducing word size of cells).

5.22. Executing TECHMAP pass (map to technology primitives).

5.22.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

5.22.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL16X16'.
Successfully finished Verilog frontend.

5.22.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

5.23. Executing OPT_EXPR pass (perform const folding).

5.24. Executing WREDUCE pass (reducing word size of cells).

5.25. Executing ICE40_DSP pass (map multipliers).

5.26. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ORC_R32I:
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:219$1068 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:242$1121 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:243$1123 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:341$1232 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:349$1234 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:465$1292 ($add).
  creating $macc model for $flatten\core.$sub$../../source/Hart_Core.v:220$1070 ($sub).
  creating $macc model for $flatten\csrs.$add$../../source/CSR.v:84$3 ($add).
  creating $macc model for $flatten\csrs.$add$../../source/CSR.v:98$7 ($add).
  creating $macc model for $flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:104$910 ($add).
  creating $alu model for $macc $flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:104$910.
  creating $alu model for $macc $flatten\csrs.$add$../../source/CSR.v:98$7.
  creating $alu model for $macc $flatten\csrs.$add$../../source/CSR.v:84$3.
  creating $alu model for $macc $flatten\core.$sub$../../source/Hart_Core.v:220$1070.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:465$1292.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:349$1234.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:341$1232.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:243$1123.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:242$1121.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:219$1068.
  creating $alu model for $flatten\core.$ge$../../source/Hart_Core.v:237$1104 ($ge): new $alu
  creating $alu model for $flatten\core.$ge$../../source/Hart_Core.v:239$1108 ($ge): new $alu
  creating $alu model for $flatten\core.$lt$../../source/Hart_Core.v:222$1074 ($lt): merged with $flatten\core.$sub$../../source/Hart_Core.v:220$1070.
  creating $alu model for $flatten\core.$lt$../../source/Hart_Core.v:236$1102 ($lt): merged with $flatten\core.$ge$../../source/Hart_Core.v:237$1104.
  creating $alu model for $flatten\core.$lt$../../source/Hart_Core.v:238$1106 ($lt): merged with $flatten\core.$ge$../../source/Hart_Core.v:239$1108.
  creating $alu model for $flatten\core.$eq$../../source/Hart_Core.v:234$1098 ($eq): merged with $flatten\core.$ge$../../source/Hart_Core.v:239$1108.
  creating $alu model for $flatten\core.$ne$../../source/Hart_Core.v:235$1100 ($ne): merged with $flatten\core.$ge$../../source/Hart_Core.v:239$1108.
  creating $alu cell for $flatten\core.$ge$../../source/Hart_Core.v:239$1108, $flatten\core.$lt$../../source/Hart_Core.v:238$1106, $flatten\core.$eq$../../source/Hart_Core.v:234$1098, $flatten\core.$ne$../../source/Hart_Core.v:235$1100: $auto$alumacc.cc:485:replace_alu$2102
  creating $alu cell for $flatten\core.$ge$../../source/Hart_Core.v:237$1104, $flatten\core.$lt$../../source/Hart_Core.v:236$1102: $auto$alumacc.cc:485:replace_alu$2117
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:242$1121: $auto$alumacc.cc:485:replace_alu$2132
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:243$1123: $auto$alumacc.cc:485:replace_alu$2135
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:341$1232: $auto$alumacc.cc:485:replace_alu$2138
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:349$1234: $auto$alumacc.cc:485:replace_alu$2141
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:465$1292: $auto$alumacc.cc:485:replace_alu$2144
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:219$1068: $auto$alumacc.cc:485:replace_alu$2147
  creating $alu cell for $flatten\core.$sub$../../source/Hart_Core.v:220$1070, $flatten\core.$lt$../../source/Hart_Core.v:222$1074: $auto$alumacc.cc:485:replace_alu$2150
  creating $alu cell for $flatten\csrs.$add$../../source/CSR.v:84$3: $auto$alumacc.cc:485:replace_alu$2155
  creating $alu cell for $flatten\csrs.$add$../../source/CSR.v:98$7: $auto$alumacc.cc:485:replace_alu$2158
  creating $alu cell for $flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:104$910: $auto$alumacc.cc:485:replace_alu$2161
  created 12 $alu and 0 $macc cells.

5.27. Executing OPT pass (performing simple optimizations).

5.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~1 debug messages>

5.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

5.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

5.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

5.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$opt_dff.cc:764:run$2027 ($sdffe) from module ORC_R32I (D = \i_inst_read_data [11:7], Q = \core.r_rd3).

5.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 7 unused cells and 17 unused wires.
<suppressed ~8 debug messages>

5.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.27.9. Rerunning OPT passes. (Maybe there is more to do..)

5.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

5.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$2165: { $auto$opt_dff.cc:217:make_patterns_logic$2019 $auto$opt_dff.cc:217:make_patterns_logic$2017 $auto$opt_dff.cc:217:make_patterns_logic$2021 $auto$rtlil.cc:2121:Not$2008 $auto$opt_dff.cc:217:make_patterns_logic$2013 \core.w_csr $auto$opt_dff.cc:217:make_patterns_logic$2015 }
  Optimizing cells in module \ORC_R32I.
Performed a total of 1 changes.

5.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.27.13. Executing OPT_DFF pass (perform DFF optimizations).

5.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

5.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.27.16. Rerunning OPT passes. (Maybe there is more to do..)

5.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

5.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

5.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.27.20. Executing OPT_DFF pass (perform DFF optimizations).

5.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.27.23. Finished OPT passes. (There is nothing left to do.)

5.28. Executing MEMORY pass.

5.28.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.28.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$flatten\mem_access_controller.$memrd$\general_regs$../../source/Memory_Backplane.v:133$920' in module `\ORC_R32I': no (compatible) $dff found.
Checking cell `$flatten\mem_access_controller.$memrd$\general_regs$../../source/Memory_Backplane.v:134$921' in module `\ORC_R32I': no (compatible) $dff found.

5.28.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.28.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory ORC_R32I.mem_access_controller.general_regs by address:
  New clock domain: posedge \i_clk
    Port 0 ($flatten\mem_access_controller.$memwr$\general_regs$../../source/Memory_Backplane.v:0$922) has addr \mem_access_controller.reset_index.
      Active bits: 11111111111111111111111111111111
    Port 1 ($flatten\mem_access_controller.$memwr$\general_regs$../../source/Memory_Backplane.v:0$923) has addr \mem_access_controller.w_write_addr.
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory ORC_R32I.mem_access_controller.general_regs using sat-based resource sharing:
  Port 0 ($flatten\mem_access_controller.$memwr$\general_regs$../../source/Memory_Backplane.v:0$922) on posedge \i_clk: considered
  Port 1 ($flatten\mem_access_controller.$memwr$\general_regs$../../source/Memory_Backplane.v:0$923) on posedge \i_clk: considered
  Common input cone for all EN signals: 31 cells.
  Size of unconstrained SAT problem: 237 variables, 605 clauses
  Merging port 0 into port 1.

5.28.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.28.6. Executing MEMORY_COLLECT pass (generating $mem cells).

5.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.30. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing ORC_R32I.mem_access_controller.general_regs:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  No acceptable bram resources found.

5.31. Executing TECHMAP pass (map to technology primitives).

5.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

5.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

5.32. Executing ICE40_BRAMINIT pass.

5.33. Executing OPT pass (performing simple optimizations).

5.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~32 debug messages>

5.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.33.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$opt_dff.cc:764:run$2070 ($sdffe) from module ORC_R32I (D = $flatten\core.$procmux$1658_Y [1:0], Q = \core.r_pc_fetch [1:0]).

5.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

5.33.5. Rerunning OPT passes. (Removed registers in this run.)

5.33.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.33.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.33.8. Executing OPT_DFF pass (perform DFF optimizations).

5.33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.33.10. Finished fast OPT passes.

5.34. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \mem_access_controller.general_regs in module \ORC_R32I:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

5.35. Executing OPT pass (performing simple optimizations).

5.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~10 debug messages>

5.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$memory_share.cc:646:consolidate_wr_using_sat$2174: $auto$rtlil.cc:2125:ReduceOr$2168 -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

5.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$2183: { $auto$opt_dff.cc:217:make_patterns_logic$2017 $auto$opt_dff.cc:217:make_patterns_logic$2178 $auto$opt_dff.cc:217:make_patterns_logic$2021 $auto$rtlil.cc:2121:Not$2008 $auto$opt_dff.cc:217:make_patterns_logic$2180 $auto$opt_dff.cc:217:make_patterns_logic$2013 $auto$opt_dff.cc:217:make_patterns_logic$2003 }
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1588:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$2087 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$2087 [2:1]
      New connections: $auto$wreduce.cc:454:run$2087 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1590:
      Old ports: A=4'0000, B={ 1'0 $auto$wreduce.cc:454:run$2087 [2:0] }, Y=$flatten\core.$procmux$1590_Y
      New ports: A=3'000, B=$auto$wreduce.cc:454:run$2087 [2:0], Y=$flatten\core.$procmux$1590_Y [2:0]
      New connections: $flatten\core.$procmux$1590_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1596:
      Old ports: A=3'100, B=3'000, Y=$auto$wreduce.cc:454:run$2089 [2:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$2089 [2]
      New connections: $auto$wreduce.cc:454:run$2089 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1607:
      Old ports: A=4'0010, B=4'1000, Y=$flatten\core.$procmux$1607_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\core.$procmux$1607_Y [3] $flatten\core.$procmux$1607_Y [1] }
      New connections: { $flatten\core.$procmux$1607_Y [2] $flatten\core.$procmux$1607_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:158$936:
      Old ports: A=8'00000000, B=8'10000000, Y=$flatten\core.$ternary$../../source/Hart_Core.v:158$936_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:158$936_Y [7]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:158$936_Y [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:180$989:
      Old ports: A=21'000000000000000000000, B=21'111111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [20:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:180$989_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:181$991:
      Old ports: A=20'00000000000000000000, B=20'11111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [19:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:181$991_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:230$1095:
      Old ports: A=11'00000000000, B=11'11111111111, Y=\core.w_j_simm [31:21]
      New ports: A=1'0, B=1'1, Y=\core.w_j_simm [21]
      New connections: \core.w_j_simm [31:22] = { \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:246$1127:
      Old ports: A=25'0000000000000000000000000, B=25'1111111111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [24:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:246$1127_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:247$1130:
      Old ports: A=25'0000000000000000000000000, B=25'1111111111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [24:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:247$1130_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:248$1133:
      Old ports: A=25'0000000000000000000000000, B=25'1111111111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [24:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:248$1133_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:249$1136:
      Old ports: A=25'0000000000000000000000000, B=25'1111111111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [24:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:249$1136_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:254$1143:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [15:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:254$1143_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:261$1165:
      Old ports: A=\core.i_master_core1_read_data, B={ \core.i_master_core1_read_data [15:0] \core.i_master_core1_read_data [15:0] }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:261$1165_Y
      New ports: A=\core.i_master_core1_read_data [31:16], B=\core.i_master_core1_read_data [15:0], Y=$flatten\core.$ternary$../../source/Hart_Core.v:261$1165_Y [31:16]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:261$1165_Y [15:0] = \core.i_master_core1_read_data [15:0]
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:558$1329:
      Old ports: A={ \core.r_master_read_addr 2'00 }, B=0, Y=$flatten\core.$ternary$../../source/Hart_Core.v:558$1329_Y
      New ports: A=\core.r_master_read_addr, B=30'000000000000000000000000000000, Y=$flatten\core.$ternary$../../source/Hart_Core.v:558$1329_Y [31:2]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:558$1329_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:592$1347:
      Old ports: A={ \core.r_master_write_addr 2'00 }, B=0, Y=$flatten\core.$ternary$../../source/Hart_Core.v:592$1347_Y
      New ports: A=\core.r_master_write_addr, B=30'000000000000000000000000000000, Y=$flatten\core.$ternary$../../source/Hart_Core.v:592$1347_Y [31:2]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:592$1347_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:598$1360:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$2095 [1:0] }, B=4'0100, Y=$auto$wreduce.cc:454:run$2094 [3:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$2095 [1:0] }, B=3'100, Y=$auto$wreduce.cc:454:run$2094 [2:0]
      New connections: $auto$wreduce.cc:454:run$2094 [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:602$1365:
      Old ports: A=4'0011, B=4'1100, Y=$flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y [2] $flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y [0] }
      New connections: { $flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y [3] $flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y [1] } = { $flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y [2] $flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:617$1379:
      Old ports: A=4'0000, B=4'1000, Y=$flatten\core.$ternary$../../source/Hart_Core.v:617$1379_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:617$1379_Y [3]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:617$1379_Y [2:0] = 3'000
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1590:
      Old ports: A=3'000, B=$auto$wreduce.cc:454:run$2087 [2:0], Y=$flatten\core.$procmux$1590_Y [2:0]
      New ports: A=2'00, B=$auto$wreduce.cc:454:run$2087 [2:1], Y=$flatten\core.$procmux$1590_Y [2:1]
      New connections: $flatten\core.$procmux$1590_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1599:
      Old ports: A={ 1'1 $auto$wreduce.cc:454:run$2089 [2:0] }, B=4'0010, Y=$flatten\core.$procmux$1599_Y
      New ports: A={ 1'1 $auto$wreduce.cc:454:run$2089 [2] 1'0 }, B=3'001, Y=$flatten\core.$procmux$1599_Y [3:1]
      New connections: $flatten\core.$procmux$1599_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1610:
      Old ports: A=$flatten\core.$procmux$1607_Y, B=4'0100, Y=$flatten\core.$procmux$1610_Y
      New ports: A={ $flatten\core.$procmux$1607_Y [3] 1'0 $flatten\core.$procmux$1607_Y [1] }, B=3'010, Y=$flatten\core.$procmux$1610_Y [3:1]
      New connections: $flatten\core.$procmux$1610_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:157$937:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:158$936_Y, B=8'01000000, Y=$flatten\core.$ternary$../../source/Hart_Core.v:157$937_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:158$936_Y [7] 1'0 }, B=2'01, Y=$flatten\core.$ternary$../../source/Hart_Core.v:157$937_Y [7:6]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:157$937_Y [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:260$1166:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:261$1165_Y, B={ \core.i_master_core1_read_data [7:0] \core.i_master_core1_read_data [7:0] \core.i_master_core1_read_data [7:0] \core.i_master_core1_read_data [7:0] }, Y=\core.w_s_data
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:261$1165_Y [31:16] \core.i_master_core1_read_data [15:8] }, B={ \core.i_master_core1_read_data [7:0] \core.i_master_core1_read_data [7:0] \core.i_master_core1_read_data [7:0] }, Y=\core.w_s_data [31:8]
      New connections: \core.w_s_data [7:0] = \core.i_master_core1_read_data [7:0]
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:557$1330:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:558$1329_Y, B={ \core.w_master_addr [31:2] 2'00 }, Y=\o_master_read_addr
      New ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:558$1329_Y [31:2], B=\core.w_master_addr [31:2], Y=\o_master_read_addr [31:2]
      New connections: \o_master_read_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:591$1348:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:592$1347_Y, B={ \core.w_master_addr [31:2] 2'00 }, Y=\o_master_write_addr
      New ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:592$1347_Y [31:2], B=\core.w_master_addr [31:2], Y=\o_master_write_addr [31:2]
      New connections: \o_master_write_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:601$1367:
      Old ports: A=4'1111, B=$flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y, Y=$auto$wreduce.cc:454:run$2096 [3:0]
      New ports: A=2'11, B={ $flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y [2] $flatten\core.$ternary$../../source/Hart_Core.v:602$1365_Y [0] }, Y={ $auto$wreduce.cc:454:run$2096 [2] $auto$wreduce.cc:454:run$2096 [0] }
      New connections: { $auto$wreduce.cc:454:run$2096 [3] $auto$wreduce.cc:454:run$2096 [1] } = { $auto$wreduce.cc:454:run$2096 [2] $auto$wreduce.cc:454:run$2096 [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:616$1380:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:617$1379_Y, B=4'0100, Y=$flatten\core.$ternary$../../source/Hart_Core.v:616$1380_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:617$1379_Y [3] 1'0 }, B=2'01, Y=$flatten\core.$ternary$../../source/Hart_Core.v:616$1380_Y [3:2]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:616$1380_Y [1:0] = 2'00
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1601:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$2087 [2:0] }, B=$flatten\core.$procmux$1599_Y, Y=$flatten\core.$procmux$1601_Y
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$2087 [2:1] }, B=$flatten\core.$procmux$1599_Y [3:1], Y=$flatten\core.$procmux$1601_Y [3:1]
      New connections: $flatten\core.$procmux$1601_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1612:
      Old ports: A=4'0010, B=$flatten\core.$procmux$1610_Y, Y=$flatten\core.$procmux$1612_Y
      New ports: A=3'001, B=$flatten\core.$procmux$1610_Y [3:1], Y=$flatten\core.$procmux$1612_Y [3:1]
      New connections: $flatten\core.$procmux$1612_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:156$938:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:157$937_Y, B=8'00100000, Y=$flatten\core.$ternary$../../source/Hart_Core.v:156$938_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:157$937_Y [7:6] 1'0 }, B=3'001, Y=$flatten\core.$ternary$../../source/Hart_Core.v:156$938_Y [7:5]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:156$938_Y [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:615$1381:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:616$1380_Y, B=4'0010, Y=$flatten\core.$ternary$../../source/Hart_Core.v:615$1381_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:616$1380_Y [3:2] 1'0 }, B=3'001, Y=$flatten\core.$ternary$../../source/Hart_Core.v:615$1381_Y [3:1]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:615$1381_Y [0] = 1'0
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1603:
      Old ports: A=$flatten\core.$procmux$1590_Y, B=$flatten\core.$procmux$1601_Y, Y=$flatten\core.$procmux$1603_Y
      New ports: A={ 1'0 $flatten\core.$procmux$1590_Y [2:1] }, B=$flatten\core.$procmux$1601_Y [3:1], Y=$flatten\core.$procmux$1603_Y [3:1]
      New connections: $flatten\core.$procmux$1603_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:155$939:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:156$938_Y, B=8'00010000, Y=$flatten\core.$ternary$../../source/Hart_Core.v:155$939_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:156$938_Y [7:5] 1'0 }, B=4'0001, Y=$flatten\core.$ternary$../../source/Hart_Core.v:155$939_Y [7:4]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:155$939_Y [3:0] = 4'0000
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1614:
      Old ports: A=$flatten\core.$procmux$1603_Y, B={ $flatten\core.$procmux$1612_Y [3:1] 1'0 }, Y=$flatten\core.$procmux$1614_Y
      New ports: A=$flatten\core.$procmux$1603_Y [3:1], B=$flatten\core.$procmux$1612_Y [3:1], Y=$flatten\core.$procmux$1614_Y [3:1]
      New connections: $flatten\core.$procmux$1614_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:154$940:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:155$939_Y, B=8'00001000, Y=$flatten\core.$ternary$../../source/Hart_Core.v:154$940_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:155$939_Y [7:4] 1'0 }, B=5'00001, Y=$flatten\core.$ternary$../../source/Hart_Core.v:154$940_Y [7:3]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:154$940_Y [2:0] = 3'000
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1616:
      Old ports: A=$flatten\core.$procmux$1614_Y [1:0], B=2'10, Y=$auto$wreduce.cc:454:run$2090 [1:0]
      New ports: A=$flatten\core.$procmux$1614_Y [1], B=1'1, Y=$auto$wreduce.cc:454:run$2090 [1]
      New connections: $auto$wreduce.cc:454:run$2090 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:153$941:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:154$940_Y, B=8'00000100, Y=$flatten\core.$ternary$../../source/Hart_Core.v:153$941_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:154$940_Y [7:3] 1'0 }, B=6'000001, Y=$flatten\core.$ternary$../../source/Hart_Core.v:153$941_Y [7:2]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:153$941_Y [1:0] = 2'00
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:152$942:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:153$941_Y, B=8'00000010, Y=$flatten\core.$ternary$../../source/Hart_Core.v:152$942_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:153$941_Y [7:2] 1'0 }, B=7'0000001, Y=$flatten\core.$ternary$../../source/Hart_Core.v:152$942_Y [7:1]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:152$942_Y [0] = 1'0
  Optimizing cells in module \ORC_R32I.
Performed a total of 40 changes.

5.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

5.35.6. Executing OPT_DFF pass (perform DFF optimizations).

5.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 101 unused wires.
<suppressed ~1 debug messages>

5.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.35.9. Rerunning OPT passes. (Maybe there is more to do..)

5.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

5.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

5.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.35.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\mem_access_controller.general_regs[9]$2203 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[9]).
Adding EN signal on $memory\mem_access_controller.general_regs[8]$2201 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[8]).
Adding EN signal on $memory\mem_access_controller.general_regs[7]$2199 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[7]).
Adding EN signal on $memory\mem_access_controller.general_regs[6]$2197 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[6]).
Adding EN signal on $memory\mem_access_controller.general_regs[5]$2195 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[5]).
Adding EN signal on $memory\mem_access_controller.general_regs[4]$2193 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[4]).
Adding EN signal on $memory\mem_access_controller.general_regs[3]$2191 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[3]).
Adding EN signal on $memory\mem_access_controller.general_regs[31]$2247 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[31]).
Adding EN signal on $memory\mem_access_controller.general_regs[30]$2245 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[30]).
Adding EN signal on $memory\mem_access_controller.general_regs[2]$2189 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[2]).
Adding EN signal on $memory\mem_access_controller.general_regs[29]$2243 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[29]).
Adding EN signal on $memory\mem_access_controller.general_regs[28]$2241 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[28]).
Adding EN signal on $memory\mem_access_controller.general_regs[27]$2239 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[27]).
Adding EN signal on $memory\mem_access_controller.general_regs[26]$2237 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[26]).
Adding EN signal on $memory\mem_access_controller.general_regs[25]$2235 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[25]).
Adding EN signal on $memory\mem_access_controller.general_regs[24]$2233 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[24]).
Adding EN signal on $memory\mem_access_controller.general_regs[23]$2231 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[23]).
Adding EN signal on $memory\mem_access_controller.general_regs[22]$2229 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[22]).
Adding EN signal on $memory\mem_access_controller.general_regs[21]$2227 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[21]).
Adding EN signal on $memory\mem_access_controller.general_regs[20]$2225 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[20]).
Adding EN signal on $memory\mem_access_controller.general_regs[1]$2187 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[1]).
Adding EN signal on $memory\mem_access_controller.general_regs[19]$2223 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[19]).
Adding EN signal on $memory\mem_access_controller.general_regs[18]$2221 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[18]).
Adding EN signal on $memory\mem_access_controller.general_regs[17]$2219 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[17]).
Adding EN signal on $memory\mem_access_controller.general_regs[16]$2217 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[16]).
Adding EN signal on $memory\mem_access_controller.general_regs[15]$2215 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[15]).
Adding EN signal on $memory\mem_access_controller.general_regs[14]$2213 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[14]).
Adding EN signal on $memory\mem_access_controller.general_regs[13]$2211 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[13]).
Adding EN signal on $memory\mem_access_controller.general_regs[12]$2209 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[12]).
Adding EN signal on $memory\mem_access_controller.general_regs[11]$2207 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[11]).
Adding EN signal on $memory\mem_access_controller.general_regs[10]$2205 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[10]).
Adding EN signal on $memory\mem_access_controller.general_regs[0]$2185 ($dff) from module ORC_R32I (D = \mem_access_controller.w_write_data, Q = \mem_access_controller.general_regs[0]).

5.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 32 unused cells and 32 unused wires.
<suppressed ~33 debug messages>

5.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.35.16. Rerunning OPT passes. (Maybe there is more to do..)

5.35.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

5.35.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

5.35.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.35.20. Executing OPT_DFF pass (perform DFF optimizations).

5.35.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.35.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.35.23. Finished OPT passes. (There is nothing left to do.)

5.36. Executing ICE40_WRAPCARRY pass (wrap carries).

5.37. Executing TECHMAP pass (map to technology primitives).

5.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.37.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

5.37.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=31\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$0c11a8b0f7bc0abe97ee32fac977a1bbaae6bdf7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~1971 debug messages>

5.38. Executing OPT pass (performing simple optimizations).

5.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~1413 debug messages>

5.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~1770 debug messages>
Removed a total of 590 cells.

5.38.3. Executing OPT_DFF pass (perform DFF optimizations).

5.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 360 unused cells and 531 unused wires.
<suppressed ~361 debug messages>

5.38.5. Finished fast OPT passes.

5.39. Executing ICE40_OPT pass (performing simple optimizations).

5.39.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32I.$auto$alumacc.cc:485:replace_alu$2141.slice[0].carry: CO=\core.r_pc_fetch [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32I.$auto$alumacc.cc:485:replace_alu$2155.slice[0].carry: CO=\csrs.r_cycle_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32I.$auto$alumacc.cc:485:replace_alu$2158.slice[0].carry: CO=\csrs.r_instr_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32I.$auto$alumacc.cc:485:replace_alu$2161.slice[0].carry: CO=\mem_access_controller.reset_index [0]

5.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~7 debug messages>

5.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.39.4. Executing OPT_DFF pass (perform DFF optimizations).

5.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.39.6. Rerunning OPT passes. (Removed registers in this run.)

5.39.7. Running ICE40 specific optimizations.

5.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.39.10. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$6115 ($_SDFFE_PP0P_) from module ORC_R32I (D = $flatten\core.$procmux$1635_Y [1], Q = \core.r_pc_fetch [1]).
Adding EN signal on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$6114 ($_SDFFE_PP0P_) from module ORC_R32I (D = \core.w_jump_value [0], Q = \core.r_pc_fetch [0]).

5.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

5.39.12. Rerunning OPT passes. (Removed registers in this run.)

5.39.13. Running ICE40 specific optimizations.

5.39.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~3 debug messages>

5.39.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.39.16. Executing OPT_DFF pass (perform DFF optimizations).

5.39.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

5.39.18. Rerunning OPT passes. (Removed registers in this run.)

5.39.19. Running ICE40 specific optimizations.

5.39.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.39.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.39.22. Executing OPT_DFF pass (perform DFF optimizations).

5.39.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.39.24. Finished OPT passes. (There is nothing left to do.)

5.40. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

5.41. Executing TECHMAP pass (map to technology primitives).

5.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

5.41.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~1371 debug messages>

5.42. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.43. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ORC_R32I.$auto$alumacc.cc:485:replace_alu$2141.slice[0].carry ($lut).
Mapping ORC_R32I.$auto$alumacc.cc:485:replace_alu$2155.slice[0].carry ($lut).
Mapping ORC_R32I.$auto$alumacc.cc:485:replace_alu$2158.slice[0].carry ($lut).
Mapping ORC_R32I.$auto$alumacc.cc:485:replace_alu$2161.slice[0].carry ($lut).

5.44. Executing ICE40_OPT pass (performing simple optimizations).

5.44.1. Running ICE40 specific optimizations.

5.44.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~201 debug messages>

5.44.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~975 debug messages>
Removed a total of 325 cells.

5.44.4. Executing OPT_DFF pass (perform DFF optimizations).

5.44.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 7312 unused wires.
<suppressed ~1 debug messages>

5.44.6. Rerunning OPT passes. (Removed registers in this run.)

5.44.7. Running ICE40 specific optimizations.

5.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

5.44.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

5.44.10. Executing OPT_DFF pass (perform DFF optimizations).

5.44.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

5.44.12. Finished OPT passes. (There is nothing left to do.)

5.45. Executing TECHMAP pass (map to technology primitives).

5.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

5.45.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

5.46. Executing ABC pass (technology mapping using ABC).

5.46.1. Extracting gate netlist of module `\ORC_R32I' to `<abc-temp-dir>/input.blif'..
Extracted 4987 gates and 6596 wires to a netlist network with 1607 inputs and 456 outputs.

5.46.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1134.
ABC: Participating nodes from both networks       =    2562.
ABC: Participating nodes from the first network   =    1174. (  36.38 % of nodes)
ABC: Participating nodes from the second network  =    1388. (  43.01 % of nodes)
ABC: Node pairs (any polarity)                    =    1173. (  36.35 % of names can be moved)
ABC: Node pairs (same polarity)                   =     711. (  22.03 % of names can be moved)
ABC: Total runtime =     0.38 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

5.46.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     3226
ABC RESULTS:        internal signals:     4533
ABC RESULTS:           input signals:     1607
ABC RESULTS:          output signals:      456
Removing temp directory.

5.47. Executing ICE40_WRAPCARRY pass (wrap carries).

5.48. Executing TECHMAP pass (map to technology primitives).

5.48.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

5.48.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 72 unused cells and 2625 unused wires.

5.49. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3565
  1-LUT               44
  2-LUT              342
  3-LUT             1109
  4-LUT             2070

Eliminating LUTs.
Number of LUTs:     3565
  1-LUT               44
  2-LUT              342
  3-LUT             1109
  4-LUT             2070

Combining LUTs.
Number of LUTs:     3552
  1-LUT               43
  2-LUT              334
  3-LUT             1093
  4-LUT             2082

Eliminated 0 LUTs.
Combined 13 LUTs.
<suppressed ~26477 debug messages>

5.50. Executing TECHMAP pass (map to technology primitives).

5.50.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.50.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010100010000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100110011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110001010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001000101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001110101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110001011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100110010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001111011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001110101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001110110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
No more expansions possible.
<suppressed ~6194 debug messages>
Removed 0 unused cells and 8526 unused wires.

5.51. Executing AUTONAME pass.
Renamed 260201 objects in module ORC_R32I (136 iterations).
<suppressed ~6798 debug messages>

5.52. Executing HIERARCHY pass (managing design hierarchy).

5.52.1. Analyzing design hierarchy..
Top module:  \ORC_R32I

5.52.2. Analyzing design hierarchy..
Top module:  \ORC_R32I
Removed 0 unused modules.

5.53. Printing statistics.

=== ORC_R32I ===

   Number of wires:               1635
   Number of wire bits:           8473
   Number of public wires:        1635
   Number of public wire bits:    8473
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5294
     SB_CARRY                      393
     SB_DFF                         13
     SB_DFFE                      1024
     SB_DFFESR                     237
     SB_DFFESS                       2
     SB_DFFSR                       72
     SB_DFFSS                        1
     SB_LUT4                      3552

5.54. Executing CHECK pass (checking for obvious problems).
Checking module ORC_R32I...
Found and reported 0 problems.

5.55. Executing JSON backend.

6. Executing JSON backend.

End of script. Logfile hash: 167cfc33cf, CPU: user 11.31s system 0.10s, MEM: 229.38 MB peak
Yosys 0.9+3746 (git sha1 ec410c9b, gcc 10.2.1 -O3 -feliminate-unused-debug-types -fexceptions -fstack-protector -m64 -fasynchronous-unwind-tables -ftree-loop-distribute-patterns -fno-semantic-interposition -ffat-lto-objects -fno-trapping-math -mtune=skylake -fvisibility-inlines-hidden -fPIC -Os)
Time spent: 35% 1x abc (6 sec), 15% 1x autoname (2 sec), ...
