
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+2406 (git sha1 bd2ecc2d, gcc 10.1.1 -O3 -feliminate-unused-debug-types -fexceptions -fstack-protector -m64 -fasynchronous-unwind-tables -ftree-loop-distribute-patterns -fno-semantic-interposition -ffat-lto-objects -fno-trapping-math -mtune=skylake -fvisibility-inlines-hidden -fPIC -Os)


-- Executing script file `syn_ice40.ys' --

1. Executing Verilog-2005 frontend: ../source/ORC_R32I.v
Parsing Verilog input from `../source/ORC_R32I.v' to AST representation.
Generating RTLIL representation for module `\ORC_R32I'.
Successfully finished Verilog frontend.

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Analyzing design hierarchy..
Top module:  \ORC_R32I

2.2.2. Analyzing design hierarchy..
Top module:  \ORC_R32I
Removed 0 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$517 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$510 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$506 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$499 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$496 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$493 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$490 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$487 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$479 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$472 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$468 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$461 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$458 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$455 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$452 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$449 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$../source/ORC_R32I.v:356$242 in module ORC_R32I.
Marked 1 switch rules as full_case in process $proc$../source/ORC_R32I.v:336$239 in module ORC_R32I.
Marked 2 switch rules as full_case in process $proc$../source/ORC_R32I.v:290$175 in module ORC_R32I.
Marked 3 switch rules as full_case in process $proc$../source/ORC_R32I.v:220$148 in module ORC_R32I.
Marked 2 switch rules as full_case in process $proc$../source/ORC_R32I.v:195$140 in module ORC_R32I.
Removed a total of 0 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 12 redundant assignments.
Promoted 22 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$520'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$516'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$509'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$505'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$498'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$495'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$492'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$489'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$486'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$484'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$482'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$478'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$471'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$467'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$460'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$457'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$454'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$451'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$448'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$446'.
  Set init value: \Q = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$517'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$506'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$496'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$490'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$479'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$468'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$458'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$452'.

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$520'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$517'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$516'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$510'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$509'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$506'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$505'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$499'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$498'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$496'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$495'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$493'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$492'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$490'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$489'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$487'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$486'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$485'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$484'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$483'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$482'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$479'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$478'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$472'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$471'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$468'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$467'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$461'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$460'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$458'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$457'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$455'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$454'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$452'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$451'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$449'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$448'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$447'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$446'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$445'.
Creating decoders for process `\ORC_R32I.$proc$../source/ORC_R32I.v:356$242'.
     1/4: $0\r_master_write_byte_enable[3:0]
     2/4: $0\r_master_write_data[31:0]
     3/4: $0\r_master_write_addr[31:0]
     4/4: $0\r_master_write[0:0]
Creating decoders for process `\ORC_R32I.$proc$../source/ORC_R32I.v:336$239'.
     1/3: $0\r_dest_pointer[4:0]
     2/3: $0\r_master_read_addr[31:0]
     3/3: $0\r_master_read[0:0]
Creating decoders for process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
     1/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177
     2/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_ADDR[4:0]$176
     3/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179
     4/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_ADDR[4:0]$178
     5/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182
     6/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_DATA[31:0]$181
     7/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_ADDR[4:0]$180
     8/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185
     9/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_DATA[31:0]$184
    10/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_ADDR[4:0]$183
    11/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188
    12/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_DATA[31:0]$187
    13/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_ADDR[4:0]$186
    14/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191
    15/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_DATA[31:0]$190
    16/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_ADDR[4:0]$189
    17/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194
    18/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_DATA[31:0]$193
    19/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_ADDR[4:0]$192
    20/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197
    21/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_DATA[31:0]$196
    22/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_ADDR[4:0]$195
    23/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200
    24/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_DATA[31:0]$199
    25/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_ADDR[4:0]$198
    26/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203
    27/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_DATA[31:0]$202
    28/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_ADDR[4:0]$201
    29/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206
    30/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_DATA[31:0]$205
    31/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_ADDR[4:0]$204
    32/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209
    33/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_DATA[31:0]$208
    34/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_ADDR[4:0]$207
    35/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212
    36/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_DATA[31:0]$211
    37/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_ADDR[4:0]$210
    38/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215
    39/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_DATA[31:0]$214
    40/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_ADDR[4:0]$213
    41/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218
    42/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_DATA[31:0]$217
    43/46: $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_ADDR[4:0]$216
    44/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221
    45/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_DATA[31:0]$220
    46/46: $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_ADDR[4:0]$219
Creating decoders for process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
     1/13: $0\r_decoder_valid[0:0]
     2/13: $0\r_bcc[0:0]
     3/13: $0\r_jalr[0:0]
     4/13: $0\r_jal[0:0]
     5/13: $0\r_rcc[0:0]
     6/13: $0\r_mcc[0:0]
     7/13: $0\r_scc[0:0]
     8/13: $0\r_lcc[0:0]
     9/13: $0\r_auipc[0:0]
    10/13: $0\r_lui[0:0]
    11/13: $0\r_uimm[31:0]
    12/13: $0\r_simm[31:0]
    13/13: $0\r_inst_data[31:0]
Creating decoders for process `\ORC_R32I.$proc$../source/ORC_R32I.v:195$140'.
     1/4: $0\r_program_counter_valid[0:0]
     2/4: $0\r_program_counter[31:0]
     3/4: $0\r_next_program_counter[31:0]
     4/4: $0\r_next_program_counter2[31:0]

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$517'.
  created $adff cell `$procdff$1202' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$510'.
  created $dff cell `$procdff$1203' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$506'.
  created $adff cell `$procdff$1204' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$499'.
  created $dff cell `$procdff$1205' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$496'.
  created $adff cell `$procdff$1206' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$493'.
  created $dff cell `$procdff$1207' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$490'.
  created $adff cell `$procdff$1208' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$487'.
  created $dff cell `$procdff$1209' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$485'.
  created $dff cell `$procdff$1210' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$483'.
  created $dff cell `$procdff$1211' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$479'.
  created $adff cell `$procdff$1212' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$472'.
  created $dff cell `$procdff$1213' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$468'.
  created $adff cell `$procdff$1214' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$461'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$458'.
  created $adff cell `$procdff$1216' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$455'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$452'.
  created $adff cell `$procdff$1218' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$449'.
  created $dff cell `$procdff$1219' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$447'.
  created $dff cell `$procdff$1220' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$445'.
  created $dff cell `$procdff$1221' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_master_write' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:356$242'.
  created $dff cell `$procdff$1222' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_master_write_addr' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:356$242'.
  created $dff cell `$procdff$1223' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_master_write_data' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:356$242'.
  created $dff cell `$procdff$1224' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_master_write_byte_enable' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:356$242'.
  created $dff cell `$procdff$1225' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_master_read' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:336$239'.
  created $dff cell `$procdff$1226' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_master_read_addr' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:336$239'.
  created $dff cell `$procdff$1227' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_dest_pointer' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:336$239'.
  created $dff cell `$procdff$1228' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1229' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1230' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1231' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1232' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1233' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1234' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1235' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1236' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1237' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1238' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1239' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1240' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1241' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1242' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1243' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1244' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1245' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1246' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1247' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1248' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1252' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1253' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1254' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1255' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1256' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1257' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1258' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1259' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1260' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1261' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1263' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1264' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1265' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1266' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1267' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1268' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1269' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1270' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1271' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_ADDR' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1272' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_DATA' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1273' with positive edge clock.
Creating register for signal `\ORC_R32I.$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
  created $dff cell `$procdff$1274' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_inst_data' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1275' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_simm' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1276' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_uimm' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1277' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_lui' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1278' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_auipc' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1279' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_jal' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1280' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_jalr' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1281' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_bcc' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1282' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_lcc' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1283' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_scc' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1284' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_mcc' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1285' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_rcc' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1286' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_decoder_valid' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
  created $dff cell `$procdff$1287' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_next_program_counter2' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:195$140'.
  created $dff cell `$procdff$1288' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_next_program_counter' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:195$140'.
  created $dff cell `$procdff$1289' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_program_counter' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:195$140'.
  created $dff cell `$procdff$1290' with positive edge clock.
Creating register for signal `\ORC_R32I.\r_program_counter_valid' using process `\ORC_R32I.$proc$../source/ORC_R32I.v:195$140'.
  created $dff cell `$procdff$1291' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$520'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$517'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$517'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$516'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$510'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$510'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$509'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$506'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$506'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$505'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$499'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$499'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$498'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$496'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$495'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$493'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$493'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$492'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$490'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$489'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$487'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$487'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$486'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$485'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$485'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$484'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$483'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$482'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$479'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$479'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$478'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$472'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$472'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$471'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$468'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$468'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$467'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$461'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$461'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$460'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$458'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$457'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$455'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$455'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$454'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$452'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$451'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$449'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$449'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$448'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$447'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$447'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$446'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$445'.
Found and cleaned up 2 empty switches in `\ORC_R32I.$proc$../source/ORC_R32I.v:356$242'.
Removing empty process `ORC_R32I.$proc$../source/ORC_R32I.v:356$242'.
Found and cleaned up 2 empty switches in `\ORC_R32I.$proc$../source/ORC_R32I.v:336$239'.
Removing empty process `ORC_R32I.$proc$../source/ORC_R32I.v:336$239'.
Found and cleaned up 9 empty switches in `\ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
Removing empty process `ORC_R32I.$proc$../source/ORC_R32I.v:290$175'.
Found and cleaned up 3 empty switches in `\ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
Removing empty process `ORC_R32I.$proc$../source/ORC_R32I.v:220$148'.
Found and cleaned up 3 empty switches in `\ORC_R32I.$proc$../source/ORC_R32I.v:195$140'.
Removing empty process `ORC_R32I.$proc$../source/ORC_R32I.v:195$140'.
Cleaned up 37 empty switches.

2.4. Executing FLATTEN pass (flatten design).
No more expansions possible.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~51 debug messages>

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 14 unused cells and 313 unused wires.
<suppressed ~16 debug messages>

2.9. Executing CHECK pass (checking for obvious problems).
checking module ORC_R32I..
found and reported 0 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~102 debug messages>
Removed a total of 34 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $procmux$1013:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1013_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1013_Y [0]
      New connections: $procmux$1013_Y [31:1] = { $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] $procmux$1013_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1036:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1036_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1036_Y [0]
      New connections: $procmux$1036_Y [31:1] = { $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] $procmux$1036_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1060:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$1060_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1060_Y [0]
      New connections: $procmux$1060_Y [31:1] = { $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] $procmux$1060_Y [0] }
    New ctrl vector for $pmux cell $procmux$1146: { $eq$../source/ORC_R32I.v:245$165_Y $auto$opt_reduce.cc:134:opt_mux$1293 $eq$../source/ORC_R32I.v:243$161_Y $eq$../source/ORC_R32I.v:241$157_Y }
    New ctrl vector for $pmux cell $procmux$1159: { $eq$../source/ORC_R32I.v:245$165_Y $auto$opt_reduce.cc:134:opt_mux$1295 $eq$../source/ORC_R32I.v:243$161_Y $eq$../source/ORC_R32I.v:241$157_Y }
    Consolidated identical input bits for $mux cell $procmux$737:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0]
      New connections: $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [31:1] = { $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:292$1_EN[31:0]$177 [0] }
    Consolidated identical input bits for $mux cell $procmux$743:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0]
      New connections: $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [31:1] = { $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:293$2_EN[31:0]$179 [0] }
    Consolidated identical input bits for $mux cell $procmux$749:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$749_Y
      New ports: A=1'0, B=1'1, Y=$procmux$749_Y [0]
      New connections: $procmux$749_Y [31:1] = { $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$773:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$773_Y
      New ports: A=1'0, B=1'1, Y=$procmux$773_Y [0]
      New connections: $procmux$773_Y [31:1] = { $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] $procmux$773_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$797:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$797_Y
      New ports: A=1'0, B=1'1, Y=$procmux$797_Y [0]
      New connections: $procmux$797_Y [31:1] = { $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] $procmux$797_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$821:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$821_Y
      New ports: A=1'0, B=1'1, Y=$procmux$821_Y [0]
      New connections: $procmux$821_Y [31:1] = { $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] $procmux$821_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$845:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$845_Y
      New ports: A=1'0, B=1'1, Y=$procmux$845_Y [0]
      New connections: $procmux$845_Y [31:1] = { $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] $procmux$845_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$869:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$869_Y
      New ports: A=1'0, B=1'1, Y=$procmux$869_Y [0]
      New connections: $procmux$869_Y [31:1] = { $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] $procmux$869_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$893:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$893_Y
      New ports: A=1'0, B=1'1, Y=$procmux$893_Y [0]
      New connections: $procmux$893_Y [31:1] = { $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] $procmux$893_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$917:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$917_Y
      New ports: A=1'0, B=1'1, Y=$procmux$917_Y [0]
      New connections: $procmux$917_Y [31:1] = { $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] $procmux$917_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$941:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$941_Y
      New ports: A=1'0, B=1'1, Y=$procmux$941_Y [0]
      New connections: $procmux$941_Y [31:1] = { $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] $procmux$941_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$965:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$965_Y
      New ports: A=1'0, B=1'1, Y=$procmux$965_Y [0]
      New connections: $procmux$965_Y [31:1] = { $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] $procmux$965_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$989:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$procmux$989_Y
      New ports: A=1'0, B=1'1, Y=$procmux$989_Y [0]
      New connections: $procmux$989_Y [31:1] = { $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] $procmux$989_Y [0] }
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $procmux$1015:
      Old ports: A=0, B=$procmux$1013_Y, Y=$procmux$1015_Y
      New ports: A=1'0, B=$procmux$1013_Y [0], Y=$procmux$1015_Y [0]
      New connections: $procmux$1015_Y [31:1] = { $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] $procmux$1015_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1039:
      Old ports: A=$procmux$1036_Y, B=0, Y=$procmux$1039_Y
      New ports: A=$procmux$1036_Y [0], B=1'0, Y=$procmux$1039_Y [0]
      New connections: $procmux$1039_Y [31:1] = { $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] $procmux$1039_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1063:
      Old ports: A=$procmux$1060_Y, B=0, Y=$procmux$1063_Y
      New ports: A=$procmux$1060_Y [0], B=1'0, Y=$procmux$1063_Y [0]
      New connections: $procmux$1063_Y [31:1] = { $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] $procmux$1063_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$751:
      Old ports: A=0, B=$procmux$749_Y, Y=$procmux$751_Y
      New ports: A=1'0, B=$procmux$749_Y [0], Y=$procmux$751_Y [0]
      New connections: $procmux$751_Y [31:1] = { $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] $procmux$751_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$775:
      Old ports: A=0, B=$procmux$773_Y, Y=$procmux$775_Y
      New ports: A=1'0, B=$procmux$773_Y [0], Y=$procmux$775_Y [0]
      New connections: $procmux$775_Y [31:1] = { $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] $procmux$775_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$799:
      Old ports: A=0, B=$procmux$797_Y, Y=$procmux$799_Y
      New ports: A=1'0, B=$procmux$797_Y [0], Y=$procmux$799_Y [0]
      New connections: $procmux$799_Y [31:1] = { $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] $procmux$799_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$823:
      Old ports: A=0, B=$procmux$821_Y, Y=$procmux$823_Y
      New ports: A=1'0, B=$procmux$821_Y [0], Y=$procmux$823_Y [0]
      New connections: $procmux$823_Y [31:1] = { $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] $procmux$823_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$847:
      Old ports: A=0, B=$procmux$845_Y, Y=$procmux$847_Y
      New ports: A=1'0, B=$procmux$845_Y [0], Y=$procmux$847_Y [0]
      New connections: $procmux$847_Y [31:1] = { $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] $procmux$847_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$871:
      Old ports: A=0, B=$procmux$869_Y, Y=$procmux$871_Y
      New ports: A=1'0, B=$procmux$869_Y [0], Y=$procmux$871_Y [0]
      New connections: $procmux$871_Y [31:1] = { $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] $procmux$871_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$895:
      Old ports: A=0, B=$procmux$893_Y, Y=$procmux$895_Y
      New ports: A=1'0, B=$procmux$893_Y [0], Y=$procmux$895_Y [0]
      New connections: $procmux$895_Y [31:1] = { $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] $procmux$895_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$919:
      Old ports: A=0, B=$procmux$917_Y, Y=$procmux$919_Y
      New ports: A=1'0, B=$procmux$917_Y [0], Y=$procmux$919_Y [0]
      New connections: $procmux$919_Y [31:1] = { $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] $procmux$919_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$943:
      Old ports: A=0, B=$procmux$941_Y, Y=$procmux$943_Y
      New ports: A=1'0, B=$procmux$941_Y [0], Y=$procmux$943_Y [0]
      New connections: $procmux$943_Y [31:1] = { $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] $procmux$943_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$967:
      Old ports: A=0, B=$procmux$965_Y, Y=$procmux$967_Y
      New ports: A=1'0, B=$procmux$965_Y [0], Y=$procmux$967_Y [0]
      New connections: $procmux$967_Y [31:1] = { $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] $procmux$967_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$991:
      Old ports: A=0, B=$procmux$989_Y, Y=$procmux$991_Y
      New ports: A=1'0, B=$procmux$989_Y [0], Y=$procmux$991_Y [0]
      New connections: $procmux$991_Y [31:1] = { $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] $procmux$991_Y [0] }
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $procmux$1018:
      Old ports: A=$procmux$1015_Y, B=0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215
      New ports: A=$procmux$1015_Y [0], B=1'0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0]
      New connections: $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [31:1] = { $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:321$14_EN[31:0]$215 [0] }
    Consolidated identical input bits for $mux cell $procmux$1042:
      Old ports: A=$procmux$1039_Y, B=0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218
      New ports: A=$procmux$1039_Y [0], B=1'0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0]
      New connections: $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [31:1] = { $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [0] }
    Consolidated identical input bits for $mux cell $procmux$1066:
      Old ports: A=$procmux$1063_Y, B=0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221
      New ports: A=$procmux$1063_Y [0], B=1'0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0]
      New connections: $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [31:1] = { $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:327$16_EN[31:0]$221 [0] }
    Consolidated identical input bits for $mux cell $procmux$754:
      Old ports: A=$procmux$751_Y, B=0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182
      New ports: A=$procmux$751_Y [0], B=1'0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0]
      New connections: $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [31:1] = { $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:297$3_EN[31:0]$182 [0] }
    Consolidated identical input bits for $mux cell $procmux$778:
      Old ports: A=$procmux$775_Y, B=0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185
      New ports: A=$procmux$775_Y [0], B=1'0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0]
      New connections: $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [31:1] = { $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:298$4_EN[31:0]$185 [0] }
    Consolidated identical input bits for $mux cell $procmux$802:
      Old ports: A=$procmux$799_Y, B=0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188
      New ports: A=$procmux$799_Y [0], B=1'0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0]
      New connections: $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [31:1] = { $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:302$5_EN[31:0]$188 [0] }
    Consolidated identical input bits for $mux cell $procmux$826:
      Old ports: A=$procmux$823_Y, B=0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191
      New ports: A=$procmux$823_Y [0], B=1'0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0]
      New connections: $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [31:1] = { $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:303$6_EN[31:0]$191 [0] }
    Consolidated identical input bits for $mux cell $procmux$850:
      Old ports: A=$procmux$847_Y, B=0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194
      New ports: A=$procmux$847_Y [0], B=1'0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0]
      New connections: $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [31:1] = { $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:307$7_EN[31:0]$194 [0] }
    Consolidated identical input bits for $mux cell $procmux$874:
      Old ports: A=$procmux$871_Y, B=0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197
      New ports: A=$procmux$871_Y [0], B=1'0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0]
      New connections: $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [31:1] = { $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:308$8_EN[31:0]$197 [0] }
    Consolidated identical input bits for $mux cell $procmux$898:
      Old ports: A=$procmux$895_Y, B=0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200
      New ports: A=$procmux$895_Y [0], B=1'0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0]
      New connections: $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [31:1] = { $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:312$9_EN[31:0]$200 [0] }
    Consolidated identical input bits for $mux cell $procmux$922:
      Old ports: A=$procmux$919_Y, B=0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203
      New ports: A=$procmux$919_Y [0], B=1'0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0]
      New connections: $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [31:1] = { $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:313$10_EN[31:0]$203 [0] }
    Consolidated identical input bits for $mux cell $procmux$946:
      Old ports: A=$procmux$943_Y, B=0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206
      New ports: A=$procmux$943_Y [0], B=1'0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0]
      New connections: $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [31:1] = { $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:316$11_EN[31:0]$206 [0] }
    Consolidated identical input bits for $mux cell $procmux$970:
      Old ports: A=$procmux$967_Y, B=0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209
      New ports: A=$procmux$967_Y [0], B=1'0, Y=$0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0]
      New connections: $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [31:1] = { $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] $0$memwr$\mem_registers2$../source/ORC_R32I.v:317$12_EN[31:0]$209 [0] }
    Consolidated identical input bits for $mux cell $procmux$994:
      Old ports: A=$procmux$991_Y, B=0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212
      New ports: A=$procmux$991_Y [0], B=1'0, Y=$0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0]
      New connections: $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [31:1] = { $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] $0$memwr$\mem_registers1$../source/ORC_R32I.v:320$13_EN[31:0]$212 [0] }
  Optimizing cells in module \ORC_R32I.
Performed a total of 46 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~270 debug messages>
Removed a total of 90 cells.

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 122 unused wires.
<suppressed ~1 debug messages>

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~54 debug messages>

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.10.16. Finished OPT passes. (There is nothing left to do.)

2.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:133$32 ($eq).
Removed top 24 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:133$39 ($mux).
Removed top 24 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:132$40 ($mux).
Removed top 24 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:131$41 ($mux).
Removed top 2 bits (of 3) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:135$42 ($eq).
Removed top 16 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:135$52 ($mux).
Removed top 1 bits (of 2) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:141$58 ($eq).
Removed top 16 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:141$59 ($mux).
Removed top 8 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:140$60 ($mux).
Removed top 1 bits (of 3) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:154$75 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:154$77 ($mux).
Removed top 1 bits (of 3) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:155$78 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:155$80 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:167$110 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:166$111 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:165$112 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:164$113 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:163$114 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:162$115 ($mux).
Removed top 31 bits (of 32) from port B of cell ORC_R32I.$and$../source/ORC_R32I.v:161$116 ($and).
Removed top 31 bits (of 32) from port Y of cell ORC_R32I.$and$../source/ORC_R32I.v:161$116 ($and).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:184$136 ($mux).
Removed top 29 bits (of 32) from port B of cell ORC_R32I.$add$../source/ORC_R32I.v:205$145 ($add).
Removed top 1 bits (of 7) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:239$153 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:239$154 ($mux).
Removed top 2 bits (of 7) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:240$155 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:240$156 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:241$158 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:242$160 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:243$162 ($mux).
Removed top 5 bits (of 7) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:244$163 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:244$164 ($mux).
Removed top 1 bits (of 7) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:245$165 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:245$166 ($mux).
Removed top 2 bits (of 7) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:246$167 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:246$168 ($mux).
Removed top 1 bits (of 7) from port B of cell ORC_R32I.$eq$../source/ORC_R32I.v:247$169 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:247$170 ($mux).
Removed top 3 bits (of 4) from port B of cell ORC_R32I.$nex$../source/ORC_R32I.v:295$224 ($nex).
Removed top 3 bits (of 4) from port B of cell ORC_R32I.$nex$../source/ORC_R32I.v:324$237 ($nex).
Removed top 2 bits (of 4) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:369$251 ($mux).
Removed top 1 bits (of 4) from mux cell ORC_R32I.$ternary$../source/ORC_R32I.v:368$252 ($mux).
Removed cell ORC_R32I.$procmux$740 ($mux).
Removed cell ORC_R32I.$procmux$757 ($mux).
Removed cell ORC_R32I.$procmux$759 ($mux).
Removed cell ORC_R32I.$procmux$762 ($mux).
Removed cell ORC_R32I.$procmux$765 ($mux).
Removed cell ORC_R32I.$procmux$767 ($mux).
Removed cell ORC_R32I.$procmux$770 ($mux).
Removed cell ORC_R32I.$procmux$805 ($mux).
Removed cell ORC_R32I.$procmux$807 ($mux).
Removed cell ORC_R32I.$procmux$810 ($mux).
Removed cell ORC_R32I.$procmux$813 ($mux).
Removed cell ORC_R32I.$procmux$815 ($mux).
Removed cell ORC_R32I.$procmux$818 ($mux).
Removed cell ORC_R32I.$procmux$853 ($mux).
Removed cell ORC_R32I.$procmux$855 ($mux).
Removed cell ORC_R32I.$procmux$858 ($mux).
Removed cell ORC_R32I.$procmux$861 ($mux).
Removed cell ORC_R32I.$procmux$863 ($mux).
Removed cell ORC_R32I.$procmux$866 ($mux).
Removed cell ORC_R32I.$procmux$901 ($mux).
Removed cell ORC_R32I.$procmux$903 ($mux).
Removed cell ORC_R32I.$procmux$906 ($mux).
Removed cell ORC_R32I.$procmux$909 ($mux).
Removed cell ORC_R32I.$procmux$911 ($mux).
Removed cell ORC_R32I.$procmux$914 ($mux).
Removed cell ORC_R32I.$procmux$949 ($mux).
Removed cell ORC_R32I.$procmux$951 ($mux).
Removed cell ORC_R32I.$procmux$954 ($mux).
Removed cell ORC_R32I.$procmux$957 ($mux).
Removed cell ORC_R32I.$procmux$959 ($mux).
Removed cell ORC_R32I.$procmux$962 ($mux).
Removed cell ORC_R32I.$procmux$1002 ($mux).
Removed cell ORC_R32I.$procmux$1005 ($mux).
Removed cell ORC_R32I.$procmux$1007 ($mux).
Removed cell ORC_R32I.$procmux$1010 ($mux).
Removed cell ORC_R32I.$procmux$1021 ($mux).
Removed cell ORC_R32I.$procmux$1023 ($mux).
Removed cell ORC_R32I.$procmux$1044 ($mux).
Removed cell ORC_R32I.$procmux$1047 ($mux).
Removed cell ORC_R32I.$procmux$1050 ($mux).
Removed cell ORC_R32I.$procmux$1052 ($mux).
Removed cell ORC_R32I.$procmux$1055 ($mux).
Removed cell ORC_R32I.$procmux$1058 ($mux).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$procdff$1230 ($dff).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$procdff$1235 ($dff).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$procdff$1241 ($dff).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$procdff$1247 ($dff).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$procdff$1253 ($dff).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$procdff$1259 ($dff).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$procdff$1265 ($dff).
Removed top 31 bits (of 32) from FF cell ORC_R32I.$procdff$1271 ($dff).
Removed top 31 bits (of 32) from wire ORC_R32I.$eq$../source/ORC_R32I.v:166$107_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ge$../source/ORC_R32I.v:163$101_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ge$../source/ORC_R32I.v:165$105_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$lt$../source/ORC_R32I.v:162$99_Y.
Removed top 24 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:131$41_Y.
Removed top 24 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:132$40_Y.
Removed top 24 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:133$39_Y.
Removed top 16 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:135$52_Y.
Removed top 8 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:140$60_Y.
Removed top 16 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:141$59_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:154$77_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:155$80_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:239$154_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:240$156_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:241$158_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:242$160_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:243$162_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:244$164_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:245$166_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:246$168_Y.
Removed top 31 bits (of 32) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:247$170_Y.
Removed top 1 bits (of 4) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:368$252_Y.
Removed top 2 bits (of 4) from wire ORC_R32I.$ternary$../source/ORC_R32I.v:369$251_Y.

2.12. Executing PEEPOPT pass (run peephole optimizers).

2.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 68 unused wires.
<suppressed ~1 debug messages>

2.14. Executing SHARE pass (SAT-based resource sharing).
Found 5 cells in module ORC_R32I that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$../source/ORC_R32I.v:158$88 ($sshr):
    Found 1 activation_patterns using ctrl signal { $eq$../source/ORC_R32I.v:155$78_Y $eq$../source/ORC_R32I.v:154$75_Y $eq$../source/ORC_R32I.v:152$71_Y $eq$../source/ORC_R32I.v:151$69_Y $eq$../source/ORC_R32I.v:135$42_Y $eq$../source/ORC_R32I.v:130$22_Y $eq$../source/ORC_R32I.v:130$21_Y \r_inst_data [30] }.
    No candidates found.
  Analyzing resource sharing options for $shr$../source/ORC_R32I.v:159$89 ($shr):
    Found 1 activation_patterns using ctrl signal { $eq$../source/ORC_R32I.v:155$78_Y $eq$../source/ORC_R32I.v:154$75_Y $eq$../source/ORC_R32I.v:152$71_Y $eq$../source/ORC_R32I.v:151$69_Y $eq$../source/ORC_R32I.v:135$42_Y $eq$../source/ORC_R32I.v:130$22_Y $eq$../source/ORC_R32I.v:130$21_Y \r_inst_data [30] }.
    No candidates found.
  Analyzing resource sharing options for $shl$../source/ORC_R32I.v:157$87 ($shl):
    Found 1 activation_patterns using ctrl signal { $eq$../source/ORC_R32I.v:155$78_Y $eq$../source/ORC_R32I.v:154$75_Y $eq$../source/ORC_R32I.v:152$71_Y $eq$../source/ORC_R32I.v:151$69_Y $eq$../source/ORC_R32I.v:135$42_Y $eq$../source/ORC_R32I.v:130$22_Y $eq$../source/ORC_R32I.v:130$21_Y }.
    No candidates found.
  Analyzing resource sharing options for $memrd$\mem_registers2$../source/ORC_R32I.v:126$18 ($memrd):
    Found 8 activation_patterns using ctrl signal { $logic_and$../source/ORC_R32I.v:202$144_Y $eq$../source/ORC_R32I.v:152$71_Y $eq$../source/ORC_R32I.v:151$69_Y $eq$../source/ORC_R32I.v:135$43_Y $eq$../source/ORC_R32I.v:135$42_Y $eq$../source/ORC_R32I.v:130$22_Y $eq$../source/ORC_R32I.v:130$21_Y \w_write_ready \r_mcc \i_reset_sync }.
    No candidates found.
  Analyzing resource sharing options for $memrd$\mem_registers1$../source/ORC_R32I.v:125$17 ($memrd):
    Cell is always active. Therefore no sharing is possible.

2.15. Executing TECHMAP pass (map to technology primitives).

2.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.15.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~108 debug messages>

2.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ORC_R32I:
  creating $macc model for $add$../source/ORC_R32I.v:156$84 ($add).
  creating $macc model for $add$../source/ORC_R32I.v:170$121 ($add).
  creating $macc model for $add$../source/ORC_R32I.v:172$122 ($add).
  creating $macc model for $add$../source/ORC_R32I.v:205$145 ($add).
  creating $macc model for $add$../source/ORC_R32I.v:297$227 ($add).
  creating $macc model for $sub$../source/ORC_R32I.v:156$83 ($sub).
  creating $alu model for $macc $sub$../source/ORC_R32I.v:156$83.
  creating $alu model for $macc $add$../source/ORC_R32I.v:297$227.
  creating $alu model for $macc $add$../source/ORC_R32I.v:205$145.
  creating $alu model for $macc $add$../source/ORC_R32I.v:172$122.
  creating $alu model for $macc $add$../source/ORC_R32I.v:170$121.
  creating $alu model for $macc $add$../source/ORC_R32I.v:156$84.
  creating $alu model for $ge$../source/ORC_R32I.v:163$101 ($ge): new $alu
  creating $alu model for $ge$../source/ORC_R32I.v:165$105 ($ge): new $alu
  creating $alu model for $lt$../source/ORC_R32I.v:154$76 ($lt): merged with $sub$../source/ORC_R32I.v:156$83.
  creating $alu model for $lt$../source/ORC_R32I.v:155$79 ($lt): new $alu
  creating $alu model for $lt$../source/ORC_R32I.v:162$99 ($lt): merged with $ge$../source/ORC_R32I.v:163$101.
  creating $alu model for $lt$../source/ORC_R32I.v:164$103 ($lt): merged with $ge$../source/ORC_R32I.v:165$105.
  creating $alu model for $eq$../source/ORC_R32I.v:166$107 ($eq): merged with $ge$../source/ORC_R32I.v:165$105.
  creating $alu model for $ne$../source/ORC_R32I.v:167$109 ($ne): merged with $ge$../source/ORC_R32I.v:165$105.
  creating $alu cell for $ge$../source/ORC_R32I.v:165$105, $lt$../source/ORC_R32I.v:164$103, $eq$../source/ORC_R32I.v:166$107, $ne$../source/ORC_R32I.v:167$109: $auto$alumacc.cc:485:replace_alu$1322
  creating $alu cell for $ge$../source/ORC_R32I.v:163$101, $lt$../source/ORC_R32I.v:162$99: $auto$alumacc.cc:485:replace_alu$1337
  creating $alu cell for $lt$../source/ORC_R32I.v:155$79: $auto$alumacc.cc:485:replace_alu$1352
  creating $alu cell for $add$../source/ORC_R32I.v:156$84: $auto$alumacc.cc:485:replace_alu$1359
  creating $alu cell for $add$../source/ORC_R32I.v:170$121: $auto$alumacc.cc:485:replace_alu$1362
  creating $alu cell for $add$../source/ORC_R32I.v:172$122: $auto$alumacc.cc:485:replace_alu$1365
  creating $alu cell for $add$../source/ORC_R32I.v:205$145: $auto$alumacc.cc:485:replace_alu$1368
  creating $alu cell for $add$../source/ORC_R32I.v:297$227: $auto$alumacc.cc:485:replace_alu$1371
  creating $alu cell for $sub$../source/ORC_R32I.v:156$83, $lt$../source/ORC_R32I.v:154$76: $auto$alumacc.cc:485:replace_alu$1374
  created 9 $alu and 0 $macc cells.

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~1 debug messages>

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 1 unused cells and 17 unused wires.
<suppressed ~2 debug messages>

2.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.19.9. Rerunning OPT passes. (Maybe there is more to do..)

2.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

2.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

2.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.19.16. Finished OPT passes. (There is nothing left to do.)

2.20. Executing FSM pass (extract and optimize FSM).

2.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ORC_R32I.r_master_write_byte_enable as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

2.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.21.5. Finished fast OPT passes.

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\mem_registers1$../source/ORC_R32I.v:0$261' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers1$../source/ORC_R32I.v:0$263' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers1$../source/ORC_R32I.v:0$265' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers1$../source/ORC_R32I.v:0$267' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers1$../source/ORC_R32I.v:0$269' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers1$../source/ORC_R32I.v:0$271' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers1$../source/ORC_R32I.v:0$273' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers1$../source/ORC_R32I.v:0$275' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers2$../source/ORC_R32I.v:0$262' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers2$../source/ORC_R32I.v:0$264' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers2$../source/ORC_R32I.v:0$266' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers2$../source/ORC_R32I.v:0$268' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers2$../source/ORC_R32I.v:0$270' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers2$../source/ORC_R32I.v:0$272' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers2$../source/ORC_R32I.v:0$274' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memwr$\mem_registers2$../source/ORC_R32I.v:0$276' in module `\ORC_R32I': merged $dff to cell.
Checking cell `$memrd$\mem_registers1$../source/ORC_R32I.v:125$17' in module `\ORC_R32I': merged address $dff to cell.
Checking cell `$memrd$\mem_registers2$../source/ORC_R32I.v:126$18' in module `\ORC_R32I': merged address $dff to cell.

2.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 15 unused cells and 15 unused wires.
<suppressed ~16 debug messages>

2.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory ORC_R32I.mem_registers1 by address:
  New clock domain: posedge \i_clk
    Port 0 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$261) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
    Port 1 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$263) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 0 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 2 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$265) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 1 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 3 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$267) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 2 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 4 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$269) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 3 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 5 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$271) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 4 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 6 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$273) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 5 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 7 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$275) has addr \r_dest_pointer.
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory ORC_R32I.mem_registers2 by address:
  New clock domain: posedge \i_clk
    Port 0 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$262) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
    Port 1 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$264) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 0 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 2 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$266) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 1 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 3 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$268) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 2 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 4 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$270) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 3 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 5 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$272) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 4 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 6 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$274) has addr \r_inst_data [11:7].
      Active bits: 11111111111111111111111111111111
      Merging port 5 into this one.
      Creating logic for merging DATA and EN ports.
      Active bits: 11111111111111111111111111111111
    Port 7 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$276) has addr \r_dest_pointer.
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory ORC_R32I.mem_registers1 using sat-based resource sharing:
  Port 0 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$273) on posedge \i_clk: considered
  Port 1 ($memwr$\mem_registers1$../source/ORC_R32I.v:0$275) on posedge \i_clk: considered
  Common input cone for all EN signals: 33 cells.
  Size of unconstrained SAT problem: 232 variables, 572 clauses
  Merging port 0 into port 1.
Consolidating write ports of memory ORC_R32I.mem_registers2 using sat-based resource sharing:
  Port 0 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$274) on posedge \i_clk: considered
  Port 1 ($memwr$\mem_registers2$../source/ORC_R32I.v:0$276) on posedge \i_clk: considered
  Common input cone for all EN signals: 33 cells.
  Size of unconstrained SAT problem: 232 variables, 572 clauses
  Merging port 0 into port 1.

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\mem_registers1' in module `\ORC_R32I':
  $memwr$\mem_registers1$../source/ORC_R32I.v:0$275 ($memwr)
  $memrd$\mem_registers1$../source/ORC_R32I.v:125$17 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\mem_registers2' in module `\ORC_R32I':
  $memwr$\mem_registers2$../source/ORC_R32I.v:0$276 ($memwr)
  $memrd$\mem_registers2$../source/ORC_R32I.v:126$18 ($memrd)

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing ORC_R32I.mem_registers1:
  Properties: ports=2 bits=1024 rports=1 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 3 rules:
    Efficiency for rule 4.2: efficiency=3, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=6, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=12, cells=2, acells=1
    Selected rule 1.1 with efficiency 12.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: mem_registers1.0.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: mem_registers1.1.0.0
        Adding extra logic for transparent port A1.1.
Processing ORC_R32I.mem_registers2:
  Properties: ports=2 bits=1024 rports=1 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 3 rules:
    Efficiency for rule 4.2: efficiency=3, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=6, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=12, cells=2, acells=1
    Selected rule 1.1 with efficiency 12.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: mem_registers2.0.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: mem_registers2.1.0.0
        Adding extra logic for transparent port A1.1.

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M0\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~70 debug messages>

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~96 debug messages>

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~267 debug messages>
Removed a total of 89 cells.

2.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 1 unused cells and 306 unused wires.
<suppressed ~8 debug messages>

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$memory_share.cc:646:consolidate_wr_using_sat$1698: $0$memwr$\mem_registers1$../source/ORC_R32I.v:326$15_EN[31:0]$218 [31] -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~107 debug messages>

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:1017:replace_cell$1717:
      Old ports: A=16'0000000000000000, B={ $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] }, Y=$auto$rtlil.cc:2001:Mux$1718
      New ports: A=1'0, B=$auto$memory_bram.cc:916:replace_cell$1713 [15], Y=$auto$rtlil.cc:2001:Mux$1718 [0]
      New connections: $auto$rtlil.cc:2001:Mux$1718 [15:1] = { $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] $auto$rtlil.cc:2001:Mux$1718 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:1017:replace_cell$1805:
      Old ports: A=16'0000000000000000, B={ $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] $auto$memory_bram.cc:916:replace_cell$1713 [15] }, Y=$auto$rtlil.cc:2001:Mux$1806
      New ports: A=1'0, B=$auto$memory_bram.cc:916:replace_cell$1713 [15], Y=$auto$rtlil.cc:2001:Mux$1806 [0]
      New connections: $auto$rtlil.cc:2001:Mux$1806 [15:1] = { $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] $auto$rtlil.cc:2001:Mux$1806 [0] }
    Consolidated identical input bits for $mux cell $ternary$../source/ORC_R32I.v:371$258:
      Old ports: A=4'0011, B=4'1100, Y=$ternary$../source/ORC_R32I.v:371$258_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$../source/ORC_R32I.v:371$258_Y [2] $ternary$../source/ORC_R32I.v:371$258_Y [0] }
      New connections: { $ternary$../source/ORC_R32I.v:371$258_Y [3] $ternary$../source/ORC_R32I.v:371$258_Y [1] } = { $ternary$../source/ORC_R32I.v:371$258_Y [2] $ternary$../source/ORC_R32I.v:371$258_Y [0] }
  Optimizing cells in module \ORC_R32I.
    Consolidated identical input bits for $mux cell $ternary$../source/ORC_R32I.v:371$259:
      Old ports: A=4'1111, B=$ternary$../source/ORC_R32I.v:371$258_Y, Y=$ternary$../source/ORC_R32I.v:371$259_Y
      New ports: A=2'11, B={ $ternary$../source/ORC_R32I.v:371$258_Y [2] $ternary$../source/ORC_R32I.v:371$258_Y [0] }, Y={ $ternary$../source/ORC_R32I.v:371$259_Y [2] $ternary$../source/ORC_R32I.v:371$259_Y [0] }
      New connections: { $ternary$../source/ORC_R32I.v:371$259_Y [3] $ternary$../source/ORC_R32I.v:371$259_Y [1] } = { $ternary$../source/ORC_R32I.v:371$259_Y [2] $ternary$../source/ORC_R32I.v:371$259_Y [0] }
  Optimizing cells in module \ORC_R32I.
Performed a total of 4 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~107 debug messages>

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.29.16. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $nex.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~1657 debug messages>

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~953 debug messages>

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~1317 debug messages>
Removed a total of 439 cells.

2.32.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 270 unused cells and 415 unused wires.
<suppressed ~271 debug messages>

2.32.5. Finished fast OPT passes.

2.33. Executing ICE40_OPT pass (performing simple optimizations).

2.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32I.$auto$alumacc.cc:485:replace_alu$1368.slice[0].carry: CO=\r_next_program_counter2 [2]

2.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~11 debug messages>

2.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.33.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.33.6. Rerunning OPT passes. (Removed registers in this run.)

2.33.7. Running ICE40 specific optimizations.

2.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.33.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.33.12. Finished OPT passes. (There is nothing left to do.)

2.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module ORC_R32I:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7253 to $_DFFE_PP_ for $0\r_master_write[0:0] -> \r_master_write.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7254 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [0] -> \r_master_write_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7255 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [1] -> \r_master_write_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7256 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [2] -> \r_master_write_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7257 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [3] -> \r_master_write_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7258 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [4] -> \r_master_write_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7259 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [5] -> \r_master_write_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7260 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [6] -> \r_master_write_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7261 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [7] -> \r_master_write_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7262 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [8] -> \r_master_write_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7263 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [9] -> \r_master_write_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7264 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [10] -> \r_master_write_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7265 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [11] -> \r_master_write_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7266 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [12] -> \r_master_write_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7267 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [13] -> \r_master_write_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7268 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [14] -> \r_master_write_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7269 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [15] -> \r_master_write_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7270 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [16] -> \r_master_write_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7271 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [17] -> \r_master_write_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7272 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [18] -> \r_master_write_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7273 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [19] -> \r_master_write_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7274 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [20] -> \r_master_write_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7275 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [21] -> \r_master_write_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7276 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [22] -> \r_master_write_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7277 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [23] -> \r_master_write_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7278 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [24] -> \r_master_write_addr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7279 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [25] -> \r_master_write_addr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7280 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [26] -> \r_master_write_addr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7281 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [27] -> \r_master_write_addr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7282 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [28] -> \r_master_write_addr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7283 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [29] -> \r_master_write_addr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7284 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [30] -> \r_master_write_addr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7285 to $_DFFE_PP_ for $0\r_master_write_addr[31:0] [31] -> \r_master_write_addr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7286 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [0] -> \r_master_write_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7287 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [1] -> \r_master_write_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7288 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [2] -> \r_master_write_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7289 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [3] -> \r_master_write_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7290 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [4] -> \r_master_write_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7291 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [5] -> \r_master_write_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7292 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [6] -> \r_master_write_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7293 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [7] -> \r_master_write_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7294 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [8] -> \r_master_write_data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7295 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [9] -> \r_master_write_data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7296 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [10] -> \r_master_write_data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7297 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [11] -> \r_master_write_data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7298 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [12] -> \r_master_write_data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7299 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [13] -> \r_master_write_data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7300 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [14] -> \r_master_write_data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7301 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [15] -> \r_master_write_data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7302 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [16] -> \r_master_write_data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7303 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [17] -> \r_master_write_data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7304 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [18] -> \r_master_write_data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7305 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [19] -> \r_master_write_data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7306 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [20] -> \r_master_write_data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7307 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [21] -> \r_master_write_data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7308 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [22] -> \r_master_write_data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7309 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [23] -> \r_master_write_data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7310 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [24] -> \r_master_write_data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7311 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [25] -> \r_master_write_data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7312 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [26] -> \r_master_write_data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7313 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [27] -> \r_master_write_data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7314 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [28] -> \r_master_write_data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7315 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [29] -> \r_master_write_data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7316 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [30] -> \r_master_write_data [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7317 to $_DFFE_PP_ for $0\r_master_write_data[31:0] [31] -> \r_master_write_data [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7318 to $_DFFE_PP_ for $0\r_master_write_byte_enable[3:0] [0] -> \r_master_write_byte_enable [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7319 to $_DFFE_PP_ for $0\r_master_write_byte_enable[3:0] [1] -> \r_master_write_byte_enable [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7320 to $_DFFE_PP_ for $0\r_master_write_byte_enable[3:0] [2] -> \r_master_write_byte_enable [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7321 to $_DFFE_PP_ for $0\r_master_write_byte_enable[3:0] [3] -> \r_master_write_byte_enable [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7322 to $_DFFE_PP_ for $0\r_master_read[0:0] -> \r_master_read.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7323 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [0] -> \r_master_read_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7324 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [1] -> \r_master_read_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7325 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [2] -> \r_master_read_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7326 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [3] -> \r_master_read_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7327 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [4] -> \r_master_read_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7328 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [5] -> \r_master_read_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7329 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [6] -> \r_master_read_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7330 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [7] -> \r_master_read_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7331 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [8] -> \r_master_read_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7332 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [9] -> \r_master_read_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7333 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [10] -> \r_master_read_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7334 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [11] -> \r_master_read_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7335 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [12] -> \r_master_read_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7336 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [13] -> \r_master_read_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7337 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [14] -> \r_master_read_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7338 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [15] -> \r_master_read_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7339 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [16] -> \r_master_read_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7340 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [17] -> \r_master_read_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7341 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [18] -> \r_master_read_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7342 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [19] -> \r_master_read_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7343 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [20] -> \r_master_read_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7344 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [21] -> \r_master_read_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7345 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [22] -> \r_master_read_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7346 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [23] -> \r_master_read_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7347 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [24] -> \r_master_read_addr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7348 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [25] -> \r_master_read_addr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7349 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [26] -> \r_master_read_addr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7350 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [27] -> \r_master_read_addr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7351 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [28] -> \r_master_read_addr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7352 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [29] -> \r_master_read_addr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7353 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [30] -> \r_master_read_addr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7354 to $_DFFE_PP_ for $0\r_master_read_addr[31:0] [31] -> \r_master_read_addr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7355 to $_DFFE_PP_ for $0\r_dest_pointer[4:0] [0] -> \r_dest_pointer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7356 to $_DFFE_PP_ for $0\r_dest_pointer[4:0] [1] -> \r_dest_pointer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7357 to $_DFFE_PP_ for $0\r_dest_pointer[4:0] [2] -> \r_dest_pointer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7358 to $_DFFE_PP_ for $0\r_dest_pointer[4:0] [3] -> \r_dest_pointer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7359 to $_DFFE_PP_ for $0\r_dest_pointer[4:0] [4] -> \r_dest_pointer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7591 to $_DFFE_PP_ for $0\r_inst_data[31:0] [7] -> \r_inst_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7592 to $_DFFE_PP_ for $0\r_inst_data[31:0] [8] -> \r_inst_data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7593 to $_DFFE_PP_ for $0\r_inst_data[31:0] [9] -> \r_inst_data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7594 to $_DFFE_PP_ for $0\r_inst_data[31:0] [10] -> \r_inst_data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7595 to $_DFFE_PP_ for $0\r_inst_data[31:0] [11] -> \r_inst_data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7596 to $_DFFE_PP_ for $0\r_inst_data[31:0] [12] -> \r_inst_data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7597 to $_DFFE_PP_ for $0\r_inst_data[31:0] [13] -> \r_inst_data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7598 to $_DFFE_PP_ for $0\r_inst_data[31:0] [14] -> \r_inst_data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7614 to $_DFFE_PP_ for $0\r_inst_data[31:0] [30] -> \r_inst_data [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7616 to $_DFFE_PP_ for $0\r_simm[31:0] [0] -> \r_simm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7617 to $_DFFE_PP_ for $0\r_simm[31:0] [1] -> \r_simm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7618 to $_DFFE_PP_ for $0\r_simm[31:0] [2] -> \r_simm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7619 to $_DFFE_PP_ for $0\r_simm[31:0] [3] -> \r_simm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7620 to $_DFFE_PP_ for $0\r_simm[31:0] [4] -> \r_simm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7621 to $_DFFE_PP_ for $0\r_simm[31:0] [5] -> \r_simm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7622 to $_DFFE_PP_ for $0\r_simm[31:0] [6] -> \r_simm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7623 to $_DFFE_PP_ for $0\r_simm[31:0] [7] -> \r_simm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7624 to $_DFFE_PP_ for $0\r_simm[31:0] [8] -> \r_simm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7625 to $_DFFE_PP_ for $0\r_simm[31:0] [9] -> \r_simm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7626 to $_DFFE_PP_ for $0\r_simm[31:0] [10] -> \r_simm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7627 to $_DFFE_PP_ for $0\r_simm[31:0] [11] -> \r_simm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7628 to $_DFFE_PP_ for $0\r_simm[31:0] [12] -> \r_simm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7629 to $_DFFE_PP_ for $0\r_simm[31:0] [13] -> \r_simm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7630 to $_DFFE_PP_ for $0\r_simm[31:0] [14] -> \r_simm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7631 to $_DFFE_PP_ for $0\r_simm[31:0] [15] -> \r_simm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7632 to $_DFFE_PP_ for $0\r_simm[31:0] [16] -> \r_simm [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7633 to $_DFFE_PP_ for $0\r_simm[31:0] [17] -> \r_simm [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7634 to $_DFFE_PP_ for $0\r_simm[31:0] [18] -> \r_simm [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7635 to $_DFFE_PP_ for $0\r_simm[31:0] [19] -> \r_simm [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7636 to $_DFFE_PP_ for $0\r_simm[31:0] [20] -> \r_simm [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7637 to $_DFFE_PP_ for $0\r_simm[31:0] [21] -> \r_simm [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7638 to $_DFFE_PP_ for $0\r_simm[31:0] [22] -> \r_simm [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7639 to $_DFFE_PP_ for $0\r_simm[31:0] [23] -> \r_simm [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7640 to $_DFFE_PP_ for $0\r_simm[31:0] [24] -> \r_simm [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7641 to $_DFFE_PP_ for $0\r_simm[31:0] [25] -> \r_simm [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7642 to $_DFFE_PP_ for $0\r_simm[31:0] [26] -> \r_simm [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7643 to $_DFFE_PP_ for $0\r_simm[31:0] [27] -> \r_simm [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7644 to $_DFFE_PP_ for $0\r_simm[31:0] [28] -> \r_simm [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7645 to $_DFFE_PP_ for $0\r_simm[31:0] [29] -> \r_simm [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7646 to $_DFFE_PP_ for $0\r_simm[31:0] [30] -> \r_simm [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7647 to $_DFFE_PP_ for $0\r_simm[31:0] [31] -> \r_simm [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7648 to $_DFFE_PP_ for $0\r_uimm[31:0] [0] -> \r_uimm [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7649 to $_DFFE_PP_ for $0\r_uimm[31:0] [1] -> \r_uimm [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7650 to $_DFFE_PP_ for $0\r_uimm[31:0] [2] -> \r_uimm [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7651 to $_DFFE_PP_ for $0\r_uimm[31:0] [3] -> \r_uimm [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7652 to $_DFFE_PP_ for $0\r_uimm[31:0] [4] -> \r_uimm [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7653 to $_DFFE_PP_ for $0\r_uimm[31:0] [5] -> \r_uimm [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7654 to $_DFFE_PP_ for $0\r_uimm[31:0] [6] -> \r_uimm [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7655 to $_DFFE_PP_ for $0\r_uimm[31:0] [7] -> \r_uimm [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7656 to $_DFFE_PP_ for $0\r_uimm[31:0] [8] -> \r_uimm [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7657 to $_DFFE_PP_ for $0\r_uimm[31:0] [9] -> \r_uimm [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7658 to $_DFFE_PP_ for $0\r_uimm[31:0] [10] -> \r_uimm [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7659 to $_DFFE_PP_ for $0\r_uimm[31:0] [11] -> \r_uimm [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7660 to $_DFFE_PP_ for $0\r_uimm[31:0] [12] -> \r_uimm [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7661 to $_DFFE_PP_ for $0\r_uimm[31:0] [13] -> \r_uimm [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7662 to $_DFFE_PP_ for $0\r_uimm[31:0] [14] -> \r_uimm [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7663 to $_DFFE_PP_ for $0\r_uimm[31:0] [15] -> \r_uimm [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7664 to $_DFFE_PP_ for $0\r_uimm[31:0] [16] -> \r_uimm [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7665 to $_DFFE_PP_ for $0\r_uimm[31:0] [17] -> \r_uimm [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7666 to $_DFFE_PP_ for $0\r_uimm[31:0] [18] -> \r_uimm [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7667 to $_DFFE_PP_ for $0\r_uimm[31:0] [19] -> \r_uimm [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7668 to $_DFFE_PP_ for $0\r_uimm[31:0] [20] -> \r_uimm [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7669 to $_DFFE_PP_ for $0\r_uimm[31:0] [21] -> \r_uimm [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7670 to $_DFFE_PP_ for $0\r_uimm[31:0] [22] -> \r_uimm [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7671 to $_DFFE_PP_ for $0\r_uimm[31:0] [23] -> \r_uimm [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7672 to $_DFFE_PP_ for $0\r_uimm[31:0] [24] -> \r_uimm [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7673 to $_DFFE_PP_ for $0\r_uimm[31:0] [25] -> \r_uimm [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7674 to $_DFFE_PP_ for $0\r_uimm[31:0] [26] -> \r_uimm [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7675 to $_DFFE_PP_ for $0\r_uimm[31:0] [27] -> \r_uimm [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7676 to $_DFFE_PP_ for $0\r_uimm[31:0] [28] -> \r_uimm [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7677 to $_DFFE_PP_ for $0\r_uimm[31:0] [29] -> \r_uimm [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7678 to $_DFFE_PP_ for $0\r_uimm[31:0] [30] -> \r_uimm [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7679 to $_DFFE_PP_ for $0\r_uimm[31:0] [31] -> \r_uimm [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7680 to $_DFFE_PP_ for $0\r_lui[0:0] -> \r_lui.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7681 to $_DFFE_PP_ for $0\r_auipc[0:0] -> \r_auipc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7685 to $_DFFE_PP_ for $0\r_lcc[0:0] -> \r_lcc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7686 to $_DFFE_PP_ for $0\r_scc[0:0] -> \r_scc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7687 to $_DFFE_PP_ for $0\r_mcc[0:0] -> \r_mcc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7688 to $_DFFE_PP_ for $0\r_rcc[0:0] -> \r_rcc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7690 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [0] -> \r_next_program_counter2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7691 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [1] -> \r_next_program_counter2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7692 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [2] -> \r_next_program_counter2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7693 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [3] -> \r_next_program_counter2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7694 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [4] -> \r_next_program_counter2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7695 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [5] -> \r_next_program_counter2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7696 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [6] -> \r_next_program_counter2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7697 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [7] -> \r_next_program_counter2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7698 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [8] -> \r_next_program_counter2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7699 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [9] -> \r_next_program_counter2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7700 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [10] -> \r_next_program_counter2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7701 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [11] -> \r_next_program_counter2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7702 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [12] -> \r_next_program_counter2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7703 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [13] -> \r_next_program_counter2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7704 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [14] -> \r_next_program_counter2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7705 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [15] -> \r_next_program_counter2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7706 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [16] -> \r_next_program_counter2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7707 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [17] -> \r_next_program_counter2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7708 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [18] -> \r_next_program_counter2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7709 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [19] -> \r_next_program_counter2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7710 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [20] -> \r_next_program_counter2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7711 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [21] -> \r_next_program_counter2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7712 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [22] -> \r_next_program_counter2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7713 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [23] -> \r_next_program_counter2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7714 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [24] -> \r_next_program_counter2 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7715 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [25] -> \r_next_program_counter2 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7716 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [26] -> \r_next_program_counter2 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7717 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [27] -> \r_next_program_counter2 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7718 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [28] -> \r_next_program_counter2 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7719 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [29] -> \r_next_program_counter2 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7720 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [30] -> \r_next_program_counter2 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7721 to $_DFFE_PP_ for $0\r_next_program_counter2[31:0] [31] -> \r_next_program_counter2 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7722 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [0] -> \r_next_program_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7723 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [1] -> \r_next_program_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7724 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [2] -> \r_next_program_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7725 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [3] -> \r_next_program_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7726 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [4] -> \r_next_program_counter [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7727 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [5] -> \r_next_program_counter [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7728 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [6] -> \r_next_program_counter [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7729 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [7] -> \r_next_program_counter [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7730 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [8] -> \r_next_program_counter [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7731 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [9] -> \r_next_program_counter [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7732 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [10] -> \r_next_program_counter [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7733 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [11] -> \r_next_program_counter [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7734 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [12] -> \r_next_program_counter [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7735 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [13] -> \r_next_program_counter [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7736 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [14] -> \r_next_program_counter [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7737 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [15] -> \r_next_program_counter [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7738 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [16] -> \r_next_program_counter [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7739 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [17] -> \r_next_program_counter [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7740 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [18] -> \r_next_program_counter [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7741 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [19] -> \r_next_program_counter [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7742 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [20] -> \r_next_program_counter [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7743 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [21] -> \r_next_program_counter [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7744 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [22] -> \r_next_program_counter [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7745 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [23] -> \r_next_program_counter [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7746 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [24] -> \r_next_program_counter [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7747 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [25] -> \r_next_program_counter [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7748 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [26] -> \r_next_program_counter [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7749 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [27] -> \r_next_program_counter [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7750 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [28] -> \r_next_program_counter [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7751 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [29] -> \r_next_program_counter [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7752 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [30] -> \r_next_program_counter [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7753 to $_DFFE_PP_ for $0\r_next_program_counter[31:0] [31] -> \r_next_program_counter [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7754 to $_DFFE_PP_ for $0\r_program_counter[31:0] [0] -> \r_program_counter [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7755 to $_DFFE_PP_ for $0\r_program_counter[31:0] [1] -> \r_program_counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7756 to $_DFFE_PP_ for $0\r_program_counter[31:0] [2] -> \r_program_counter [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7757 to $_DFFE_PP_ for $0\r_program_counter[31:0] [3] -> \r_program_counter [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7758 to $_DFFE_PP_ for $0\r_program_counter[31:0] [4] -> \r_program_counter [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7759 to $_DFFE_PP_ for $0\r_program_counter[31:0] [5] -> \r_program_counter [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7760 to $_DFFE_PP_ for $0\r_program_counter[31:0] [6] -> \r_program_counter [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7761 to $_DFFE_PP_ for $0\r_program_counter[31:0] [7] -> \r_program_counter [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7762 to $_DFFE_PP_ for $0\r_program_counter[31:0] [8] -> \r_program_counter [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7763 to $_DFFE_PP_ for $0\r_program_counter[31:0] [9] -> \r_program_counter [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7764 to $_DFFE_PP_ for $0\r_program_counter[31:0] [10] -> \r_program_counter [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7765 to $_DFFE_PP_ for $0\r_program_counter[31:0] [11] -> \r_program_counter [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7766 to $_DFFE_PP_ for $0\r_program_counter[31:0] [12] -> \r_program_counter [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7767 to $_DFFE_PP_ for $0\r_program_counter[31:0] [13] -> \r_program_counter [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7768 to $_DFFE_PP_ for $0\r_program_counter[31:0] [14] -> \r_program_counter [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7769 to $_DFFE_PP_ for $0\r_program_counter[31:0] [15] -> \r_program_counter [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7770 to $_DFFE_PP_ for $0\r_program_counter[31:0] [16] -> \r_program_counter [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7771 to $_DFFE_PP_ for $0\r_program_counter[31:0] [17] -> \r_program_counter [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7772 to $_DFFE_PP_ for $0\r_program_counter[31:0] [18] -> \r_program_counter [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7773 to $_DFFE_PP_ for $0\r_program_counter[31:0] [19] -> \r_program_counter [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7774 to $_DFFE_PP_ for $0\r_program_counter[31:0] [20] -> \r_program_counter [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7775 to $_DFFE_PP_ for $0\r_program_counter[31:0] [21] -> \r_program_counter [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7776 to $_DFFE_PP_ for $0\r_program_counter[31:0] [22] -> \r_program_counter [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7777 to $_DFFE_PP_ for $0\r_program_counter[31:0] [23] -> \r_program_counter [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7778 to $_DFFE_PP_ for $0\r_program_counter[31:0] [24] -> \r_program_counter [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7779 to $_DFFE_PP_ for $0\r_program_counter[31:0] [25] -> \r_program_counter [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7780 to $_DFFE_PP_ for $0\r_program_counter[31:0] [26] -> \r_program_counter [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7781 to $_DFFE_PP_ for $0\r_program_counter[31:0] [27] -> \r_program_counter [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7782 to $_DFFE_PP_ for $0\r_program_counter[31:0] [28] -> \r_program_counter [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7783 to $_DFFE_PP_ for $0\r_program_counter[31:0] [29] -> \r_program_counter [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7784 to $_DFFE_PP_ for $0\r_program_counter[31:0] [30] -> \r_program_counter [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7785 to $_DFFE_PP_ for $0\r_program_counter[31:0] [31] -> \r_program_counter [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7786 to $_DFFE_PP_ for $0\r_program_counter_valid[0:0] -> \r_program_counter_valid.

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~331 debug messages>

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~859 debug messages>

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ORC_R32I.$auto$alumacc.cc:485:replace_alu$1368.slice[0].carry ($lut).

2.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in ORC_R32I.

2.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in ORC_R32I.
  Merging $auto$simplemap.cc:277:simplemap_mux$7121 (A=\r_next_program_counter [31], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7785 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7056 (A=$logic_and$../source/ORC_R32I.v:202$144_Y, B=1'1, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7786 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6616 (A=$auto$memory_bram.cc:916:replace_cell$1713 [15], B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$6625) into $auto$simplemap.cc:420:simplemap_dff$6613 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6105 (A=1'0, B=\r_scc, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7253 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4824 (A=$auto$memory_bram.cc:916:replace_cell$1713 [15], B=1'0, S=$auto$simplemap.cc:256:simplemap_eqne$6790) into $auto$simplemap.cc:420:simplemap_dff$6778 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6073 (A=1'0, B=\w_master_addr [1], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7255 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6074 (A=1'0, B=\w_master_addr [2], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7256 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6075 (A=1'0, B=\w_master_addr [3], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7257 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6076 (A=1'0, B=\w_master_addr [4], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7258 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6077 (A=1'0, B=\w_master_addr [5], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7259 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6078 (A=1'0, B=\w_master_addr [6], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7260 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6079 (A=1'0, B=\w_master_addr [7], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7261 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6080 (A=1'0, B=\w_master_addr [8], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7262 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6081 (A=1'0, B=\w_master_addr [9], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7263 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6082 (A=1'0, B=\w_master_addr [10], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7264 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6083 (A=1'0, B=\w_master_addr [11], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7265 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6084 (A=1'0, B=\w_master_addr [12], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7266 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6085 (A=1'0, B=\w_master_addr [13], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7267 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6086 (A=1'0, B=\w_master_addr [14], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7268 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6087 (A=1'0, B=\w_master_addr [15], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7269 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6088 (A=1'0, B=\w_master_addr [16], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7270 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6089 (A=1'0, B=\w_master_addr [17], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7271 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6090 (A=1'0, B=\w_master_addr [18], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7272 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6091 (A=1'0, B=\w_master_addr [19], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7273 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6092 (A=1'0, B=\w_master_addr [20], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7274 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6093 (A=1'0, B=\w_master_addr [21], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7275 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6094 (A=1'0, B=\w_master_addr [22], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7276 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6095 (A=1'0, B=\w_master_addr [23], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7277 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6096 (A=1'0, B=\w_master_addr [24], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7278 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6097 (A=1'0, B=\w_master_addr [25], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7279 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6098 (A=1'0, B=\w_master_addr [26], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7280 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6099 (A=1'0, B=\w_master_addr [27], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7281 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6100 (A=1'0, B=\w_master_addr [28], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7282 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6101 (A=1'0, B=\w_master_addr [29], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7283 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6102 (A=1'0, B=\w_master_addr [30], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7284 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6072 (A=1'0, B=\w_master_addr [0], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7254 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6103 (A=1'0, B=\w_master_addr [31], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7285 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6009 (A=1'0, B=\w_s_data [1], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7287 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6010 (A=1'0, B=\w_s_data [2], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7288 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6011 (A=1'0, B=\w_s_data [3], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7289 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6012 (A=1'0, B=\w_s_data [4], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7290 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6013 (A=1'0, B=\w_s_data [5], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7291 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6014 (A=1'0, B=\w_s_data [6], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7292 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6015 (A=1'0, B=\w_s_data [7], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7293 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6016 (A=1'0, B=\w_s_data [8], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7294 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6017 (A=1'0, B=\w_s_data [9], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7295 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6018 (A=1'0, B=\w_s_data [10], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7296 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6019 (A=1'0, B=\w_s_data [11], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7297 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6020 (A=1'0, B=\w_s_data [12], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7298 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6021 (A=1'0, B=\w_s_data [13], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7299 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6022 (A=1'0, B=\w_s_data [14], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7300 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6023 (A=1'0, B=\w_s_data [15], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7301 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6024 (A=1'0, B=\w_s_data [16], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7302 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6025 (A=1'0, B=\w_s_data [17], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7303 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6026 (A=1'0, B=\w_s_data [18], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7304 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6027 (A=1'0, B=\w_s_data [19], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7305 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6028 (A=1'0, B=\w_s_data [20], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7306 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6029 (A=1'0, B=\w_s_data [21], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7307 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6030 (A=1'0, B=\w_s_data [22], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7308 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6031 (A=1'0, B=\w_s_data [23], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7309 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6032 (A=1'0, B=\w_s_data [24], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7310 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6033 (A=1'0, B=\w_s_data [25], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7311 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6034 (A=1'0, B=\w_s_data [26], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7312 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6035 (A=1'0, B=\w_s_data [27], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7313 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6036 (A=1'0, B=\w_s_data [28], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7314 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6037 (A=1'0, B=\w_s_data [29], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7315 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6038 (A=1'0, B=\w_s_data [30], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7316 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6008 (A=1'0, B=\w_s_data [0], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7286 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6039 (A=1'0, B=\w_s_data [31], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7317 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5973 (A=1'0, B=$ternary$../source/ORC_R32I.v:367$260_Y [1], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7319 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5974 (A=1'0, B=$ternary$../source/ORC_R32I.v:367$260_Y [2], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7320 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5972 (A=1'0, B=$ternary$../source/ORC_R32I.v:367$260_Y [0], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7318 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6181 (A=1'0, B=\r_lcc, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7322 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5975 (A=1'0, B=$ternary$../source/ORC_R32I.v:367$260_Y [3], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7321 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6149 (A=1'0, B=\w_master_addr [1], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7324 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6150 (A=1'0, B=\w_master_addr [2], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7325 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6151 (A=1'0, B=\w_master_addr [3], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7326 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6152 (A=1'0, B=\w_master_addr [4], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7327 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6153 (A=1'0, B=\w_master_addr [5], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7328 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6154 (A=1'0, B=\w_master_addr [6], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7329 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6155 (A=1'0, B=\w_master_addr [7], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7330 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6156 (A=1'0, B=\w_master_addr [8], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7331 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6157 (A=1'0, B=\w_master_addr [9], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7332 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6158 (A=1'0, B=\w_master_addr [10], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7333 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6159 (A=1'0, B=\w_master_addr [11], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7334 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6160 (A=1'0, B=\w_master_addr [12], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7335 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6161 (A=1'0, B=\w_master_addr [13], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7336 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6162 (A=1'0, B=\w_master_addr [14], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7337 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6163 (A=1'0, B=\w_master_addr [15], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7338 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6164 (A=1'0, B=\w_master_addr [16], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7339 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6165 (A=1'0, B=\w_master_addr [17], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7340 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6166 (A=1'0, B=\w_master_addr [18], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7341 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6167 (A=1'0, B=\w_master_addr [19], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7342 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6168 (A=1'0, B=\w_master_addr [20], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7343 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6169 (A=1'0, B=\w_master_addr [21], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7344 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6170 (A=1'0, B=\w_master_addr [22], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7345 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6171 (A=1'0, B=\w_master_addr [23], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7346 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6172 (A=1'0, B=\w_master_addr [24], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7347 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6173 (A=1'0, B=\w_master_addr [25], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7348 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6174 (A=1'0, B=\w_master_addr [26], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7349 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6175 (A=1'0, B=\w_master_addr [27], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7350 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6176 (A=1'0, B=\w_master_addr [28], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7351 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6177 (A=1'0, B=\w_master_addr [29], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7352 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6178 (A=1'0, B=\w_master_addr [30], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7353 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6148 (A=1'0, B=\w_master_addr [0], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7323 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6179 (A=1'0, B=\w_master_addr [31], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7354 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6112 (A=1'0, B=\r_inst_data [8], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7356 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6113 (A=1'0, B=\r_inst_data [9], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7357 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6114 (A=1'0, B=\r_inst_data [10], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7358 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6115 (A=1'0, B=\r_inst_data [11], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7359 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7027 (A=\i_inst_read_data [7], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7591 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7028 (A=\i_inst_read_data [8], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7592 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7029 (A=\i_inst_read_data [9], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7593 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7030 (A=\i_inst_read_data [10], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7594 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7031 (A=\i_inst_read_data [11], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7595 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7032 (A=\i_inst_read_data [12], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7596 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7033 (A=\i_inst_read_data [13], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7597 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7034 (A=\i_inst_read_data [14], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7598 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7035 (A=$procmux$1171_Y [15], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7599 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7036 (A=$procmux$1171_Y [16], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7600 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7037 (A=$procmux$1171_Y [17], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7601 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7038 (A=$procmux$1171_Y [18], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7602 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7039 (A=$procmux$1171_Y [19], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7603 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7040 (A=$procmux$1171_Y [20], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7604 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7041 (A=$procmux$1171_Y [21], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7605 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7042 (A=$procmux$1171_Y [22], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7606 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7043 (A=$procmux$1171_Y [23], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7607 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7044 (A=$procmux$1171_Y [24], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7608 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6111 (A=1'1, B=\r_inst_data [7], S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7355 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7050 (A=\i_inst_read_data [30], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7614 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6955 (A=$procmux$1146.Y [1], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7617 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6956 (A=$procmux$1146.Y [2], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7618 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6957 (A=$procmux$1146.Y [3], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7619 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6958 (A=$procmux$1146.Y [4], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7620 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6959 (A=$procmux$1146.Y [5], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7621 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6960 (A=$procmux$1146.Y [6], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7622 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6961 (A=$procmux$1146.Y [7], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7623 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6962 (A=$procmux$1146.Y [8], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7624 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6963 (A=$procmux$1146.Y [9], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7625 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6964 (A=$procmux$1146.Y [10], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6965 (A=$procmux$1146.Y [11], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6966 (A=$procmux$1146.Y [12], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7628 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6967 (A=$procmux$1146.Y [13], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7629 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6968 (A=$procmux$1146.Y [14], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7630 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6969 (A=$procmux$1146.Y [15], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7631 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6970 (A=$procmux$1146.Y [16], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7632 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6971 (A=$procmux$1146.Y [17], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7633 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6972 (A=$procmux$1146.Y [18], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7634 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6973 (A=$procmux$1146.Y [19], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7635 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6974 (A=$procmux$1146.Y [20], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7636 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6975 (A=$procmux$1146.Y [21], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7637 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6976 (A=$procmux$1146.Y [22], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7638 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6977 (A=$procmux$1146.Y [23], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7639 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6978 (A=$procmux$1146.Y [24], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7640 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6979 (A=$procmux$1146.Y [25], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7641 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6980 (A=$procmux$1146.Y [26], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7642 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6981 (A=$procmux$1146.Y [27], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7643 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6982 (A=$procmux$1146.Y [28], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7644 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6983 (A=$procmux$1146.Y [29], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7645 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6984 (A=$procmux$1146.Y [30], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7646 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6954 (A=$procmux$1146.Y [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7616 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6985 (A=$procmux$1146.Y [31], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7647 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6888 (A=$procmux$1146.Y [1], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7649 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6889 (A=$procmux$1146.Y [2], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7650 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6890 (A=$procmux$1146.Y [3], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7651 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6891 (A=$procmux$1146.Y [4], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7652 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6892 (A=$procmux$1146.Y [5], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7653 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6893 (A=$procmux$1146.Y [6], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7654 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6894 (A=$procmux$1146.Y [7], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7655 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6895 (A=$procmux$1146.Y [8], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7656 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6896 (A=$procmux$1146.Y [9], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7657 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6897 (A=$procmux$1146.Y [10], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7658 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6898 (A=$procmux$1146.Y [11], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7659 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6899 (A=$procmux$1146.Y [12], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7660 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6900 (A=$procmux$1146.Y [13], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7661 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6901 (A=$procmux$1146.Y [14], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7662 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6902 (A=$procmux$1146.Y [15], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7663 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6903 (A=$procmux$1146.Y [16], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7664 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6904 (A=$procmux$1146.Y [17], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7665 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6905 (A=$procmux$1146.Y [18], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7666 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6906 (A=$procmux$1146.Y [19], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7667 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6907 (A=$procmux$1146.Y [20], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7668 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6908 (A=$procmux$1146.Y [21], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7669 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6909 (A=$procmux$1146.Y [22], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6910 (A=$procmux$1146.Y [23], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7671 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6911 (A=$procmux$1146.Y [24], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6912 (A=$procmux$1146.Y [25], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6913 (A=$procmux$1146.Y [26], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7674 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6914 (A=$procmux$1146.Y [27], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6915 (A=$procmux$1146.Y [28], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6916 (A=$procmux$1146.Y [29], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6917 (A=$procmux$1146.Y [30], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6887 (A=$procmux$1146.Y [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7648 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6814 (A=$auto$wreduce.cc:460:run$1308 [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6811 (A=$auto$wreduce.cc:460:run$1309 [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6782 (A=$procmux$1103_Y, B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7682 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6780 (A=$procmux$1097_Y, B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7683 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6761 (A=$procmux$1091_Y, B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7684 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6808 (A=$auto$wreduce.cc:460:run$1313 [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7685 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6806 (A=$procmux$1146.S [3], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7686 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6804 (A=$auto$wreduce.cc:460:run$1315 [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7687 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6802 (A=$auto$wreduce.cc:460:run$1316 [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6758 (A=$and$../source/ORC_R32I.v:185$137_Y, B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7689 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6918 (A=$procmux$1146.Y [31], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7222 (A=\w_jump_value [1], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7691 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7223 (A=$ternary$../source/ORC_R32I.v:205$146_Y [2], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7692 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7224 (A=$ternary$../source/ORC_R32I.v:205$146_Y [3], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7693 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7225 (A=$ternary$../source/ORC_R32I.v:205$146_Y [4], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7694 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7226 (A=$ternary$../source/ORC_R32I.v:205$146_Y [5], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7695 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7227 (A=$ternary$../source/ORC_R32I.v:205$146_Y [6], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7696 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7228 (A=$ternary$../source/ORC_R32I.v:205$146_Y [7], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7697 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7229 (A=$ternary$../source/ORC_R32I.v:205$146_Y [8], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7698 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7230 (A=$ternary$../source/ORC_R32I.v:205$146_Y [9], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7699 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7231 (A=$ternary$../source/ORC_R32I.v:205$146_Y [10], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7700 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7232 (A=$ternary$../source/ORC_R32I.v:205$146_Y [11], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7701 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7233 (A=$ternary$../source/ORC_R32I.v:205$146_Y [12], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7702 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7234 (A=$ternary$../source/ORC_R32I.v:205$146_Y [13], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7703 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7235 (A=$ternary$../source/ORC_R32I.v:205$146_Y [14], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7704 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7236 (A=$ternary$../source/ORC_R32I.v:205$146_Y [15], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7705 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7237 (A=$ternary$../source/ORC_R32I.v:205$146_Y [16], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7706 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7238 (A=$ternary$../source/ORC_R32I.v:205$146_Y [17], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7707 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7239 (A=$ternary$../source/ORC_R32I.v:205$146_Y [18], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7708 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7240 (A=$ternary$../source/ORC_R32I.v:205$146_Y [19], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7709 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7241 (A=$ternary$../source/ORC_R32I.v:205$146_Y [20], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7710 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7242 (A=$ternary$../source/ORC_R32I.v:205$146_Y [21], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7711 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7243 (A=$ternary$../source/ORC_R32I.v:205$146_Y [22], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7712 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7244 (A=$ternary$../source/ORC_R32I.v:205$146_Y [23], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7713 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7245 (A=$ternary$../source/ORC_R32I.v:205$146_Y [24], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7714 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7246 (A=$ternary$../source/ORC_R32I.v:205$146_Y [25], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7715 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7247 (A=$ternary$../source/ORC_R32I.v:205$146_Y [26], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7716 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7248 (A=$ternary$../source/ORC_R32I.v:205$146_Y [27], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7717 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7249 (A=$ternary$../source/ORC_R32I.v:205$146_Y [28], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7718 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7250 (A=$ternary$../source/ORC_R32I.v:205$146_Y [29], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7719 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7251 (A=$ternary$../source/ORC_R32I.v:205$146_Y [30], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7720 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7221 (A=\w_jump_value [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7690 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7252 (A=$ternary$../source/ORC_R32I.v:205$146_Y [31], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7721 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7157 (A=\r_next_program_counter2 [1], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7723 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7158 (A=\r_next_program_counter2 [2], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7724 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7159 (A=\r_next_program_counter2 [3], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7725 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7160 (A=\r_next_program_counter2 [4], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7726 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7161 (A=\r_next_program_counter2 [5], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7727 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7162 (A=\r_next_program_counter2 [6], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7728 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7163 (A=\r_next_program_counter2 [7], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7729 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7164 (A=\r_next_program_counter2 [8], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7730 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7165 (A=\r_next_program_counter2 [9], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7731 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7166 (A=\r_next_program_counter2 [10], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7732 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7167 (A=\r_next_program_counter2 [11], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7733 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7168 (A=\r_next_program_counter2 [12], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7734 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7169 (A=\r_next_program_counter2 [13], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7735 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7170 (A=\r_next_program_counter2 [14], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7736 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7171 (A=\r_next_program_counter2 [15], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7737 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7172 (A=\r_next_program_counter2 [16], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7738 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7173 (A=\r_next_program_counter2 [17], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7739 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7174 (A=\r_next_program_counter2 [18], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7740 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7175 (A=\r_next_program_counter2 [19], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7741 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7176 (A=\r_next_program_counter2 [20], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7742 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7177 (A=\r_next_program_counter2 [21], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7178 (A=\r_next_program_counter2 [22], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7744 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7179 (A=\r_next_program_counter2 [23], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7745 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7180 (A=\r_next_program_counter2 [24], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7181 (A=\r_next_program_counter2 [25], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7747 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7182 (A=\r_next_program_counter2 [26], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7748 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7183 (A=\r_next_program_counter2 [27], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7749 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7184 (A=\r_next_program_counter2 [28], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7750 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7185 (A=\r_next_program_counter2 [29], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7751 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7186 (A=\r_next_program_counter2 [30], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7752 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7156 (A=\r_next_program_counter2 [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7722 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7187 (A=\r_next_program_counter2 [31], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7753 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7091 (A=\r_next_program_counter [1], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7755 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7092 (A=\r_next_program_counter [2], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7756 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7093 (A=\r_next_program_counter [3], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7094 (A=\r_next_program_counter [4], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7758 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7095 (A=\r_next_program_counter [5], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7759 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7096 (A=\r_next_program_counter [6], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7760 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7097 (A=\r_next_program_counter [7], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7761 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7098 (A=\r_next_program_counter [8], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7762 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7099 (A=\r_next_program_counter [9], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7763 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7100 (A=\r_next_program_counter [10], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7764 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7101 (A=\r_next_program_counter [11], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7765 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7102 (A=\r_next_program_counter [12], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7766 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7103 (A=\r_next_program_counter [13], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7767 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7104 (A=\r_next_program_counter [14], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7768 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7105 (A=\r_next_program_counter [15], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7769 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7106 (A=\r_next_program_counter [16], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7770 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7107 (A=\r_next_program_counter [17], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7771 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7108 (A=\r_next_program_counter [18], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7772 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7109 (A=\r_next_program_counter [19], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7773 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7110 (A=\r_next_program_counter [20], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7774 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7111 (A=\r_next_program_counter [21], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7775 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7112 (A=\r_next_program_counter [22], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7776 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7113 (A=\r_next_program_counter [23], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7777 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7114 (A=\r_next_program_counter [24], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7778 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7115 (A=\r_next_program_counter [25], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7779 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7116 (A=\r_next_program_counter [26], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7780 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7117 (A=\r_next_program_counter [27], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7781 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7118 (A=\r_next_program_counter [28], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7782 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7119 (A=\r_next_program_counter [29], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7783 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7120 (A=\r_next_program_counter [30], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7784 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7090 (A=\r_next_program_counter [0], B=1'0, S=\i_reset_sync) into $auto$simplemap.cc:420:simplemap_dff$7754 (SB_DFFE).

2.40. Executing ICE40_OPT pass (performing simple optimizations).

2.40.1. Running ICE40 specific optimizations.

2.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~282 debug messages>

2.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~1680 debug messages>
Removed a total of 560 cells.

2.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 224 unused cells and 2392 unused wires.
<suppressed ~225 debug messages>

2.40.6. Rerunning OPT passes. (Removed registers in this run.)

2.40.7. Running ICE40 specific optimizations.

2.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.40.12. Finished OPT passes. (There is nothing left to do.)

2.41. Executing TECHMAP pass (map to technology primitives).

2.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.41.2. Continuing TECHMAP pass.
No more expansions possible.

2.42. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

2.43. Executing ABC9 pass.

2.43.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.3. Executing PROC pass (convert processes to netlists).

2.43.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.43.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.43.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.43.3.4. Executing PROC_INIT pass (extract init attributes).

2.43.3.5. Executing PROC_ARST pass (detect async resets in processes).

2.43.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.43.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

2.43.3.8. Executing PROC_DFF pass (convert process syncs to FFs).

2.43.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.43.4. Executing TECHMAP pass (map to technology primitives).

2.43.4.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.43.4.2. Continuing TECHMAP pass.
No more expansions possible.

2.43.5. Executing OPT pass (performing simple optimizations).

2.43.5.1. Executing OPT_EXPR pass (perform const folding).

2.43.5.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

2.43.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

2.43.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

2.43.5.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

2.43.5.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.43.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).

2.43.5.8. Executing OPT_EXPR pass (perform const folding).

2.43.5.9. Finished OPT passes. (There is nothing left to do.)

2.43.6. Executing TECHMAP pass (map to technology primitives).

2.43.6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

2.43.6.2. Continuing TECHMAP pass.
No more expansions possible.

2.43.7. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

2.43.8. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module ORC_R32I.
Found 0 SCCs.

2.43.9. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~632 debug messages>

2.43.10. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.11. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

2.43.12. Executing TECHMAP pass (map to technology primitives).

2.43.12.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.43.12.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_CARRY for cells of type SB_CARRY.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
No more expansions possible.
<suppressed ~15 debug messages>

2.43.13. Executing OPT pass (performing simple optimizations).

2.43.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.
<suppressed ~4 debug messages>

2.43.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

2.43.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.43.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

2.43.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.43.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.43.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

2.43.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.43.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.43.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32I..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.43.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32I.
Performed a total of 0 changes.

2.43.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32I'.
Removed a total of 0 cells.

2.43.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.43.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32I..

2.43.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32I.

2.43.13.16. Finished OPT passes. (There is nothing left to do.)

2.43.14. Executing AIGMAP pass (map logic to AIG).
Module ORC_R32I: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

2.43.15. Executing AIGMAP pass (map logic to AIG).
Module ORC_R32I: replaced 1475 cells with 9389 new cells, skipped 3385 cells.
  replaced 3 cell types:
     312 $_OR_
      78 $_XOR_
    1085 $_MUX_
  not replaced 10 cell types:
     781 $_NOT_
    1354 $_AND_
      32 SB_DFF
      16 SB_DFFSR
     281 SB_DFFESR
       2 SB_DFFESS
       4 SB_RAM40_4K
     285 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1
     331 $paramod$__ABC9_DELAY\DELAY=21
     299 $paramod$__ABC9_DELAY\DELAY=203

2.43.15.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.15.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.15.3. Executing XAIGER backend.
<suppressed ~406 debug messages>
Extracted 5155 AND gates and 13537 wires from module `ORC_R32I' to a netlist network with 464 inputs and 820 outputs.

2.43.15.4. Executing ABC9_EXE pass (technology mapping using ABC9).

2.43.15.5. Executing ABC9.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC command line: "source /tmp/yosys-abc-68Vp9C/abc.script".

+ read_lut /tmp/yosys-abc-68Vp9C/input.lut 
+ read_box /tmp/yosys-abc-68Vp9C/input.box 
+ &read /tmp/yosys-abc-68Vp9C/input.xaig 
+ &ps 
[1;37m/tmp/yosys-abc-68Vp9C/input[0m : i/o =    464/    820  [1;36mand =    4614[0m  [1;35mlev =   37[0m [1;35m(1.81)[0m  mem = 0.12 MB  box = 915  bb = 630
Warning: AIG with boxes has internal fanout in 0 complex flops and 2 carries.
+ &scorr 
Warning: The network is combinational.
+ &sweep 
+ &dc2 
+ &dch -f 
+ &ps 
[1;37m/tmp/yosys-abc-68Vp9C/input[0m : i/o =    464/    820  [1;36mand =    5020[0m  [1;35mlev =   26[0m [1;35m(1.40)[0m  mem = 0.12 MB  ch =  593  box = 883  bb = 630
Warning: AIG with boxes has internal fanout in 0 complex flops and 2 carries.
+ &if -W 250 -v 
K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
Node =    5020.  Ch =   556.  Total mem =    1.28 MB. Peak cut mem =    0.13 MB.
P:  Del = 9890.00.  Ar =    1547.0.  Edge =     5380.  Cut =    36214.  T =     0.01 sec
P:  Del = 9890.00.  Ar =    1316.0.  Edge =     4938.  Cut =    34466.  T =     0.01 sec
P:  Del = 9890.00.  Ar =    1196.0.  Edge =     4112.  Cut =    35626.  T =     0.01 sec
F:  Del = 9890.00.  Ar =    1131.0.  Edge =     3944.  Cut =    34954.  T =     0.01 sec
A:  Del = 9890.00.  Ar =    1115.0.  Edge =     3740.  Cut =    32512.  T =     0.01 sec
A:  Del = 9890.00.  Ar =    1111.0.  Edge =     3727.  Cut =    32811.  T =     0.01 sec
Total time =     0.06 sec
+ &write -n /tmp/yosys-abc-68Vp9C/output.aig 
+ &mfs 
+ &ps -l 
[1;37m/tmp/yosys-abc-68Vp9C/input[0m : i/o =    464/    820  [1;36mand =    3360[0m  [1;35mlev =   28[0m [1;35m(1.46)[0m  mem = 0.11 MB  box = 882  bb = 630
Mapping (K=4)  :  [1;33mlut =   1109[0m  [1;32medge =    3708[0m  [1;31mlev =   13[0m [1;31m(0.73)[0m  [1;31mlevB =   39[0m  mem = 0.05 MB
LUT = 1109 : 2=109 9.8 %  3=510 46.0 %  4=490 44.2 %  Ave = 3.34
Warning: AIG with boxes has internal fanout in 0 complex flops and 1 carries.
+ &write -n /tmp/yosys-abc-68Vp9C/output.aig 
+ time 
elapse: 1.34 seconds, total: 1.34 seconds

2.43.15.6. Executing AIGER frontend.
<suppressed ~2613 debug messages>
Removed 4971 unused cells and 9291 unused wires.

2.43.15.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     1110
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      252
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:      650
Removing temp directory.

2.43.16. Executing TECHMAP pass (map to technology primitives).

2.43.16.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Successfully finished Verilog frontend.

2.43.16.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
No more expansions possible.
<suppressed ~252 debug messages>

2.44. Executing ICE40_WRAPCARRY pass (wrap carries).

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 239 unused cells and 14094 unused wires.

2.46. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1365
  1-LUT                1
  2-LUT              144
  3-LUT              729
  4-LUT              491

Eliminating LUTs.
Number of LUTs:     1365
  1-LUT                1
  2-LUT              144
  3-LUT              729
  4-LUT              491

Combining LUTs.
Number of LUTs:     1336
  1-LUT                1
  2-LUT              115
  3-LUT              700
  4-LUT              520

Eliminated 0 LUTs.
Combined 29 LUTs.
<suppressed ~8593 debug messages>

2.47. Executing TECHMAP pass (map to technology primitives).

2.47.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.47.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'00100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100001000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001111101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010101010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001101011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010100010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010110111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010100000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110011101101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011001100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010001000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111011100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010100011111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010100010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100011111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101111110001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100000101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111100100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010000000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000101000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010101010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100110000001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000111111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010011000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100110001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001000100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110111011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110010001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000101010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001001000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000010100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001010100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001010001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000001010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111001010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000001010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011110100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010100000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010110110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010101000100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000100000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110010100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111110101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101110101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000110100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111110101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101110 for cells of type $lut.
No more expansions possible.
<suppressed ~3663 debug messages>
Removed 0 unused cells and 3085 unused wires.

2.48. Executing AUTONAME pass.
Renamed 60999 objects in module ORC_R32I (133 iterations).
<suppressed ~3108 debug messages>

2.49. Executing HIERARCHY pass (managing design hierarchy).

2.49.1. Analyzing design hierarchy..
Top module:  \ORC_R32I

2.49.2. Analyzing design hierarchy..
Top module:  \ORC_R32I
Removed 0 unused modules.

2.50. Printing statistics.

=== ORC_R32I ===

   Number of wires:               1239
   Number of wire bits:           3616
   Number of public wires:        1239
   Number of public wire bits:    3616
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1918
     SB_CARRY                      247
     SB_DFF                         32
     SB_DFFESR                     281
     SB_DFFESS                       2
     SB_DFFSR                       16
     SB_LUT4                      1336
     SB_RAM40_4K                     4

2.51. Executing CHECK pass (checking for obvious problems).
checking module ORC_R32I..
found and reported 0 problems.

2.52. Executing BLIF backend.

2.53. Executing EDIF backend.

3. Executing JSON backend.

End of script. Logfile hash: 0295bd8869, CPU: user 7.49s system 0.16s, MEM: 108.36 MB peak
Yosys 0.9+2406 (git sha1 bd2ecc2d, gcc 10.1.1 -O3 -feliminate-unused-debug-types -fexceptions -fstack-protector -m64 -fasynchronous-unwind-tables -ftree-loop-distribute-patterns -fno-semantic-interposition -ffat-lto-objects -fno-trapping-math -mtune=skylake -fvisibility-inlines-hidden -fPIC -Os)
Time spent: 19% 1x abc9_exe (1 sec), 13% 27x opt_expr (1 sec), ...
