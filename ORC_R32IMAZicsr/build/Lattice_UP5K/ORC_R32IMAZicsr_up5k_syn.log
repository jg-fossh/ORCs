
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3746 (git sha1 ec410c9b, gcc 10.2.1 -O3 -feliminate-unused-debug-types -fexceptions -fstack-protector -m64 -fasynchronous-unwind-tables -ftree-loop-distribute-patterns -fno-semantic-interposition -ffat-lto-objects -fno-trapping-math -mtune=skylake -fvisibility-inlines-hidden -fPIC -Os)


-- Executing script file `syn_ice40.ys' --

1. Executing Verilog-2005 frontend: ../../source/Goldschmidt_Convergence_Division.v
Parsing Verilog input from `../../source/Goldschmidt_Convergence_Division.v' to AST representation.
Generating RTLIL representation for module `\Goldschmidt_Convergence_Division'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../source/HCC_Arithmetic_Processor.v
Parsing Verilog input from `../../source/HCC_Arithmetic_Processor.v' to AST representation.
Generating RTLIL representation for module `\HCC_Arithmetic_Processor'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../source/Generic_BRAM.v
Parsing Verilog input from `../../source/Generic_BRAM.v' to AST representation.
Generating RTLIL representation for module `\Generic_BRAM'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../../source/Memory_Backplane.v
Parsing Verilog input from `../../source/Memory_Backplane.v' to AST representation.
Generating RTLIL representation for module `\Memory_Backplane'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../../source/Hart_Core.v
Parsing Verilog input from `../../source/Hart_Core.v' to AST representation.
Generating RTLIL representation for module `\Hart_Core'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../../source/ORC_R32IMAZicsr.v
Parsing Verilog input from `../../source/ORC_R32IMAZicsr.v' to AST representation.
Generating RTLIL representation for module `\ORC_R32IMAZicsr'.
Successfully finished Verilog frontend.

7. Executing SYNTH_ICE40 pass.

7.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

7.2. Executing HIERARCHY pass (managing design hierarchy).

7.2.1. Analyzing design hierarchy..
Top module:  \ORC_R32IMAZicsr
Used module:     \Memory_Backplane
Used module:         \Generic_BRAM
Used module:     \HCC_Arithmetic_Processor
Used module:         \Goldschmidt_Convergence_Division
Used module:     \Hart_Core
Parameter 1 (\P_GCD_FACTORS_MSB) = 7
Parameter 2 (\P_GCD_ACCURACY) = 2
Parameter 3 (\P_GCD_MEM_ADDR_MSB) = 0

7.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\Goldschmidt_Convergence_Division'.
Parameter 1 (\P_GCD_FACTORS_MSB) = 7
Parameter 2 (\P_GCD_ACCURACY) = 2
Parameter 3 (\P_GCD_MEM_ADDR_MSB) = 0
Generating RTLIL representation for module `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=7\P_GCD_ACCURACY=2\P_GCD_MEM_ADDR_MSB=0'.
Parameter 1 (\P_BRAM_DATA_MSB) = 32'11111111111111111111111111111111
Parameter 2 (\P_BRAM_ADDRESS_MSB) = 0
Parameter 3 (\P_BRAM_DEPTH) = 0
Parameter 4 (\P_BRAM_HAS_FILE) = 0
Parameter 5 (\P_BRAM_INIT_FILE) = 0

7.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\Generic_BRAM'.
Parameter 1 (\P_BRAM_DATA_MSB) = 32'11111111111111111111111111111111
Parameter 2 (\P_BRAM_ADDRESS_MSB) = 0
Parameter 3 (\P_BRAM_DEPTH) = 0
Parameter 4 (\P_BRAM_HAS_FILE) = 0
Parameter 5 (\P_BRAM_INIT_FILE) = 0
Generating RTLIL representation for module `$paramod$9da9b5f6884bb51e96883fcd99e4dfe0ad54a360\Generic_BRAM'.
Parameter 1 (\P_BRAM_DATA_MSB) = 32'11111111111111111111111111111111
Parameter 2 (\P_BRAM_ADDRESS_MSB) = 0
Parameter 3 (\P_BRAM_DEPTH) = 0
Parameter 4 (\P_BRAM_HAS_FILE) = 0
Parameter 5 (\P_BRAM_INIT_FILE) = 0
Found cached RTLIL representation for module `$paramod$9da9b5f6884bb51e96883fcd99e4dfe0ad54a360\Generic_BRAM'.
Parameter 1 (\P_MEM_ADDR_MSB) = 4
Parameter 2 (\P_MEM_DEPTH) = 32
Parameter 3 (\P_MEM_WIDTH) = 32
Parameter 4 (\P_MEM_NUM_REGS) = 32
Parameter 5 (\P_MEM_HAS_FILE) = 0
Parameter 6 (\P_MEM_INIT_FILE) = 0
Parameter 7 (\P_MEM_ANLOGIC_BRAM) = 0

7.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\Memory_Backplane'.
Parameter 1 (\P_MEM_ADDR_MSB) = 4
Parameter 2 (\P_MEM_DEPTH) = 32
Parameter 3 (\P_MEM_WIDTH) = 32
Parameter 4 (\P_MEM_NUM_REGS) = 32
Parameter 5 (\P_MEM_HAS_FILE) = 0
Parameter 6 (\P_MEM_INIT_FILE) = 0
Parameter 7 (\P_MEM_ANLOGIC_BRAM) = 0
Generating RTLIL representation for module `$paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane'.
Parameter 1 (\P_HCC_FACTORS_MSB) = 31
Parameter 2 (\P_HCC_MEM_ADDR_MSB) = 4
Parameter 3 (\P_HCC_DIV_ACCURACY) = 12
Parameter 4 (\P_HCC_ANLOGIC_MUL) = 0

7.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\HCC_Arithmetic_Processor'.
Parameter 1 (\P_HCC_FACTORS_MSB) = 31
Parameter 2 (\P_HCC_MEM_ADDR_MSB) = 4
Parameter 3 (\P_HCC_DIV_ACCURACY) = 12
Parameter 4 (\P_HCC_ANLOGIC_MUL) = 0
Generating RTLIL representation for module `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor'.
Parameter 1 (\P_CORE_INITIAL_FETCH_ADDR) = 0
Parameter 2 (\P_CORE_MEMORY_ADDR_MSB) = 4

7.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\Hart_Core'.
Parameter 1 (\P_CORE_INITIAL_FETCH_ADDR) = 0
Parameter 2 (\P_CORE_MEMORY_ADDR_MSB) = 4
Generating RTLIL representation for module `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4'.

7.2.7. Analyzing design hierarchy..
Top module:  \ORC_R32IMAZicsr
Used module:     $paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane
Used module:         \Generic_BRAM
Used module:     $paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor
Used module:         \Goldschmidt_Convergence_Division
Used module:     $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4
Parameter 1 (\P_GCD_FACTORS_MSB) = 31
Parameter 2 (\P_GCD_ACCURACY) = 12
Parameter 3 (\P_GCD_MEM_ADDR_MSB) = 4

7.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\Goldschmidt_Convergence_Division'.
Parameter 1 (\P_GCD_FACTORS_MSB) = 31
Parameter 2 (\P_GCD_ACCURACY) = 12
Parameter 3 (\P_GCD_MEM_ADDR_MSB) = 4
Generating RTLIL representation for module `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4'.
Parameter 1 (\P_BRAM_DATA_MSB) = 31
Parameter 2 (\P_BRAM_ADDRESS_MSB) = 4
Parameter 3 (\P_BRAM_DEPTH) = 32
Parameter 4 (\P_BRAM_HAS_FILE) = 0
Parameter 5 (\P_BRAM_INIT_FILE) = 0

7.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\Generic_BRAM'.
Parameter 1 (\P_BRAM_DATA_MSB) = 31
Parameter 2 (\P_BRAM_ADDRESS_MSB) = 4
Parameter 3 (\P_BRAM_DEPTH) = 32
Parameter 4 (\P_BRAM_HAS_FILE) = 0
Parameter 5 (\P_BRAM_INIT_FILE) = 0
Generating RTLIL representation for module `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM'.
Parameter 1 (\P_BRAM_DATA_MSB) = 31
Parameter 2 (\P_BRAM_ADDRESS_MSB) = 4
Parameter 3 (\P_BRAM_DEPTH) = 32
Parameter 4 (\P_BRAM_HAS_FILE) = 0
Parameter 5 (\P_BRAM_INIT_FILE) = 0
Found cached RTLIL representation for module `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM'.

7.2.10. Analyzing design hierarchy..
Top module:  \ORC_R32IMAZicsr
Used module:     $paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane
Used module:         $paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM
Used module:     $paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor
Used module:         $paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4
Used module:     $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4

7.2.11. Analyzing design hierarchy..
Top module:  \ORC_R32IMAZicsr
Used module:     $paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane
Used module:         $paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM
Used module:     $paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor
Used module:         $paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4
Used module:     $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4
Removing unused module `$paramod$9da9b5f6884bb51e96883fcd99e4dfe0ad54a360\Generic_BRAM'.
Removing unused module `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=7\P_GCD_ACCURACY=2\P_GCD_MEM_ADDR_MSB=0'.
Removing unused module `\Hart_Core'.
Removing unused module `\Memory_Backplane'.
Removing unused module `\Generic_BRAM'.
Removing unused module `\HCC_Arithmetic_Processor'.
Removing unused module `\Goldschmidt_Convergence_Division'.
Removed 7 unused modules.

7.3. Executing PROC pass (convert processes to netlists).

7.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$649 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$642 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$638 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$631 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$628 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$625 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$622 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$619 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$611 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$604 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$600 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$593 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$590 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$587 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$584 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$581 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$../../source/Hart_Core.v:539$1171 in module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Marked 1 switch rules as full_case in process $proc$../../source/Hart_Core.v:514$1165 in module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Marked 9 switch rules as full_case in process $proc$../../source/Hart_Core.v:361$1133 in module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Removed 1 dead cases from process $proc$../../source/Hart_Core.v:277$1100 in module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Marked 5 switch rules as full_case in process $proc$../../source/Hart_Core.v:277$1100 in module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Marked 1 switch rules as full_case in process $proc$../../source/HCC_Arithmetic_Processor.v:115$889 in module $paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.
Marked 1 switch rules as full_case in process $proc$../../source/Memory_Backplane.v:105$866 in module $paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane.
Marked 9 switch rules as full_case in process $proc$../../source/Goldschmidt_Convergence_Division.v:201$1237 in module $paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.
Marked 9 switch rules as full_case in process $proc$../../source/Goldschmidt_Convergence_Division.v:151$1227 in module $paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.
Removed a total of 1 dead cases.

7.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 20 redundant assignments.
Promoted 24 assignments to connections.

7.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$652'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$648'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$641'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$637'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$630'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$627'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$624'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$621'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$618'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$616'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$614'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$610'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$603'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$599'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$592'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$589'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$586'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$583'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$580'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$578'.
  Set init value: \Q = 1'0

7.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$649'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$638'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$628'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$622'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$611'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$600'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$590'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$584'.

7.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$652'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$649'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$648'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$642'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$641'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$638'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$637'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$631'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$630'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$628'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$627'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$625'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$624'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$622'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$621'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$619'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$618'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$617'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$616'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$615'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$614'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$611'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$610'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$604'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$603'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$600'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$599'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$593'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$592'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$590'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$589'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$587'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$586'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$584'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$583'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$581'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$580'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$579'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$578'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$577'.
Creating decoders for process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:539$1171'.
     1/1: $0\r_master_write_ready[0:0]
Creating decoders for process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:514$1165'.
     1/2: $0\r_master_read_addr[31:0]
     2/2: $0\r_master_read_ready[0:0]
Creating decoders for process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
     1/12: $0\r_high_results[0:0]
     2/12: $0\r_div[0:0]
     3/12: $0\r_mul[0:0]
     4/12: $0\r_rro[0:0]
     5/12: $0\r_rii[0:0]
     6/12: $0\r_scc[0:0]
     7/12: $0\r_lcc[0:0]
     8/12: $0\r_bcc[0:0]
     9/12: $0\r_jalr[0:0]
    10/12: $0\r_low_results[0:0]
    11/12: $0\r_uimm[31:0]
    12/12: $0\r_simm[31:0]
Creating decoders for process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:277$1100'.
     1/5: $0\r_program_counter_state[1:0]
     2/5: $0\r_inst_data[31:0]
     3/5: $0\r_program_counter_valid[0:0]
     4/5: $0\r_next_pc_decode[31:0]
     5/5: $0\r_next_pc_fetch[31:0]
Creating decoders for process `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:152$899'.
Creating decoders for process `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:115$889'.
     1/4: $0\r_tgd[0:0]
     2/4: $0\r_addr[4:0]
     3/4: $0\r_select[0:0]
     4/4: $0\r_wait_ack[0:0]
Creating decoders for process `$paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane.$proc$../../source/Memory_Backplane.v:105$866'.
     1/1: $0\reset_index[4:0]
Creating decoders for process `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$proc$../../source/Generic_BRAM.v:96$1253'.
Creating decoders for process `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$proc$../../source/Generic_BRAM.v:84$1248'.
     1/3: $0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251
     2/3: $0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_DATA[31:0]$1250
     3/3: $0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_ADDR[4:0]$1249
Creating decoders for process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
     1/7: $0\r_divider_state[2:0]
     2/7: $0\r_div_write_stb[0:0]
     3/7: $0\r_multiplier[63:0]
     4/7: $0\r_multiplicand[63:0]
     5/7: $0\r_divisor[31:0]
     6/7: $0\r_dividend[31:0]
     7/7: $0\r_calculate_remainder[0:0]
Creating decoders for process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:151$1227'.
     1/1: $0\r_lut_value[31:0]

7.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

7.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$649'.
  created $adff cell `$procdff$1753' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$642'.
  created $dff cell `$procdff$1754' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$638'.
  created $adff cell `$procdff$1755' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$631'.
  created $dff cell `$procdff$1756' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$628'.
  created $adff cell `$procdff$1757' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$625'.
  created $dff cell `$procdff$1758' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$622'.
  created $adff cell `$procdff$1759' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$619'.
  created $dff cell `$procdff$1760' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$617'.
  created $dff cell `$procdff$1761' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$615'.
  created $dff cell `$procdff$1762' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$611'.
  created $adff cell `$procdff$1763' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$604'.
  created $dff cell `$procdff$1764' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$600'.
  created $adff cell `$procdff$1765' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$593'.
  created $dff cell `$procdff$1766' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$590'.
  created $adff cell `$procdff$1767' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$587'.
  created $dff cell `$procdff$1768' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$584'.
  created $adff cell `$procdff$1769' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$581'.
  created $dff cell `$procdff$1770' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$579'.
  created $dff cell `$procdff$1771' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$577'.
  created $dff cell `$procdff$1772' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_master_write_ready' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:539$1171'.
  created $dff cell `$procdff$1773' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_master_read_ready' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:514$1165'.
  created $dff cell `$procdff$1774' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_master_read_addr' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:514$1165'.
  created $dff cell `$procdff$1775' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_simm' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1776' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_uimm' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1777' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_jalr' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1778' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_bcc' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1779' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_lcc' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1780' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_scc' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1781' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_rii' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1782' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_rro' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1783' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_mul' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1784' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_div' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1785' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_low_results' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1786' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_high_results' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
  created $dff cell `$procdff$1787' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_next_pc_fetch' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:277$1100'.
  created $dff cell `$procdff$1788' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_next_pc_decode' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:277$1100'.
  created $dff cell `$procdff$1789' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_program_counter_valid' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:277$1100'.
  created $dff cell `$procdff$1790' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_inst_data' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:277$1100'.
  created $dff cell `$procdff$1791' with positive edge clock.
Creating register for signal `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.\r_program_counter_state' using process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:277$1100'.
  created $dff cell `$procdff$1792' with positive edge clock.
Creating register for signal `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.\r_product' using process `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:152$899'.
  created $dff cell `$procdff$1793' with positive edge clock.
Creating register for signal `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.\r_wait_ack' using process `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:115$889'.
  created $dff cell `$procdff$1794' with positive edge clock.
Creating register for signal `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.\r_select' using process `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:115$889'.
  created $dff cell `$procdff$1795' with positive edge clock.
Creating register for signal `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.\r_addr' using process `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:115$889'.
  created $dff cell `$procdff$1796' with positive edge clock.
Creating register for signal `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.\r_tgd' using process `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:115$889'.
  created $dff cell `$procdff$1797' with positive edge clock.
Creating register for signal `$paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane.\reset_index' using process `$paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane.$proc$../../source/Memory_Backplane.v:105$866'.
  created $dff cell `$procdff$1798' with positive edge clock.
Creating register for signal `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.\r_rdata' using process `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$proc$../../source/Generic_BRAM.v:96$1253'.
  created $dff cell `$procdff$1799' with positive edge clock.
Creating register for signal `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_ADDR' using process `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$proc$../../source/Generic_BRAM.v:84$1248'.
  created $dff cell `$procdff$1800' with positive edge clock.
Creating register for signal `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_DATA' using process `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$proc$../../source/Generic_BRAM.v:84$1248'.
  created $dff cell `$procdff$1801' with positive edge clock.
Creating register for signal `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN' using process `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$proc$../../source/Generic_BRAM.v:84$1248'.
  created $dff cell `$procdff$1802' with positive edge clock.
Creating register for signal `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.\r_divider_state' using process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
  created $dff cell `$procdff$1803' with positive edge clock.
Creating register for signal `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.\r_calculate_remainder' using process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
  created $dff cell `$procdff$1804' with positive edge clock.
Creating register for signal `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.\r_dividend' using process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
  created $dff cell `$procdff$1805' with positive edge clock.
Creating register for signal `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.\r_divisor' using process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
  created $dff cell `$procdff$1806' with positive edge clock.
Creating register for signal `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.\r_multiplicand' using process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
  created $dff cell `$procdff$1807' with positive edge clock.
Creating register for signal `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.\r_multiplier' using process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
  created $dff cell `$procdff$1808' with positive edge clock.
Creating register for signal `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.\r_div_write_stb' using process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
  created $dff cell `$procdff$1809' with positive edge clock.
Creating register for signal `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.\r_lut_value' using process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:151$1227'.
  created $dff cell `$procdff$1810' with positive edge clock.

7.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$652'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$649'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$649'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$648'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$642'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$642'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$641'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$638'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$638'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$637'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$631'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$631'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$630'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$628'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$627'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$625'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$625'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$624'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$622'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$621'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$619'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$619'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$618'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$617'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$617'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$616'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$615'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$614'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$611'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$611'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$610'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$604'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$604'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$603'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$600'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$600'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$599'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$593'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$593'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$592'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$590'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$589'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$587'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$587'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$586'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$584'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$583'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$581'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$581'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$580'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$579'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$579'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$578'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$577'.
Found and cleaned up 3 empty switches in `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:539$1171'.
Removing empty process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:539$1171'.
Found and cleaned up 3 empty switches in `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:514$1165'.
Removing empty process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:514$1165'.
Found and cleaned up 9 empty switches in `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
Removing empty process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:361$1133'.
Found and cleaned up 9 empty switches in `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:277$1100'.
Removing empty process `$paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.$proc$../../source/Hart_Core.v:277$1100'.
Removing empty process `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:152$899'.
Found and cleaned up 4 empty switches in `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:115$889'.
Removing empty process `$paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.$proc$../../source/HCC_Arithmetic_Processor.v:115$889'.
Found and cleaned up 1 empty switch in `$paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane.$proc$../../source/Memory_Backplane.v:105$866'.
Removing empty process `$paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane.$proc$../../source/Memory_Backplane.v:105$866'.
Removing empty process `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$proc$../../source/Generic_BRAM.v:96$1253'.
Found and cleaned up 1 empty switch in `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$proc$../../source/Generic_BRAM.v:84$1248'.
Removing empty process `$paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.$proc$../../source/Generic_BRAM.v:84$1248'.
Found and cleaned up 9 empty switches in `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
Removing empty process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:201$1237'.
Found and cleaned up 9 empty switches in `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:151$1227'.
Removing empty process `$paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.$proc$../../source/Goldschmidt_Convergence_Division.v:151$1227'.
Cleaned up 66 empty switches.

7.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\Hart_Core\P_CORE_INITIAL_FETCH_ADDR=0\P_CORE_MEMORY_ADDR_MSB=4.
Deleting now unused module $paramod$351f1300641f1ec237a8ed29318e8720330252d0\HCC_Arithmetic_Processor.
Deleting now unused module $paramod$fc2949d6fc7a95af1b5967e9ba9f817d99fe6446\Memory_Backplane.
Deleting now unused module $paramod$ba7293154acf6dfcb9fc8b9fd49bc69d66ea9990\Generic_BRAM.
Deleting now unused module $paramod\Goldschmidt_Convergence_Division\P_GCD_FACTORS_MSB=31\P_GCD_ACCURACY=12\P_GCD_MEM_ADDR_MSB=4.
<suppressed ~6 debug messages>

7.5. Executing TRIBUF pass.

7.6. Executing DEMINOUT pass (demote inout ports to input or output).

7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~135 debug messages>

7.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 14 unused cells and 337 unused wires.
<suppressed ~23 debug messages>

7.9. Executing CHECK pass (checking for obvious problems).
Checking module ORC_R32IMAZicsr...
Found and reported 0 problems.

7.10. Executing OPT pass (performing simple optimizations).

7.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~291 debug messages>
Removed a total of 97 cells.

7.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~66 debug messages>

7.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
    Consolidated identical input bits for $mux cell $flatten\mem_access_controller.\mem_space0.$procmux$1556:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251
      New ports: A=1'0, B=1'1, Y=$flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0]
      New connections: $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [31:1] = { $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space0.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] }
    Consolidated identical input bits for $mux cell $flatten\mem_access_controller.\mem_space1.$procmux$1556:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251
      New ports: A=1'0, B=1'1, Y=$flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0]
      New connections: $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [31:1] = { $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] $flatten\mem_access_controller.\mem_space1.$0$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN[31:0]$1251 [0] }
    New ctrl vector for $pmux cell $flatten\mul_div_processor.\div.$procmux$1564: { $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:130$1207_Y $flatten\mul_div_processor.\div.$procmux$1574_CMP $flatten\mul_div_processor.\div.$procmux$1572_CMP $auto$opt_reduce.cc:134:opt_mux$1812 }
    New ctrl vector for $pmux cell $flatten\mul_div_processor.\div.$procmux$1595: { $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:130$1207_Y $flatten\mul_div_processor.\div.$procmux$1572_CMP $auto$opt_reduce.cc:134:opt_mux$1814 $flatten\mul_div_processor.\div.$procmux$1596_CMP }
    New ctrl vector for $pmux cell $flatten\mul_div_processor.\div.$procmux$1627: { $flatten\mul_div_processor.\div.$procmux$1574_CMP $flatten\mul_div_processor.\div.$procmux$1572_CMP $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:125$1201_Y $auto$opt_reduce.cc:134:opt_mux$1816 }
    New ctrl vector for $pmux cell $flatten\mul_div_processor.\div.$procmux$1644: { $flatten\mul_div_processor.\div.$procmux$1574_CMP $flatten\mul_div_processor.\div.$procmux$1573_CMP $flatten\mul_div_processor.\div.$procmux$1572_CMP $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:125$1201_Y $auto$opt_reduce.cc:134:opt_mux$1818 }
    New ctrl vector for $pmux cell $flatten\mul_div_processor.\div.$procmux$1661: { $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:130$1207_Y $auto$opt_reduce.cc:134:opt_mux$1820 }
    New ctrl vector for $pmux cell $flatten\mul_div_processor.\div.$procmux$1687: { $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:130$1207_Y $auto$opt_reduce.cc:134:opt_mux$1822 }
    New ctrl vector for $pmux cell $flatten\mul_div_processor.\div.$procmux$1713: { $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:130$1207_Y $auto$opt_reduce.cc:134:opt_mux$1824 }
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 9 changes.

7.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

7.10.6. Executing OPT_DFF pass (perform DFF optimizations).

7.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 0 unused cells and 109 unused wires.
<suppressed ~1 debug messages>

7.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.10.9. Rerunning OPT passes. (Maybe there is more to do..)

7.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

7.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 0 changes.

7.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.10.13. Executing OPT_DFF pass (perform DFF optimizations).

7.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.10.16. Finished OPT passes. (There is nothing left to do.)

7.11. Executing FSM pass (extract and optimize FSM).

7.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ORC_R32IMAZicsr.$flatten\mem_access_controller.\mem_space0.$memwr$\r_mem$../../source/Generic_BRAM.v:86$1247_EN as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register ORC_R32IMAZicsr.core.r_program_counter_state.
Found FSM state register ORC_R32IMAZicsr.mul_div_processor.div.r_divider_state.
Not marking ORC_R32IMAZicsr.mul_div_processor.div.r_lut_value as FSM state register:
    Users of register don't seem to benefit from recoding.

7.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\core.r_program_counter_state' from module `\ORC_R32IMAZicsr'.
  found $dff cell for state register: $flatten\core.$procdff$1792
  root of input selection tree: $flatten\core.$0\r_program_counter_state[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \i_reset_sync
  found ctrl input: $flatten\core.$procmux$1457_CMP
  found ctrl input: $flatten\core.$procmux$1462_CMP
  found ctrl input: $flatten\core.$procmux$1469_CMP
  found ctrl input: $flatten\core.$procmux$1470_CMP
  found ctrl input: $flatten\core.$logic_or$../../source/Hart_Core.v:343$1132_Y
  found state code: 2'01
  found ctrl input: $flatten\core.$logic_or$../../source/Hart_Core.v:332$1126_Y
  found ctrl input: $flatten\core.$logic_or$../../source/Hart_Core.v:327$1119_Y
  found state code: 2'11
  found ctrl input: \i_inst_read_ack
  found ctrl input: $flatten\core.$logic_or$../../source/Hart_Core.v:296$1107_Y
  found state code: 2'10
  found state code: 2'00
  found ctrl output: $flatten\core.$procmux$1470_CMP
  found ctrl output: $flatten\core.$procmux$1469_CMP
  found ctrl output: $flatten\core.$procmux$1462_CMP
  found ctrl output: $flatten\core.$procmux$1457_CMP
  ctrl inputs: { $flatten\core.$logic_or$../../source/Hart_Core.v:296$1107_Y $flatten\core.$logic_or$../../source/Hart_Core.v:327$1119_Y $flatten\core.$logic_or$../../source/Hart_Core.v:332$1126_Y $flatten\core.$logic_or$../../source/Hart_Core.v:343$1132_Y \i_inst_read_ack \i_reset_sync }
  ctrl outputs: { $flatten\core.$0\r_program_counter_state[1:0] $flatten\core.$procmux$1457_CMP $flatten\core.$procmux$1462_CMP $flatten\core.$procmux$1469_CMP $flatten\core.$procmux$1470_CMP }
  transition:       2'00 6'-----0 ->       2'01 6'010001
  transition:       2'00 6'-----1 ->       2'00 6'000001
  transition:       2'10 6'-00--0 ->       2'10 6'100100
  transition:       2'10 6'-10--0 ->       2'11 6'110100
  transition:       2'10 6'--1--0 ->       2'01 6'010100
  transition:       2'10 6'-----1 ->       2'00 6'000100
  transition:       2'01 6'----00 ->       2'01 6'010010
  transition:       2'01 6'0---10 ->       2'01 6'010010
  transition:       2'01 6'1---10 ->       2'10 6'100010
  transition:       2'01 6'-----1 ->       2'00 6'000010
  transition:       2'11 6'---0-0 ->       2'11 6'111000
  transition:       2'11 6'---1-0 ->       2'01 6'011000
  transition:       2'11 6'-----1 ->       2'00 6'001000
Extracting FSM `\mul_div_processor.div.r_divider_state' from module `\ORC_R32IMAZicsr'.
  found $dff cell for state register: $flatten\mul_div_processor.\div.$procdff$1803
  root of input selection tree: $flatten\mul_div_processor.\div.$0\r_divider_state[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \i_reset_sync
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$1812
  found ctrl input: $flatten\mul_div_processor.\div.$procmux$1572_CMP
  found ctrl input: $flatten\mul_div_processor.\div.$procmux$1574_CMP
  found ctrl input: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:130$1207_Y
  found state code: 3'000
  found state code: 3'011
  found ctrl input: \mul_div_processor.div.w_converged
  found state code: 3'100
  found ctrl input: \mul_div_processor.div.r_calculate_remainder
  found state code: 3'101
  found state code: 3'010
  found ctrl input: \mul_div_processor.div.i_slave_stb
  found ctrl input: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:119$1199_Y
  found ctrl input: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:118$1197_Y
  found ctrl input: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:229$1242_Y
  found ctrl input: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:236$1243_Y
  found state code: 3'001
  found ctrl output: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:125$1201_Y
  found ctrl output: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:130$1207_Y
  found ctrl output: $flatten\mul_div_processor.\div.$procmux$1572_CMP
  found ctrl output: $flatten\mul_div_processor.\div.$procmux$1573_CMP
  found ctrl output: $flatten\mul_div_processor.\div.$procmux$1574_CMP
  found ctrl output: $flatten\mul_div_processor.\div.$procmux$1596_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_mux$1812 $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:236$1243_Y $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:229$1242_Y $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:119$1199_Y \mul_div_processor.div.i_slave_stb \mul_div_processor.div.r_calculate_remainder \mul_div_processor.div.w_converged $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:118$1197_Y \i_reset_sync }
  ctrl outputs: { $flatten\mul_div_processor.\div.$procmux$1596_CMP $flatten\mul_div_processor.\div.$procmux$1574_CMP $flatten\mul_div_processor.\div.$procmux$1573_CMP $flatten\mul_div_processor.\div.$procmux$1572_CMP $flatten\mul_div_processor.\div.$0\r_divider_state[2:0] $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:130$1207_Y $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:125$1201_Y }
  transition:      3'000 9'----0---0 ->      3'000 9'000000010
  transition:      3'000 9'-0001--00 ->      3'001 9'000000110
  transition:      3'000 9'-1001--00 ->      3'000 9'000000010
  transition:      3'000 9'--101--00 ->      3'000 9'000000010
  transition:      3'000 9'---01--10 ->      3'000 9'000000010
  transition:      3'000 9'---11---0 ->      3'000 9'000000010
  transition:      3'000 9'--------1 ->      3'000 9'000000010
  transition:      3'100 9'--------0 ->      3'011 9'000001101
  transition:      3'100 9'--------1 ->      3'000 9'000000001
  transition:      3'010 9'--------0 ->      3'011 9'001001100
  transition:      3'010 9'--------1 ->      3'000 9'001000000
  transition:      3'001 9'--------0 ->      3'010 9'010001000
  transition:      3'001 9'--------1 ->      3'000 9'010000000
  transition:      3'101 9'--------0 ->      3'000 9'100000000
  transition:      3'101 9'--------1 ->      3'000 9'100000000
  transition:      3'011 9'------0-0 ->      3'100 9'000110000
  transition:      3'011 9'-----01-0 ->      3'000 9'000100000
  transition:      3'011 9'-----11-0 ->      3'101 9'000110100
  transition:      3'011 9'--------1 ->      3'000 9'000100000

7.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mul_div_processor.div.r_divider_state$1831' from module `\ORC_R32IMAZicsr'.
  Merging pattern 9'--------0 and 9'--------1 from group (4 0 9'100000000).
  Merging pattern 9'--------1 and 9'--------0 from group (4 0 9'100000000).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_mux$1812.
Optimizing FSM `$fsm$\core.r_program_counter_state$1825' from module `\ORC_R32IMAZicsr'.

7.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 29 unused cells and 29 unused wires.
<suppressed ~30 debug messages>

7.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\core.r_program_counter_state$1825' from module `\ORC_R32IMAZicsr'.
  Removing unused output signal $flatten\core.$0\r_program_counter_state[1:0] [0].
  Removing unused output signal $flatten\core.$0\r_program_counter_state[1:0] [1].
Optimizing FSM `$fsm$\mul_div_processor.div.r_divider_state$1831' from module `\ORC_R32IMAZicsr'.
  Removing unused output signal $flatten\mul_div_processor.\div.$0\r_divider_state[2:0] [0].
  Removing unused output signal $flatten\mul_div_processor.\div.$0\r_divider_state[2:0] [1].
  Removing unused output signal $flatten\mul_div_processor.\div.$0\r_divider_state[2:0] [2].

7.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\core.r_program_counter_state$1825' from module `\ORC_R32IMAZicsr' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\mul_div_processor.div.r_divider_state$1831' from module `\ORC_R32IMAZicsr' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----

7.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\core.r_program_counter_state$1825' from module `ORC_R32IMAZicsr':
-------------------------------------

  Information on FSM $fsm$\core.r_program_counter_state$1825 (\core.r_program_counter_state):

  Number of input signals:    6
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: \i_reset_sync
    1: \i_inst_read_ack
    2: $flatten\core.$logic_or$../../source/Hart_Core.v:343$1132_Y
    3: $flatten\core.$logic_or$../../source/Hart_Core.v:332$1126_Y
    4: $flatten\core.$logic_or$../../source/Hart_Core.v:327$1119_Y
    5: $flatten\core.$logic_or$../../source/Hart_Core.v:296$1107_Y

  Output signals:
    0: $flatten\core.$procmux$1470_CMP
    1: $flatten\core.$procmux$1469_CMP
    2: $flatten\core.$procmux$1462_CMP
    3: $flatten\core.$procmux$1457_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----1   ->     0 4'0001
      1:     0 6'-----0   ->     2 4'0001
      2:     1 6'-----1   ->     0 4'0100
      3:     1 6'-00--0   ->     1 4'0100
      4:     1 6'--1--0   ->     2 4'0100
      5:     1 6'-10--0   ->     3 4'0100
      6:     2 6'-----1   ->     0 4'0010
      7:     2 6'1---10   ->     1 4'0010
      8:     2 6'----00   ->     2 4'0010
      9:     2 6'0---10   ->     2 4'0010
     10:     3 6'-----1   ->     0 4'1000
     11:     3 6'---1-0   ->     2 4'1000
     12:     3 6'---0-0   ->     3 4'1000

-------------------------------------

FSM `$fsm$\mul_div_processor.div.r_divider_state$1831' from module `ORC_R32IMAZicsr':
-------------------------------------

  Information on FSM $fsm$\mul_div_processor.div.r_divider_state$1831 (\mul_div_processor.div.r_divider_state):

  Number of input signals:    8
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \i_reset_sync
    1: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:118$1197_Y
    2: \mul_div_processor.div.w_converged
    3: \mul_div_processor.div.r_calculate_remainder
    4: \mul_div_processor.div.i_slave_stb
    5: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:119$1199_Y
    6: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:229$1242_Y
    7: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:236$1243_Y

  Output signals:
    0: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:125$1201_Y
    1: $flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:130$1207_Y
    2: $flatten\mul_div_processor.\div.$procmux$1572_CMP
    3: $flatten\mul_div_processor.\div.$procmux$1573_CMP
    4: $flatten\mul_div_processor.\div.$procmux$1574_CMP
    5: $flatten\mul_div_processor.\div.$procmux$1596_CMP

  State encoding:
    0:   6'-----1  <RESET STATE>
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'1001--00   ->     0 6'000010
      1:     0 8'-101--00   ->     0 6'000010
      2:     0 8'--01--10   ->     0 6'000010
      3:     0 8'---0---0   ->     0 6'000010
      4:     0 8'--11---0   ->     0 6'000010
      5:     0 8'-------1   ->     0 6'000010
      6:     0 8'0001--00   ->     3 6'000010
      7:     1 8'-------1   ->     0 6'000001
      8:     1 8'-------0   ->     5 6'000001
      9:     2 8'-------1   ->     0 6'001000
     10:     2 8'-------0   ->     5 6'001000
     11:     3 8'-------1   ->     0 6'010000
     12:     3 8'-------0   ->     2 6'010000
     13:     4 8'--------   ->     0 6'100000
     14:     5 8'----01-0   ->     0 6'000100
     15:     5 8'-------1   ->     0 6'000100
     16:     5 8'-----0-0   ->     1 6'000100
     17:     5 8'----11-0   ->     4 6'000100

-------------------------------------

7.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\core.r_program_counter_state$1825' from module `\ORC_R32IMAZicsr'.
Mapping FSM `$fsm$\mul_div_processor.div.r_divider_state$1831' from module `\ORC_R32IMAZicsr'.

7.12. Executing OPT pass (performing simple optimizations).

7.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~10 debug messages>

7.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

7.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

7.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 0 changes.

7.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1810 ($dff) from module ORC_R32IMAZicsr (D = { $flatten\mul_div_processor.\div.$procmux$1748_Y [28:27] $flatten\mul_div_processor.\div.$procmux$1748_Y [24:23] $flatten\mul_div_processor.\div.$procmux$1748_Y [20:19] $flatten\mul_div_processor.\div.$procmux$1748_Y [16:15] $flatten\mul_div_processor.\div.$procmux$1748_Y [12:11] $flatten\mul_div_processor.\div.$procmux$1748_Y [8:7] $flatten\mul_div_processor.\div.$procmux$1748_Y [4:1] }, Q = { \mul_div_processor.div.r_lut_value [28:27] \mul_div_processor.div.r_lut_value [24:23] \mul_div_processor.div.r_lut_value [20:19] \mul_div_processor.div.r_lut_value [16:15] \mul_div_processor.div.r_lut_value [12:11] \mul_div_processor.div.r_lut_value [8:7] \mul_div_processor.div.r_lut_value [4:1] }, rval = 16'0000000000000010).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1810 ($dff) from module ORC_R32IMAZicsr (D = { $flatten\mul_div_processor.\div.$procmux$1745_Y [25] $flatten\mul_div_processor.\div.$procmux$1745_Y [18:17] $flatten\mul_div_processor.\div.$procmux$1745_Y [14] $flatten\mul_div_processor.\div.$procmux$1745_Y [10] $flatten\mul_div_processor.\div.$procmux$1745_Y [5] $flatten\mul_div_processor.\div.$procmux$1745_Y [0] }, Q = { \mul_div_processor.div.r_lut_value [25] \mul_div_processor.div.r_lut_value [18:17] \mul_div_processor.div.r_lut_value [14] \mul_div_processor.div.r_lut_value [10] \mul_div_processor.div.r_lut_value [5] \mul_div_processor.div.r_lut_value [0] }, rval = 7'0000000).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1810 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1742_Y [22], Q = \mul_div_processor.div.r_lut_value [22], rval = 1'0).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1810 ($dff) from module ORC_R32IMAZicsr (D = { $flatten\mul_div_processor.\div.$procmux$1736_Y [13] $flatten\mul_div_processor.\div.$procmux$1736_Y [9] $flatten\mul_div_processor.\div.$procmux$1736_Y [6] }, Q = { \mul_div_processor.div.r_lut_value [13] \mul_div_processor.div.r_lut_value [9] \mul_div_processor.div.r_lut_value [6] }, rval = 3'000).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1810 ($dff) from module ORC_R32IMAZicsr (D = { $flatten\mul_div_processor.\div.$procmux$1727_Y [31:29] $flatten\mul_div_processor.\div.$procmux$1727_Y [26] $flatten\mul_div_processor.\div.$procmux$1727_Y [21] }, Q = { \mul_div_processor.div.r_lut_value [31:29] \mul_div_processor.div.r_lut_value [26] \mul_div_processor.div.r_lut_value [21] }, rval = 5'00000).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1809 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1595_Y, Q = \mul_div_processor.div.r_div_write_stb, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$1950 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1595_Y, Q = \mul_div_processor.div.r_div_write_stb).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1808 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1627_Y, Q = \mul_div_processor.div.r_multiplier, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$1960 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1627_Y, Q = \mul_div_processor.div.r_multiplier).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1807 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1644_Y, Q = \mul_div_processor.div.r_multiplicand, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$1968 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1644_Y, Q = \mul_div_processor.div.r_multiplicand).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1806 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1661_Y, Q = \mul_div_processor.div.r_divisor, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$1976 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1661_Y, Q = \mul_div_processor.div.r_divisor).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1805 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1687_Y, Q = \mul_div_processor.div.r_dividend, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$1980 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1687_Y, Q = \mul_div_processor.div.r_dividend).
Adding SRST signal on $flatten\mul_div_processor.\div.$procdff$1804 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1713_Y, Q = \mul_div_processor.div.r_calculate_remainder, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$1984 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.\div.$procmux$1713_Y, Q = \mul_div_processor.div.r_calculate_remainder).
Adding SRST signal on $flatten\mul_div_processor.$procdff$1797 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.$procmux$1529_Y, Q = \mul_div_processor.r_tgd, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$1988 ($sdff) from module ORC_R32IMAZicsr (D = \core.r_high_results, Q = \mul_div_processor.r_tgd).
Adding SRST signal on $flatten\mul_div_processor.$procdff$1796 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.$procmux$1534_Y, Q = \mul_div_processor.r_addr, rval = 5'00000).
Adding EN signal on $auto$opt_dff.cc:702:run$1990 ($sdff) from module ORC_R32IMAZicsr (D = \core.r_inst_data [11:7], Q = \mul_div_processor.r_addr).
Adding SRST signal on $flatten\mul_div_processor.$procdff$1795 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.$procmux$1539_Y, Q = \mul_div_processor.r_select, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$1992 ($sdff) from module ORC_R32IMAZicsr (D = \core.r_div, Q = \mul_div_processor.r_select).
Adding SRST signal on $flatten\mul_div_processor.$procdff$1794 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.$procmux$1548_Y, Q = \mul_div_processor.r_wait_ack, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$1994 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\mul_div_processor.$procmux$1548_Y, Q = \mul_div_processor.r_wait_ack).
Adding SRST signal on $flatten\mem_access_controller.$procdff$1798 ($dff) from module ORC_R32IMAZicsr (D = $flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:107$868_Y [4:0], Q = \mem_access_controller.reset_index, rval = 5'00000).
Adding SRST signal on $flatten\core.$procdff$1791 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1482_Y, Q = \core.r_inst_data, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$1999 ($sdff) from module ORC_R32IMAZicsr (D = \i_inst_read_data, Q = \core.r_inst_data).
Adding SRST signal on $flatten\core.$procdff$1790 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1489_Y, Q = \core.r_program_counter_valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$2003 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1489_Y, Q = \core.r_program_counter_valid).
Adding SRST signal on $flatten\core.$procdff$1789 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1509_Y, Q = \core.r_next_pc_decode, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$2013 ($sdff) from module ORC_R32IMAZicsr (D = \core.r_next_pc_fetch, Q = \core.r_next_pc_decode).
Adding SRST signal on $flatten\core.$procdff$1788 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1517_Y, Q = \core.r_next_pc_fetch, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$2015 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1517_Y, Q = \core.r_next_pc_fetch).
Adding SRST signal on $flatten\core.$procdff$1787 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$or$../../source/Hart_Core.v:398$1148_Y, Q = \core.r_high_results, rval = 1'0).
Adding SRST signal on $flatten\core.$procdff$1786 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1419_Y, Q = \core.r_low_results, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$2034 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1417_Y, Q = \core.r_low_results).
Adding SRST signal on $flatten\core.$procdff$1785 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$or$../../source/Hart_Core.v:395$1146_Y, Q = \core.r_div, rval = 1'0).
Adding SRST signal on $flatten\core.$procdff$1784 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$or$../../source/Hart_Core.v:394$1145_Y, Q = \core.r_mul, rval = 1'0).
Adding SRST signal on $flatten\core.$procdff$1783 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1358_Y, Q = \core.r_rro, rval = 1'0).
Adding SRST signal on $flatten\core.$procdff$1782 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1369_Y, Q = \core.r_rii, rval = 1'0).
Adding SRST signal on $flatten\core.$procdff$1781 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1378_Y, Q = \core.r_scc, rval = 1'0).
Adding SRST signal on $flatten\core.$procdff$1780 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1387_Y, Q = \core.r_lcc, rval = 1'0).
Adding SRST signal on $flatten\core.$procdff$1779 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1396_Y, Q = \core.r_bcc, rval = 1'0).
Adding SRST signal on $flatten\core.$procdff$1778 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1405_Y, Q = \core.r_jalr, rval = 1'0).
Adding SRST signal on $flatten\core.$procdff$1777 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1428_Y, Q = \core.r_uimm, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$2086 ($sdff) from module ORC_R32IMAZicsr (D = { 20'00000000000000000000 \i_inst_read_data [31:20] }, Q = \core.r_uimm).
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 24 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 25 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 26 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 27 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 28 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 29 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 30 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 31 on $auto$opt_dff.cc:764:run$2089 ($sdffe) from module ORC_R32IMAZicsr.
Adding SRST signal on $flatten\core.$procdff$1776 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1449_Y, Q = \core.r_simm, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$2090 ($sdff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1447_Y, Q = \core.r_simm).
Adding SRST signal on $flatten\core.$procdff$1775 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1307_Y, Q = \core.r_master_read_addr, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$2096 ($sdff) from module ORC_R32IMAZicsr (D = \core.w_master_addr, Q = \core.r_master_read_addr).
Adding SRST signal on $flatten\core.$procdff$1774 ($dff) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1312_Y, Q = \core.r_master_read_ready, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$2100 ($sdff) from module ORC_R32IMAZicsr (D = 1'0, Q = \core.r_master_read_ready).

7.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 60 unused cells and 80 unused wires.
<suppressed ~61 debug messages>

7.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~13 debug messages>

7.12.9. Rerunning OPT passes. (Maybe there is more to do..)

7.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

7.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 0 changes.

7.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

7.12.13. Executing OPT_DFF pass (perform DFF optimizations).

7.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 1 unused cells and 23 unused wires.
<suppressed ~2 debug messages>

7.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.12.16. Rerunning OPT passes. (Maybe there is more to do..)

7.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

7.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 0 changes.

7.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.12.20. Executing OPT_DFF pass (perform DFF optimizations).

7.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.12.23. Finished OPT passes. (There is nothing left to do.)

7.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 6) from port B of cell ORC_R32IMAZicsr.$auto$fsm_map.cc:77:implement_pattern_cache$1924 ($eq).
Removed top 1 bits (of 3) from port B of cell ORC_R32IMAZicsr.$auto$fsm_map.cc:77:implement_pattern_cache$1901 ($eq).
Removed top 1 bits (of 4) from port B of cell ORC_R32IMAZicsr.$auto$fsm_map.cc:77:implement_pattern_cache$1897 ($eq).
Removed top 30 bits (of 32) from FF cell ORC_R32IMAZicsr.$auto$opt_dff.cc:764:run$2097 ($sdffe).
Removed cell ORC_R32IMAZicsr.$flatten\core.$procmux$1523 ($mux).
Removed cell ORC_R32IMAZicsr.$flatten\core.$procmux$1515 ($mux).
Removed cell ORC_R32IMAZicsr.$flatten\core.$procmux$1491 ($mux).
Removed cell ORC_R32IMAZicsr.$flatten\core.$procmux$1487 ($mux).
Removed cell ORC_R32IMAZicsr.$flatten\core.$procmux$1435 ($mux).
Removed top 2 bits (of 4) from mux cell ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:559$1183 ($mux).
Removed top 6 bits (of 7) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:391$1144 ($eq).
Removed top 29 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\core.$add$../../source/Hart_Core.v:255$1091 ($add).
Removed top 29 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\core.$add$../../source/Hart_Core.v:251$1089 ($add).
Removed top 2 bits (of 7) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:229$1068 ($eq).
Removed top 1 bits (of 7) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:229$1067 ($eq).
Removed top 1 bits (of 3) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:220$1047 ($eq).
Removed top 1 bits (of 3) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:219$1046 ($eq).
Removed top 2 bits (of 3) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:218$1045 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:211$1042 ($mux).
Removed top 31 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:212$1041 ($mux).
Removed top 1 bits (of 7) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:211$1039 ($eq).
Removed top 5 bits (of 7) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:209$1033 ($eq).
Removed top 1 bits (of 7) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:208$1032 ($eq).
Removed top 2 bits (of 7) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:207$1031 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:180$971 ($mux).
Removed top 1 bits (of 3) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:180$969 ($eq).
Removed top 31 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:179$968 ($mux).
Removed top 1 bits (of 3) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:179$966 ($eq).
Removed top 16 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:169$948 ($mux).
Removed top 1 bits (of 2) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:169$947 ($eq).
Removed top 2 bits (of 3) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:164$929 ($eq).
Removed top 1 bits (of 2) from port B of cell ORC_R32IMAZicsr.$flatten\core.$eq$../../source/Hart_Core.v:162$917 ($eq).
Removed top 1 bits (of 3) from port B of cell ORC_R32IMAZicsr.$auto$fsm_map.cc:77:implement_pattern_cache$1859 ($eq).
Removed top 1 bits (of 32) from FF cell ORC_R32IMAZicsr.$auto$opt_dff.cc:764:run$2002 ($sdffe).
Removed top 1 bits (of 2) from port B of cell ORC_R32IMAZicsr.$auto$opt_dff.cc:218:make_patterns_logic$2021 ($ne).
Removed top 30 bits (of 64) from port A of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$add$../../source/Goldschmidt_Convergence_Division.v:126$1204 ($add).
Removed top 31 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$add$../../source/Goldschmidt_Convergence_Division.v:133$1213 ($add).
Removed top 27 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:158$1229 ($lt).
Removed top 24 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:162$1230 ($lt).
Removed top 21 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:166$1231 ($lt).
Removed top 17 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:170$1232 ($lt).
Removed top 14 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:174$1233 ($lt).
Removed top 11 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:178$1234 ($lt).
Removed top 7 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:182$1235 ($lt).
Removed top 4 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:186$1236 ($lt).
Removed top 30 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:229$1242 ($eq).
Removed top 31 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$eq$../../source/Goldschmidt_Convergence_Division.v:236$1243 ($eq).
Removed cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1600 ($mux).
Removed cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1602 ($mux).
Removed cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1632 ($mux).
Removed cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1649 ($mux).
Removed top 26 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1727 ($mux).
Removed top 23 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1730 ($mux).
Removed top 19 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1733 ($mux).
Removed top 16 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1736 ($mux).
Removed top 13 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1739 ($mux).
Removed top 9 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1742 ($mux).
Removed top 6 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1745 ($mux).
Removed top 3 bits (of 32) from mux cell ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1748 ($mux).
Removed top 32 bits (of 128) from FF cell ORC_R32IMAZicsr.$flatten\mul_div_processor.$procdff$1793 ($dff).
Removed cell ORC_R32IMAZicsr.$flatten\mul_div_processor.$procmux$1544 ($mux).
Removed top 64 bits (of 128) from port A of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900 ($mul).
Removed top 64 bits (of 128) from port B of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900 ($mul).
Removed top 32 bits (of 128) from port Y of cell ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900 ($mul).
Removed cell ORC_R32IMAZicsr.$flatten\mem_access_controller.\mem_space0.$procmux$1558 ($mux).
Removed cell ORC_R32IMAZicsr.$flatten\mem_access_controller.\mem_space0.$procmux$1560 ($mux).
Removed top 31 bits (of 32) from FF cell ORC_R32IMAZicsr.$flatten\mem_access_controller.\mem_space0.$procdff$1802 ($dff).
Removed top 31 bits (of 32) from port B of cell ORC_R32IMAZicsr.$flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:107$868 ($add).
Removed top 27 bits (of 32) from port Y of cell ORC_R32IMAZicsr.$flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:107$868 ($add).
Removed cell ORC_R32IMAZicsr.$flatten\core.$procmux$1438 ($mux).
Removed top 16 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:169$948_Y.
Removed top 31 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:179$968_Y.
Removed top 31 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:180$971_Y.
Removed top 31 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:212$1041_Y.
Removed top 2 bits (of 4) from wire ORC_R32IMAZicsr.$flatten\core.$ternary$../../source/Hart_Core.v:559$1183_Y.
Removed top 27 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:107$868_Y.
Removed top 32 bits (of 128) from wire ORC_R32IMAZicsr.$flatten\mul_div_processor.$0\r_product[127:0].
Removed top 32 bits (of 64) from wire ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1649_Y.
Removed top 26 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1727_Y.
Removed top 23 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1730_Y.
Removed top 19 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1733_Y.
Removed top 16 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1736_Y.
Removed top 13 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1739_Y.
Removed top 9 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1742_Y.
Removed top 6 bits (of 32) from wire ORC_R32IMAZicsr.$flatten\mul_div_processor.\div.$procmux$1745_Y.

7.14. Executing PEEPOPT pass (run peephole optimizers).

7.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 0 unused cells and 29 unused wires.
<suppressed ~1 debug messages>

7.16. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module ORC_R32IMAZicsr that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\core.$sshr$../../source/Hart_Core.v:184$982 ($sshr):
    Found 1 activation_patterns using ctrl signal { \core.i_master_hcc_processor_ack \core.r_inst_data [30] \core.r_jalr $flatten\core.$eq$../../source/Hart_Core.v:159$904_Y $flatten\core.$eq$../../source/Hart_Core.v:159$905_Y $flatten\core.$eq$../../source/Hart_Core.v:164$929_Y $flatten\core.$eq$../../source/Hart_Core.v:176$960_Y $flatten\core.$eq$../../source/Hart_Core.v:177$962_Y $flatten\core.$eq$../../source/Hart_Core.v:179$966_Y $flatten\core.$eq$../../source/Hart_Core.v:180$969_Y $flatten\core.$eq$../../source/Hart_Core.v:187$992_Y $flatten\core.$eq$../../source/Hart_Core.v:229$1067_Y $flatten\core.$eq$../../source/Hart_Core.v:229$1068_Y $flatten\core.$logic_or$../../source/Hart_Core.v:260$1094_Y \i_reset_sync }.
    No candidates found.
  Analyzing resource sharing options for $flatten\core.$shr$../../source/Hart_Core.v:185$983 ($shr):
    Found 1 activation_patterns using ctrl signal { \core.i_master_hcc_processor_ack \core.r_inst_data [30] \core.r_jalr $flatten\core.$eq$../../source/Hart_Core.v:159$904_Y $flatten\core.$eq$../../source/Hart_Core.v:159$905_Y $flatten\core.$eq$../../source/Hart_Core.v:164$929_Y $flatten\core.$eq$../../source/Hart_Core.v:176$960_Y $flatten\core.$eq$../../source/Hart_Core.v:177$962_Y $flatten\core.$eq$../../source/Hart_Core.v:179$966_Y $flatten\core.$eq$../../source/Hart_Core.v:180$969_Y $flatten\core.$eq$../../source/Hart_Core.v:187$992_Y $flatten\core.$eq$../../source/Hart_Core.v:229$1067_Y $flatten\core.$eq$../../source/Hart_Core.v:229$1068_Y $flatten\core.$logic_or$../../source/Hart_Core.v:260$1094_Y \i_reset_sync }.
    No candidates found.
  Analyzing resource sharing options for $flatten\core.$shl$../../source/Hart_Core.v:183$980 ($shl):
    Found 1 activation_patterns using ctrl signal { \core.i_master_hcc_processor_ack \core.r_jalr $flatten\core.$eq$../../source/Hart_Core.v:159$904_Y $flatten\core.$eq$../../source/Hart_Core.v:159$905_Y $flatten\core.$eq$../../source/Hart_Core.v:164$929_Y $flatten\core.$eq$../../source/Hart_Core.v:176$960_Y $flatten\core.$eq$../../source/Hart_Core.v:177$962_Y $flatten\core.$eq$../../source/Hart_Core.v:179$966_Y $flatten\core.$eq$../../source/Hart_Core.v:180$969_Y $flatten\core.$eq$../../source/Hart_Core.v:187$992_Y $flatten\core.$eq$../../source/Hart_Core.v:229$1067_Y $flatten\core.$eq$../../source/Hart_Core.v:229$1068_Y $flatten\core.$logic_or$../../source/Hart_Core.v:260$1094_Y \i_reset_sync }.
    No candidates found.

7.17. Executing TECHMAP pass (map to technology primitives).

7.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

7.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~322 debug messages>

7.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.20. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$flatten\mem_access_controller.\mem_space0.$memwr$\r_mem$../../source/Generic_BRAM.v:0$1255' in module `\ORC_R32IMAZicsr': merged $dff to cell.
Checking cell `$flatten\mem_access_controller.\mem_space1.$memwr$\r_mem$../../source/Generic_BRAM.v:0$1255' in module `\ORC_R32IMAZicsr': merged $dff to cell.
Checking cell `$flatten\mem_access_controller.\mem_space0.$memrd$\r_mem$../../source/Generic_BRAM.v:97$1254' in module `\ORC_R32IMAZicsr': merged data $dff to cell.
Checking cell `$flatten\mem_access_controller.\mem_space1.$memrd$\r_mem$../../source/Generic_BRAM.v:97$1254' in module `\ORC_R32IMAZicsr': merged data $dff to cell.

7.21. Executing WREDUCE pass (reducing word size of cells).

7.22. Executing TECHMAP pass (map to technology primitives).

7.22.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

7.22.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL16X16'.
Successfully finished Verilog frontend.

7.22.3. Continuing TECHMAP pass.
Using template $paramod$ed51989dd246b5081db32bc35967010c070fadfe\_80_mul for cells of type $mul.
Using template $paramod$b33b12a47519b173fda59112fff4f7f2fae9da6c\_80_mul for cells of type $__mul.
Using template $paramod$abbbabf648fb46d05628b9bbafa276e376c3f65d\_80_mul for cells of type $__mul.
Using template $paramod$7e13b9c3f7f5a80be257768b79a32cde633876ad\_80_mul for cells of type $__mul.
Using template $paramod$02b420198a74ea28b293ad318cdb7fda6291a21e\_80_mul for cells of type $__mul.
Using template $paramod$6022826679ba3c58e52ccfe8c7055c62f8fc5a2c\_80_mul for cells of type $__mul.
Using template $paramod$60649d0b8c819ae741d71968442e4a4acc02a2b7\_80_mul for cells of type $__mul.
Using template $paramod\$__MUL16X16\A_SIGNED=0\B_SIGNED=1\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=32 for cells of type $__MUL16X16.
Using template $paramod\$__MUL16X16\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=32 for cells of type $__MUL16X16.
Using template $paramod\$__MUL16X16\A_SIGNED=1\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=32 for cells of type $__MUL16X16.
Using template $paramod\$__MUL16X16\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=32 for cells of type $__MUL16X16.
No more expansions possible.
<suppressed ~601 debug messages>

7.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~30 debug messages>

7.24. Executing WREDUCE pass (reducing word size of cells).
Removed top 16 bits (of 48) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130 ($add).
Removed top 32 bits (of 64) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add).
Removed top 48 bits (of 64) from port B of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add).
Removed top 31 bits (of 64) from port Y of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add).
Removed top 32 bits (of 64) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add).
Removed top 48 bits (of 64) from port B of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add).
Removed top 31 bits (of 64) from port Y of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add).
Removed top 16 bits (of 48) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130 ($add).
Removed top 31 bits (of 48) from port B of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130 ($add).
Removed top 15 bits (of 48) from port Y of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130 ($add).
Removed top 15 bits (of 32) from port B of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:230$2132 ($add).
Removed top 16 bits (of 32) from port Y of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:230$2132 ($add).
Removed top 16 bits (of 32) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:230$2132 ($add).
Removed top 1 bits (of 17) from port B of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:230$2132 ($add).
Removed top 16 bits (of 80) from port B of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:159$2121 ($add).
Removed cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:230$2139 ($add).
Removed top 16 bits (of 48) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2137 ($add).
Removed top 32 bits (of 48) from port Y of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2137 ($add).
Removed top 16 bits (of 32) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2137 ($add).
Removed top 32 bits (of 48) from port B of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2137 ($add).
Removed top 32 bits (of 64) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2135 ($add).
Removed top 48 bits (of 64) from port B of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2135 ($add).
Removed top 32 bits (of 64) from port Y of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2135 ($add).
Removed top 16 bits (of 48) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130 ($add).
Removed top 32 bits (of 64) from port A of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add).
Removed top 48 bits (of 64) from port B of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add).
Removed top 31 bits (of 64) from port Y of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add).
Removed top 1 bits (of 33) from port Y of cell ORC_R32IMAZicsr.$techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130 ($add).

7.25. Executing ICE40_DSP pass (map multipliers).
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.sliceB[1].mul for iCE40 DSP inference.
  adder $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add)
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.sliceB[0].mul for iCE40 DSP inference.
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.mul_sliceB_last for iCE40 DSP inference.
  adder $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:230$2132 ($add)
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.sliceB[0].mul for iCE40 DSP inference.
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.sliceB[2].mul for iCE40 DSP inference.
  adder $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2137 ($add)
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.sliceB[0].mul for iCE40 DSP inference.
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.sliceB[2].mul for iCE40 DSP inference.
  adder/accumulator ($flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.partial_sum[2] [79:32]) is too large (48 > 33).
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.sliceB[2].mul for iCE40 DSP inference.
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.sliceB[1].mul for iCE40 DSP inference.
  adder $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA.last.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2135 ($add)
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.mul_sliceB_last for iCE40 DSP inference.
  adder $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:230$2132 ($add)
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.sliceB[1].mul for iCE40 DSP inference.
  adder $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add)
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.sliceB[2].mul for iCE40 DSP inference.
  adder/accumulator ($flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.partial_sum[2] [79:32]) is too large (48 > 33).
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.sliceB[2].mul for iCE40 DSP inference.
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.sliceB[2].mul for iCE40 DSP inference.
  adder $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130 ($add)
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.sliceB[0].mul for iCE40 DSP inference.
  clock: \i_clk (posedge) ffO:$flatten\mul_div_processor.$procdff$1793
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.sliceB[1].mul for iCE40 DSP inference.
  adder $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2128 ($add)
Checking ORC_R32IMAZicsr.$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.mul_sliceB_last for iCE40 DSP inference.
  adder $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[2].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:230$2132 ($add)
<suppressed ~170 debug messages>

7.26. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ORC_R32IMAZicsr:
  creating $macc model for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130 ($add).
  creating $macc model for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130 ($add).
  creating $macc model for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:173$2125 ($add).
  creating $macc model for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:159$2123 ($add).
  creating $macc model for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:159$2121 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:157$903 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:182$977 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:200$1021 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:245$1087 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:251$1089 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:255$1091 ($add).
  creating $macc model for $flatten\core.$add$../../source/Hart_Core.v:311$1111 ($add).
  creating $macc model for $flatten\core.$sub$../../source/Hart_Core.v:181$976 ($sub).
  creating $macc model for $flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:107$868 ($add).
  creating $macc model for $flatten\mul_div_processor.\div.$add$../../source/Goldschmidt_Convergence_Division.v:126$1204 ($add).
  creating $macc model for $flatten\mul_div_processor.\div.$add$../../source/Goldschmidt_Convergence_Division.v:133$1213 ($add).
  creating $alu model for $macc $flatten\mul_div_processor.\div.$add$../../source/Goldschmidt_Convergence_Division.v:133$1213.
  creating $alu model for $macc $flatten\mul_div_processor.\div.$add$../../source/Goldschmidt_Convergence_Division.v:126$1204.
  creating $alu model for $macc $flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:107$868.
  creating $alu model for $macc $flatten\core.$sub$../../source/Hart_Core.v:181$976.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:311$1111.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:255$1091.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:251$1089.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:245$1087.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:200$1021.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:182$977.
  creating $alu model for $macc $flatten\core.$add$../../source/Hart_Core.v:157$903.
  creating $alu model for $macc $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:159$2121.
  creating $alu model for $macc $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:159$2123.
  creating $alu model for $macc $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:173$2125.
  creating $alu model for $macc $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130.
  creating $alu model for $macc $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130.
  creating $alu model for $flatten\core.$ge$../../source/Hart_Core.v:193$999 ($ge): new $alu
  creating $alu model for $flatten\core.$ge$../../source/Hart_Core.v:195$1003 ($ge): new $alu
  creating $alu model for $flatten\core.$lt$../../source/Hart_Core.v:179$967 ($lt): merged with $flatten\core.$sub$../../source/Hart_Core.v:181$976.
  creating $alu model for $flatten\core.$lt$../../source/Hart_Core.v:180$970 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$../../source/Hart_Core.v:192$997 ($lt): merged with $flatten\core.$ge$../../source/Hart_Core.v:193$999.
  creating $alu model for $flatten\core.$lt$../../source/Hart_Core.v:194$1001 ($lt): merged with $flatten\core.$ge$../../source/Hart_Core.v:195$1003.
  creating $alu model for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:158$1229 ($lt): new $alu
  creating $alu model for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:162$1230 ($lt): new $alu
  creating $alu model for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:166$1231 ($lt): new $alu
  creating $alu model for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:170$1232 ($lt): new $alu
  creating $alu model for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:174$1233 ($lt): new $alu
  creating $alu model for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:178$1234 ($lt): new $alu
  creating $alu model for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:182$1235 ($lt): new $alu
  creating $alu model for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:186$1236 ($lt): new $alu
  creating $alu model for $flatten\core.$eq$../../source/Hart_Core.v:196$1005 ($eq): merged with $flatten\core.$ge$../../source/Hart_Core.v:195$1003.
  creating $alu model for $flatten\core.$ne$../../source/Hart_Core.v:197$1007 ($ne): merged with $flatten\core.$ge$../../source/Hart_Core.v:195$1003.
  creating $alu cell for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:186$1236: $auto$alumacc.cc:485:replace_alu$2228
  creating $alu cell for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:182$1235: $auto$alumacc.cc:485:replace_alu$2239
  creating $alu cell for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:178$1234: $auto$alumacc.cc:485:replace_alu$2250
  creating $alu cell for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:174$1233: $auto$alumacc.cc:485:replace_alu$2261
  creating $alu cell for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:170$1232: $auto$alumacc.cc:485:replace_alu$2272
  creating $alu cell for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:166$1231: $auto$alumacc.cc:485:replace_alu$2283
  creating $alu cell for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:162$1230: $auto$alumacc.cc:485:replace_alu$2294
  creating $alu cell for $flatten\mul_div_processor.\div.$lt$../../source/Goldschmidt_Convergence_Division.v:158$1229: $auto$alumacc.cc:485:replace_alu$2305
  creating $alu cell for $flatten\core.$ge$../../source/Hart_Core.v:195$1003, $flatten\core.$lt$../../source/Hart_Core.v:194$1001, $flatten\core.$eq$../../source/Hart_Core.v:196$1005, $flatten\core.$ne$../../source/Hart_Core.v:197$1007: $auto$alumacc.cc:485:replace_alu$2316
  creating $alu cell for $flatten\core.$ge$../../source/Hart_Core.v:193$999, $flatten\core.$lt$../../source/Hart_Core.v:192$997: $auto$alumacc.cc:485:replace_alu$2331
  creating $alu cell for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[1].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130: $auto$alumacc.cc:485:replace_alu$2346
  creating $alu cell for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.sliceA[0].mul.$add$/usr/local/bin/../share/yosys/mul2dsp.v:216$2130: $auto$alumacc.cc:485:replace_alu$2349
  creating $alu cell for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:173$2125: $auto$alumacc.cc:485:replace_alu$2352
  creating $alu cell for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:159$2123: $auto$alumacc.cc:485:replace_alu$2355
  creating $alu cell for $techmap$flatten\mul_div_processor.$mul$../../source/HCC_Arithmetic_Processor.v:154$900.$add$/usr/local/bin/../share/yosys/mul2dsp.v:159$2121: $auto$alumacc.cc:485:replace_alu$2358
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:157$903: $auto$alumacc.cc:485:replace_alu$2361
  creating $alu cell for $flatten\core.$lt$../../source/Hart_Core.v:180$970: $auto$alumacc.cc:485:replace_alu$2364
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:182$977: $auto$alumacc.cc:485:replace_alu$2371
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:200$1021: $auto$alumacc.cc:485:replace_alu$2374
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:245$1087: $auto$alumacc.cc:485:replace_alu$2377
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:251$1089: $auto$alumacc.cc:485:replace_alu$2380
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:255$1091: $auto$alumacc.cc:485:replace_alu$2383
  creating $alu cell for $flatten\core.$add$../../source/Hart_Core.v:311$1111: $auto$alumacc.cc:485:replace_alu$2386
  creating $alu cell for $flatten\core.$sub$../../source/Hart_Core.v:181$976, $flatten\core.$lt$../../source/Hart_Core.v:179$967: $auto$alumacc.cc:485:replace_alu$2389
  creating $alu cell for $flatten\mem_access_controller.$add$../../source/Memory_Backplane.v:107$868: $auto$alumacc.cc:485:replace_alu$2394
  creating $alu cell for $flatten\mul_div_processor.\div.$add$../../source/Goldschmidt_Convergence_Division.v:126$1204: $auto$alumacc.cc:485:replace_alu$2397
  creating $alu cell for $flatten\mul_div_processor.\div.$add$../../source/Goldschmidt_Convergence_Division.v:133$1213: $auto$alumacc.cc:485:replace_alu$2400
  created 27 $alu and 0 $macc cells.

7.27. Executing OPT pass (performing simple optimizations).

7.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~9 debug messages>

7.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

7.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
    New ctrl vector for $pmux cell $flatten\core.$procmux$1489: { \core.r_program_counter_state [2:1] $auto$opt_reduce.cc:134:opt_mux$2404 }
    New ctrl vector for $pmux cell $flatten\mul_div_processor.\div.$procmux$1595: { \mul_div_processor.div.r_divider_state [0] $auto$opt_reduce.cc:134:opt_mux$1814 $auto$opt_reduce.cc:134:opt_mux$2406 }
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 2 changes.

7.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$1949 ($sdff) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:702:run$1949 ($sdff) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:702:run$1949 ($sdff) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:702:run$1949 ($sdff) from module ORC_R32IMAZicsr.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:702:run$1949 ($sdff) from module ORC_R32IMAZicsr.

7.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 12 unused cells and 230 unused wires.
<suppressed ~13 debug messages>

7.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.27.9. Rerunning OPT passes. (Maybe there is more to do..)

7.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

7.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 0 changes.

7.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.27.13. Executing OPT_DFF pass (perform DFF optimizations).

7.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.27.16. Finished OPT passes. (There is nothing left to do.)

7.28. Executing MEMORY pass.

7.28.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.28.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

7.28.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.28.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.28.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.28.6. Executing MEMORY_COLLECT pass (generating $mem cells).

7.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.30. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing ORC_R32IMAZicsr.mem_access_controller.mem_space0.r_mem:
  Properties: ports=2 bits=1024 rports=1 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 3 rules:
    Efficiency for rule 4.2: efficiency=3, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=6, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=12, cells=2, acells=1
    Selected rule 1.1 with efficiency 12.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: mem_access_controller.mem_space0.r_mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: mem_access_controller.mem_space0.r_mem.1.0.0
Processing ORC_R32IMAZicsr.mem_access_controller.mem_space1.r_mem:
  Properties: ports=2 bits=1024 rports=1 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 3 rules:
    Efficiency for rule 4.2: efficiency=3, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=6, cells=4, acells=1
    Efficiency for rule 1.1: efficiency=12, cells=2, acells=1
    Selected rule 1.1 with efficiency 12.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: mem_access_controller.mem_space1.r_mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: mem_access_controller.mem_space1.r_mem.1.0.0

7.31. Executing TECHMAP pass (map to technology primitives).

7.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

7.31.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M0\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~75 debug messages>

7.32. Executing ICE40_BRAMINIT pass.

7.33. Executing OPT pass (performing simple optimizations).

7.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~237 debug messages>

7.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

7.33.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$opt_dff.cc:764:run$2024 ($sdffe) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1517_Y [1], Q = \core.r_next_pc_fetch [1]).
Adding EN signal on $auto$opt_dff.cc:764:run$2024 ($sdffe) from module ORC_R32IMAZicsr (D = $flatten\core.$procmux$1517_Y [0], Q = \core.r_next_pc_fetch [0]).

7.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 0 unused cells and 153 unused wires.
<suppressed ~1 debug messages>

7.33.5. Rerunning OPT passes. (Removed registers in this run.)

7.33.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~2 debug messages>

7.33.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.33.8. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 1 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 2 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 3 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 4 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 5 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 6 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 7 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 8 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 9 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 10 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 11 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 12 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 13 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 14 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.
Setting constant 1-bit at position 15 on $flatten\mul_div_processor.$procdff$1793 ($dff) from module ORC_R32IMAZicsr.

7.33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

7.33.10. Rerunning OPT passes. (Removed registers in this run.)

7.33.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.33.13. Executing OPT_DFF pass (perform DFF optimizations).

7.33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.33.15. Finished fast OPT passes.

7.34. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

7.35. Executing OPT pass (performing simple optimizations).

7.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

7.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$2506: { $auto$opt_dff.cc:217:make_patterns_logic$2503 $auto$opt_dff.cc:217:make_patterns_logic$2496 $auto$opt_dff.cc:217:make_patterns_logic$2020 $auto$opt_dff.cc:217:make_patterns_logic$2018 $auto$opt_dff.cc:217:make_patterns_logic$2016 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$2499: { $auto$opt_dff.cc:217:make_patterns_logic$2496 $auto$opt_dff.cc:217:make_patterns_logic$2020 $auto$opt_dff.cc:217:make_patterns_logic$2018 $auto$opt_dff.cc:217:make_patterns_logic$2016 }
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1441:
      Old ports: A={ $flatten\core.$procmux$1435_Y [31:12] \i_inst_read_data [31:20] }, B={ $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y \i_inst_read_data [31] \i_inst_read_data [7] \i_inst_read_data [30:25] \i_inst_read_data [11:8] 1'0 }, Y=$flatten\core.$procmux$1441_Y
      New ports: A={ $flatten\core.$procmux$1435_Y [31:12] \i_inst_read_data [31] \i_inst_read_data [24:20] }, B={ $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y \i_inst_read_data [31] \i_inst_read_data [7] \i_inst_read_data [11:8] 1'0 }, Y={ $flatten\core.$procmux$1441_Y [31:11] $flatten\core.$procmux$1441_Y [4:0] }
      New connections: $flatten\core.$procmux$1441_Y [10:5] = \i_inst_read_data [30:25]
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1521:
      Old ports: A={ $flatten\core.$add$../../source/Hart_Core.v:251$1089_Y [31:2] 2'xx }, B={ $flatten\core.$add$../../source/Hart_Core.v:311$1111_Y [31:1] 1'x }, Y=$flatten\core.$procmux$1521_Y
      New ports: A={ $flatten\core.$add$../../source/Hart_Core.v:251$1089_Y [31:2] 1'x }, B=$flatten\core.$add$../../source/Hart_Core.v:311$1111_Y [31:1], Y=$flatten\core.$procmux$1521_Y [31:1]
      New connections: $flatten\core.$procmux$1521_Y [0] = 1'x
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:160$911:
      Old ports: A=24'000000000000000000000000, B=24'111111111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [23:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:161$916:
      Old ports: A=24'000000000000000000000000, B=24'111111111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [23:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:162$921:
      Old ports: A=24'000000000000000000000000, B=24'111111111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [23:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:163$925:
      Old ports: A=24'000000000000000000000000, B=24'111111111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [23:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:164$936:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [15:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:165$940:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [15:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:168$949:
      Old ports: A={ 16'0000000000000000 $auto$wreduce.cc:454:run$2102 [15:0] }, B={ 8'00000000 \mem_access_controller.mem_space1.r_rdata [7:0] 16'0000000000000000 }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:168$949_Y
      New ports: A={ 8'00000000 $auto$wreduce.cc:454:run$2102 [15:0] }, B={ \mem_access_controller.mem_space1.r_rdata [7:0] 16'0000000000000000 }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:168$949_Y [23:0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:168$949_Y [31:24] = 8'00000000
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:188$995:
      Old ports: A=11'00000000000, B=11'11111111111, Y=\core.w_j_simm [31:21]
      New ports: A=1'0, B=1'1, Y=\core.w_j_simm [21]
      New connections: \core.w_j_simm [31:22] = { \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] \core.w_j_simm [21] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:382$1140:
      Old ports: A=20'00000000000000000000, B=20'11111111111111111111, Y=$flatten\core.$procmux$1435_Y [31:12]
      New ports: A=1'0, B=1'1, Y=$flatten\core.$procmux$1435_Y [12]
      New connections: $flatten\core.$procmux$1435_Y [31:13] = { $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:441$1156:
      Old ports: A=19'0000000000000000000, B=19'1111111111111111111, Y=$flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y
      New ports: A=1'0, B=1'1, Y=$flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [18:1] = { $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:558$1184:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$2106 [1:0] }, B=4'0100, Y=$flatten\core.$ternary$../../source/Hart_Core.v:558$1184_Y
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$2106 [1:0] }, B=3'100, Y=$flatten\core.$ternary$../../source/Hart_Core.v:558$1184_Y [2:0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:558$1184_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:562$1190:
      Old ports: A=4'0011, B=4'1100, Y=$flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y [2] $flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y [0] }
      New connections: { $flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y [3] $flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y [1] } = { $flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y [2] $flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1727:
      Old ports: A=6'101011, B=6'000100, Y=$auto$wreduce.cc:454:run$2110 [5:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$2110 [2] $auto$wreduce.cc:454:run$2110 [0] }
      New connections: { $auto$wreduce.cc:454:run$2110 [5:3] $auto$wreduce.cc:454:run$2110 [1] } = { $auto$wreduce.cc:454:run$2110 [0] 1'0 $auto$wreduce.cc:454:run$2110 [0] $auto$wreduce.cc:454:run$2110 [0] }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1730:
      Old ports: A=9'110101101, B={ 3'000 $auto$wreduce.cc:454:run$2110 [5:0] }, Y=$auto$wreduce.cc:454:run$2111 [8:0]
      New ports: A=7'1101101, B={ 1'0 $auto$wreduce.cc:454:run$2110 [5:0] }, Y={ $auto$wreduce.cc:454:run$2111 [7] $auto$wreduce.cc:454:run$2111 [5:0] }
      New connections: { $auto$wreduce.cc:454:run$2111 [8] $auto$wreduce.cc:454:run$2111 [6] } = { $auto$wreduce.cc:454:run$2111 [7] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1733:
      Old ports: A=13'1000011000111, B={ 4'0000 $auto$wreduce.cc:454:run$2111 [8:0] }, Y=$auto$wreduce.cc:454:run$2112 [12:0]
      New ports: A=10'1011000111, B={ 1'0 $auto$wreduce.cc:454:run$2111 [8:0] }, Y={ $auto$wreduce.cc:454:run$2112 [12] $auto$wreduce.cc:454:run$2112 [8:0] }
      New connections: $auto$wreduce.cc:454:run$2112 [11:9] = 3'000
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1736:
      Old ports: A=16'1010011111000110, B={ 3'000 $auto$wreduce.cc:454:run$2112 [12:0] }, Y=$auto$wreduce.cc:454:run$2113 [15:0]
      New ports: A=14'10011111000110, B={ 1'0 $auto$wreduce.cc:454:run$2112 [12:0] }, Y=$auto$wreduce.cc:454:run$2113 [13:0]
      New connections: $auto$wreduce.cc:454:run$2113 [15:14] = { $auto$wreduce.cc:454:run$2113 [13] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1739:
      Old ports: A=19'1101000110110111001, B={ 3'000 $auto$wreduce.cc:454:run$2113 [15:0] }, Y=$auto$wreduce.cc:454:run$2114 [18:0]
      New ports: A=17'11000110110111001, B={ 1'0 $auto$wreduce.cc:454:run$2113 [15:0] }, Y={ $auto$wreduce.cc:454:run$2114 [17] $auto$wreduce.cc:454:run$2114 [15:0] }
      New connections: { $auto$wreduce.cc:454:run$2114 [18] $auto$wreduce.cc:454:run$2114 [16] } = { $auto$wreduce.cc:454:run$2114 [17] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1742:
      Old ports: A=23'10000011000100100110111, B={ 4'0000 $auto$wreduce.cc:454:run$2114 [18:0] }, Y=$auto$wreduce.cc:454:run$2115 [22:0]
      New ports: A=20'10011000100100110111, B={ 1'0 $auto$wreduce.cc:454:run$2114 [18:0] }, Y={ $auto$wreduce.cc:454:run$2115 [22] $auto$wreduce.cc:454:run$2115 [18:0] }
      New connections: $auto$wreduce.cc:454:run$2115 [21:19] = 3'000
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1745:
      Old ports: A=26'10100011110101110000101001, B={ 3'000 $auto$wreduce.cc:454:run$2115 [22:0] }, Y=$auto$wreduce.cc:454:run$2116 [25:0]
      New ports: A=24'100011110101110000101001, B={ 1'0 $auto$wreduce.cc:454:run$2115 [22:0] }, Y=$auto$wreduce.cc:454:run$2116 [23:0]
      New connections: $auto$wreduce.cc:454:run$2116 [25:24] = { $auto$wreduce.cc:454:run$2116 [23] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1748:
      Old ports: A=29'11001100110011001100110011010, B={ 3'000 $auto$wreduce.cc:454:run$2116 [25:0] }, Y=$flatten\mul_div_processor.\div.$procmux$1748_Y [28:0]
      New ports: A=27'101100110011001100110011010, B={ 1'0 $auto$wreduce.cc:454:run$2116 [25:0] }, Y={ $flatten\mul_div_processor.\div.$procmux$1748_Y [27] $flatten\mul_div_processor.\div.$procmux$1748_Y [25:0] }
      New connections: { $flatten\mul_div_processor.\div.$procmux$1748_Y [28] $flatten\mul_div_processor.\div.$procmux$1748_Y [26] } = { $flatten\mul_div_processor.\div.$procmux$1748_Y [27] 1'0 }
  Optimizing cells in module \ORC_R32IMAZicsr.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1441:
      Old ports: A={ $flatten\core.$procmux$1435_Y [31:12] \i_inst_read_data [31] \i_inst_read_data [24:20] }, B={ $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y \i_inst_read_data [31] \i_inst_read_data [7] \i_inst_read_data [11:8] 1'0 }, Y={ $flatten\core.$procmux$1441_Y [31:11] $flatten\core.$procmux$1441_Y [4:0] }
      New ports: A={ $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] \i_inst_read_data [31] \i_inst_read_data [24:20] }, B={ $flatten\core.$ternary$../../source/Hart_Core.v:441$1156_Y [0] \i_inst_read_data [31] \i_inst_read_data [7] \i_inst_read_data [11:8] 1'0 }, Y={ $flatten\core.$procmux$1441_Y [13:11] $flatten\core.$procmux$1441_Y [4:0] }
      New connections: $flatten\core.$procmux$1441_Y [31:14] = { $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] $flatten\core.$procmux$1441_Y [13] }
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1444:
      Old ports: A=$flatten\core.$procmux$1441_Y, B={ $flatten\core.$procmux$1435_Y [31:12] \i_inst_read_data [31:20] }, Y=$flatten\core.$procmux$1444_Y
      New ports: A={ $flatten\core.$procmux$1441_Y [31:11] $flatten\core.$procmux$1441_Y [4:0] }, B={ $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] \i_inst_read_data [31] \i_inst_read_data [24:20] }, Y={ $flatten\core.$procmux$1444_Y [31:11] $flatten\core.$procmux$1444_Y [4:0] }
      New connections: $flatten\core.$procmux$1444_Y [10:5] = \i_inst_read_data [30:25]
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:162$926:
      Old ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y \i_master_read_data [7:0] }, B={ $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y \i_master_read_data [15:8] }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:163$925_Y [0] \i_master_read_data [7:0] }, B={ $flatten\core.$ternary$../../source/Hart_Core.v:162$921_Y [0] \i_master_read_data [15:8] }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8:0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [31:9] = { $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:164$941:
      Old ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y \i_master_read_data [15:0] }, B={ $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y \i_master_read_data [31:16] }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y
      New ports: A={ $flatten\core.$ternary$../../source/Hart_Core.v:165$940_Y [0] \i_master_read_data [15:0] }, B={ $flatten\core.$ternary$../../source/Hart_Core.v:164$936_Y [0] \i_master_read_data [31:16] }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16:0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [31:17] = { $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] $flatten\core.$ternary$../../source/Hart_Core.v:164$941_Y [16] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:561$1191:
      Old ports: A=4'1111, B=$flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y, Y=$flatten\core.$ternary$../../source/Hart_Core.v:561$1191_Y
      New ports: A=2'11, B={ $flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y [2] $flatten\core.$ternary$../../source/Hart_Core.v:562$1190_Y [0] }, Y={ $flatten\core.$ternary$../../source/Hart_Core.v:561$1191_Y [2] $flatten\core.$ternary$../../source/Hart_Core.v:561$1191_Y [0] }
      New connections: { $flatten\core.$ternary$../../source/Hart_Core.v:561$1191_Y [3] $flatten\core.$ternary$../../source/Hart_Core.v:561$1191_Y [1] } = { $flatten\core.$ternary$../../source/Hart_Core.v:561$1191_Y [2] $flatten\core.$ternary$../../source/Hart_Core.v:561$1191_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1730:
      Old ports: A=7'1101101, B={ 1'0 $auto$wreduce.cc:454:run$2110 [5:0] }, Y={ $auto$wreduce.cc:454:run$2111 [7] $auto$wreduce.cc:454:run$2111 [5:0] }
      New ports: A=4'1101, B={ 1'0 $auto$wreduce.cc:454:run$2110 [2] $auto$wreduce.cc:454:run$2110 [0] $auto$wreduce.cc:454:run$2110 [0] }, Y={ $auto$wreduce.cc:454:run$2111 [7] $auto$wreduce.cc:454:run$2111 [2:0] }
      New connections: $auto$wreduce.cc:454:run$2111 [5:3] = { $auto$wreduce.cc:454:run$2111 [0] 1'0 $auto$wreduce.cc:454:run$2111 [0] }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1733:
      Old ports: A=10'1011000111, B={ 1'0 $auto$wreduce.cc:454:run$2111 [8:0] }, Y={ $auto$wreduce.cc:454:run$2112 [12] $auto$wreduce.cc:454:run$2112 [8:0] }
      New ports: A=9'011000111, B={ $auto$wreduce.cc:454:run$2111 [7] $auto$wreduce.cc:454:run$2111 [7] 1'0 $auto$wreduce.cc:454:run$2111 [5:0] }, Y=$auto$wreduce.cc:454:run$2112 [8:0]
      New connections: $auto$wreduce.cc:454:run$2112 [12] = $auto$wreduce.cc:454:run$2112 [6]
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1736:
      Old ports: A=14'10011111000110, B={ 1'0 $auto$wreduce.cc:454:run$2112 [12:0] }, Y=$auto$wreduce.cc:454:run$2113 [13:0]
      New ports: A=11'01111000110, B={ $auto$wreduce.cc:454:run$2112 [12] 1'0 $auto$wreduce.cc:454:run$2112 [8:0] }, Y={ $auto$wreduce.cc:454:run$2113 [12] $auto$wreduce.cc:454:run$2113 [9:0] }
      New connections: { $auto$wreduce.cc:454:run$2113 [13] $auto$wreduce.cc:454:run$2113 [11:10] } = { $auto$wreduce.cc:454:run$2113 [9] 1'0 $auto$wreduce.cc:454:run$2113 [9] }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1739:
      Old ports: A=17'11000110110111001, B={ 1'0 $auto$wreduce.cc:454:run$2113 [15:0] }, Y={ $auto$wreduce.cc:454:run$2114 [17] $auto$wreduce.cc:454:run$2114 [15:0] }
      New ports: A=16'1100110110111001, B={ 1'0 $auto$wreduce.cc:454:run$2113 [13] $auto$wreduce.cc:454:run$2113 [13:0] }, Y={ $auto$wreduce.cc:454:run$2114 [17] $auto$wreduce.cc:454:run$2114 [15] $auto$wreduce.cc:454:run$2114 [13:0] }
      New connections: $auto$wreduce.cc:454:run$2114 [14] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1742:
      Old ports: A=20'10011000100100110111, B={ 1'0 $auto$wreduce.cc:454:run$2114 [18:0] }, Y={ $auto$wreduce.cc:454:run$2115 [22] $auto$wreduce.cc:454:run$2115 [18:0] }
      New ports: A=18'011000100100110111, B={ $auto$wreduce.cc:454:run$2114 [17] 1'0 $auto$wreduce.cc:454:run$2114 [15:0] }, Y=$auto$wreduce.cc:454:run$2115 [17:0]
      New connections: { $auto$wreduce.cc:454:run$2115 [22] $auto$wreduce.cc:454:run$2115 [18] } = { $auto$wreduce.cc:454:run$2115 [16] $auto$wreduce.cc:454:run$2115 [17] }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1745:
      Old ports: A=24'100011110101110000101001, B={ 1'0 $auto$wreduce.cc:454:run$2115 [22:0] }, Y=$auto$wreduce.cc:454:run$2116 [23:0]
      New ports: A=21'011110101110000101001, B={ $auto$wreduce.cc:454:run$2115 [22] 1'0 $auto$wreduce.cc:454:run$2115 [18:0] }, Y={ $auto$wreduce.cc:454:run$2116 [22] $auto$wreduce.cc:454:run$2116 [19:0] }
      New connections: { $auto$wreduce.cc:454:run$2116 [23] $auto$wreduce.cc:454:run$2116 [21:20] } = { $auto$wreduce.cc:454:run$2116 [19] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1748:
      Old ports: A=27'101100110011001100110011010, B={ 1'0 $auto$wreduce.cc:454:run$2116 [25:0] }, Y={ $flatten\mul_div_processor.\div.$procmux$1748_Y [27] $flatten\mul_div_processor.\div.$procmux$1748_Y [25:0] }
      New ports: A=26'01100110011001100110011010, B={ $auto$wreduce.cc:454:run$2116 [23] 1'0 $auto$wreduce.cc:454:run$2116 [23:0] }, Y=$flatten\mul_div_processor.\div.$procmux$1748_Y [25:0]
      New connections: $flatten\mul_div_processor.\div.$procmux$1748_Y [27] = $flatten\mul_div_processor.\div.$procmux$1748_Y [24]
  Optimizing cells in module \ORC_R32IMAZicsr.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1444:
      Old ports: A={ $flatten\core.$procmux$1441_Y [31:11] $flatten\core.$procmux$1441_Y [4:0] }, B={ $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] \i_inst_read_data [31] \i_inst_read_data [24:20] }, Y={ $flatten\core.$procmux$1444_Y [31:11] $flatten\core.$procmux$1444_Y [4:0] }
      New ports: A={ $flatten\core.$procmux$1441_Y [13:11] $flatten\core.$procmux$1441_Y [4:0] }, B={ $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] \i_inst_read_data [31] \i_inst_read_data [24:20] }, Y={ $flatten\core.$procmux$1444_Y [13:11] $flatten\core.$procmux$1444_Y [4:0] }
      New connections: $flatten\core.$procmux$1444_Y [31:14] = { $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] $flatten\core.$procmux$1444_Y [13] }
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1447:
      Old ports: A=$flatten\core.$procmux$1444_Y, B={ $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] \i_inst_read_data [31:25] \i_inst_read_data [11:7] }, Y=$flatten\core.$procmux$1447_Y
      New ports: A={ $flatten\core.$procmux$1444_Y [31:11] $flatten\core.$procmux$1444_Y [4:0] }, B={ $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] \i_inst_read_data [31] \i_inst_read_data [11:7] }, Y={ $flatten\core.$procmux$1447_Y [31:11] $flatten\core.$procmux$1447_Y [4:0] }
      New connections: $flatten\core.$procmux$1447_Y [10:5] = \i_inst_read_data [30:25]
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:161$927:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y, B={ $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] \i_master_read_data [23:16] }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y
      New ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:162$926_Y [8:0], B={ $flatten\core.$ternary$../../source/Hart_Core.v:161$916_Y [0] \i_master_read_data [23:16] }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8:0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [31:9] = { $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8] }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1733:
      Old ports: A=9'011000111, B={ $auto$wreduce.cc:454:run$2111 [7] $auto$wreduce.cc:454:run$2111 [7] 1'0 $auto$wreduce.cc:454:run$2111 [5:0] }, Y=$auto$wreduce.cc:454:run$2112 [8:0]
      New ports: A=7'0110111, B={ $auto$wreduce.cc:454:run$2111 [7] $auto$wreduce.cc:454:run$2111 [7] 1'0 $auto$wreduce.cc:454:run$2111 [0] $auto$wreduce.cc:454:run$2111 [2:0] }, Y={ $auto$wreduce.cc:454:run$2112 [8:6] $auto$wreduce.cc:454:run$2112 [3:0] }
      New connections: $auto$wreduce.cc:454:run$2112 [5:4] = { $auto$wreduce.cc:454:run$2112 [3] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1739:
      Old ports: A=16'1100110110111001, B={ 1'0 $auto$wreduce.cc:454:run$2113 [13] $auto$wreduce.cc:454:run$2113 [13:0] }, Y={ $auto$wreduce.cc:454:run$2114 [17] $auto$wreduce.cc:454:run$2114 [15] $auto$wreduce.cc:454:run$2114 [13:0] }
      New ports: A=13'0110110111001, B={ $auto$wreduce.cc:454:run$2113 [12] 1'0 $auto$wreduce.cc:454:run$2113 [9] $auto$wreduce.cc:454:run$2113 [9:0] }, Y=$auto$wreduce.cc:454:run$2114 [12:0]
      New connections: { $auto$wreduce.cc:454:run$2114 [17] $auto$wreduce.cc:454:run$2114 [15] $auto$wreduce.cc:454:run$2114 [13] } = $auto$wreduce.cc:454:run$2114 [11:9]
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1742:
      Old ports: A=18'011000100100110111, B={ $auto$wreduce.cc:454:run$2114 [17] 1'0 $auto$wreduce.cc:454:run$2114 [15:0] }, Y=$auto$wreduce.cc:454:run$2115 [17:0]
      New ports: A=17'01100100100110111, B={ $auto$wreduce.cc:454:run$2114 [17] 1'0 $auto$wreduce.cc:454:run$2114 [15] $auto$wreduce.cc:454:run$2114 [13:0] }, Y={ $auto$wreduce.cc:454:run$2115 [17:15] $auto$wreduce.cc:454:run$2115 [13:0] }
      New connections: $auto$wreduce.cc:454:run$2115 [14] = 1'0
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1745:
      Old ports: A=21'011110101110000101001, B={ $auto$wreduce.cc:454:run$2115 [22] 1'0 $auto$wreduce.cc:454:run$2115 [18:0] }, Y={ $auto$wreduce.cc:454:run$2116 [22] $auto$wreduce.cc:454:run$2116 [19:0] }
      New ports: A=20'01110101110000101001, B={ $auto$wreduce.cc:454:run$2115 [16] 1'0 $auto$wreduce.cc:454:run$2115 [17:0] }, Y={ $auto$wreduce.cc:454:run$2116 [22] $auto$wreduce.cc:454:run$2116 [19] $auto$wreduce.cc:454:run$2116 [17:0] }
      New connections: $auto$wreduce.cc:454:run$2116 [18] = $auto$wreduce.cc:454:run$2116 [17]
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1748:
      Old ports: A=26'01100110011001100110011010, B={ $auto$wreduce.cc:454:run$2116 [23] 1'0 $auto$wreduce.cc:454:run$2116 [23:0] }, Y=$flatten\mul_div_processor.\div.$procmux$1748_Y [25:0]
      New ports: A=23'00110011001100110011010, B={ $auto$wreduce.cc:454:run$2116 [19] $auto$wreduce.cc:454:run$2116 [22] 1'0 $auto$wreduce.cc:454:run$2116 [19:0] }, Y={ $flatten\mul_div_processor.\div.$procmux$1748_Y [25] $flatten\mul_div_processor.\div.$procmux$1748_Y [22] $flatten\mul_div_processor.\div.$procmux$1748_Y [20:0] }
      New connections: { $flatten\mul_div_processor.\div.$procmux$1748_Y [24:23] $flatten\mul_div_processor.\div.$procmux$1748_Y [21] } = { $flatten\mul_div_processor.\div.$procmux$1748_Y [20:19] 1'0 }
  Optimizing cells in module \ORC_R32IMAZicsr.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1447:
      Old ports: A={ $flatten\core.$procmux$1444_Y [31:11] $flatten\core.$procmux$1444_Y [4:0] }, B={ $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] \i_inst_read_data [31] \i_inst_read_data [11:7] }, Y={ $flatten\core.$procmux$1447_Y [31:11] $flatten\core.$procmux$1447_Y [4:0] }
      New ports: A={ $flatten\core.$procmux$1444_Y [13:11] $flatten\core.$procmux$1444_Y [4:0] }, B={ $flatten\core.$procmux$1435_Y [12] $flatten\core.$procmux$1435_Y [12] \i_inst_read_data [31] \i_inst_read_data [11:7] }, Y={ $flatten\core.$procmux$1447_Y [13:11] $flatten\core.$procmux$1447_Y [4:0] }
      New connections: $flatten\core.$procmux$1447_Y [31:14] = { $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] $flatten\core.$procmux$1447_Y [13] }
    Consolidated identical input bits for $mux cell $flatten\core.$ternary$../../source/Hart_Core.v:160$928:
      Old ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y, B={ $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] \i_master_read_data [31:24] }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y
      New ports: A=$flatten\core.$ternary$../../source/Hart_Core.v:161$927_Y [8:0], B={ $flatten\core.$ternary$../../source/Hart_Core.v:160$911_Y [0] \i_master_read_data [31:24] }, Y=$flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8:0]
      New connections: $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [31:9] = { $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] $flatten\core.$ternary$../../source/Hart_Core.v:160$928_Y [8] }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1736:
      Old ports: A=11'01111000110, B={ $auto$wreduce.cc:454:run$2112 [6] 1'0 $auto$wreduce.cc:454:run$2112 [8:0] }, Y={ $auto$wreduce.cc:454:run$2113 [12] $auto$wreduce.cc:454:run$2113 [9:0] }
      New ports: A=9'011110110, B={ $auto$wreduce.cc:454:run$2112 [6] 1'0 $auto$wreduce.cc:454:run$2112 [8:6] $auto$wreduce.cc:454:run$2112 [3:0] }, Y={ $auto$wreduce.cc:454:run$2113 [12] $auto$wreduce.cc:454:run$2113 [9:6] $auto$wreduce.cc:454:run$2113 [3:0] }
      New connections: $auto$wreduce.cc:454:run$2113 [5:4] = { $auto$wreduce.cc:454:run$2113 [3] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1742:
      Old ports: A=17'01100100100110111, B={ $auto$wreduce.cc:454:run$2114 [17] 1'0 $auto$wreduce.cc:454:run$2114 [15] $auto$wreduce.cc:454:run$2114 [13:0] }, Y={ $auto$wreduce.cc:454:run$2115 [17:15] $auto$wreduce.cc:454:run$2115 [13:0] }
      New ports: A=16'0110100100110111, B={ $auto$wreduce.cc:454:run$2114 [11] 1'0 $auto$wreduce.cc:454:run$2114 [10] $auto$wreduce.cc:454:run$2114 [12:0] }, Y={ $auto$wreduce.cc:454:run$2115 [17:15] $auto$wreduce.cc:454:run$2115 [12:0] }
      New connections: $auto$wreduce.cc:454:run$2115 [13] = $auto$wreduce.cc:454:run$2115 [9]
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1745:
      Old ports: A=20'01110101110000101001, B={ $auto$wreduce.cc:454:run$2115 [16] 1'0 $auto$wreduce.cc:454:run$2115 [17:0] }, Y={ $auto$wreduce.cc:454:run$2116 [22] $auto$wreduce.cc:454:run$2116 [19] $auto$wreduce.cc:454:run$2116 [17:0] }
      New ports: A=19'0110101110000101001, B={ $auto$wreduce.cc:454:run$2115 [16] $auto$wreduce.cc:454:run$2115 [17:15] 1'0 $auto$wreduce.cc:454:run$2115 [13:0] }, Y={ $auto$wreduce.cc:454:run$2116 [22] $auto$wreduce.cc:454:run$2116 [17:0] }
      New connections: $auto$wreduce.cc:454:run$2116 [19] = $auto$wreduce.cc:454:run$2116 [14]
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1748:
      Old ports: A=23'00110011001100110011010, B={ $auto$wreduce.cc:454:run$2116 [19] $auto$wreduce.cc:454:run$2116 [22] 1'0 $auto$wreduce.cc:454:run$2116 [19:0] }, Y={ $flatten\mul_div_processor.\div.$procmux$1748_Y [25] $flatten\mul_div_processor.\div.$procmux$1748_Y [22] $flatten\mul_div_processor.\div.$procmux$1748_Y [20:0] }
      New ports: A=22'0011011001100110011010, B={ $auto$wreduce.cc:454:run$2116 [19] $auto$wreduce.cc:454:run$2116 [22] 1'0 $auto$wreduce.cc:454:run$2116 [19] $auto$wreduce.cc:454:run$2116 [17:0] }, Y={ $flatten\mul_div_processor.\div.$procmux$1748_Y [25] $flatten\mul_div_processor.\div.$procmux$1748_Y [22] $flatten\mul_div_processor.\div.$procmux$1748_Y [20:19] $flatten\mul_div_processor.\div.$procmux$1748_Y [17:0] }
      New connections: $flatten\mul_div_processor.\div.$procmux$1748_Y [18] = $flatten\mul_div_processor.\div.$procmux$1748_Y [17]
  Optimizing cells in module \ORC_R32IMAZicsr.
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1739:
      Old ports: A=13'0110110111001, B={ $auto$wreduce.cc:454:run$2113 [12] 1'0 $auto$wreduce.cc:454:run$2113 [9] $auto$wreduce.cc:454:run$2113 [9:0] }, Y=$auto$wreduce.cc:454:run$2114 [12:0]
      New ports: A=11'01011011001, B={ $auto$wreduce.cc:454:run$2113 [12] $auto$wreduce.cc:454:run$2113 [9] $auto$wreduce.cc:454:run$2113 [9:6] 1'0 $auto$wreduce.cc:454:run$2113 [3:0] }, Y={ $auto$wreduce.cc:454:run$2114 [12] $auto$wreduce.cc:454:run$2114 [10:6] $auto$wreduce.cc:454:run$2114 [4:0] }
      New connections: { $auto$wreduce.cc:454:run$2114 [11] $auto$wreduce.cc:454:run$2114 [5] } = $auto$wreduce.cc:454:run$2114 [4:3]
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1745:
      Old ports: A=19'0110101110000101001, B={ $auto$wreduce.cc:454:run$2115 [16] $auto$wreduce.cc:454:run$2115 [17:15] 1'0 $auto$wreduce.cc:454:run$2115 [13:0] }, Y={ $auto$wreduce.cc:454:run$2116 [22] $auto$wreduce.cc:454:run$2116 [17:0] }
      New ports: A=18'011011110000101001, B={ $auto$wreduce.cc:454:run$2115 [16] $auto$wreduce.cc:454:run$2115 [17:15] 1'0 $auto$wreduce.cc:454:run$2115 [12:0] }, Y={ $auto$wreduce.cc:454:run$2116 [22] $auto$wreduce.cc:454:run$2116 [17:14] $auto$wreduce.cc:454:run$2116 [12:0] }
      New connections: $auto$wreduce.cc:454:run$2116 [13] = $auto$wreduce.cc:454:run$2116 [9]
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1748:
      Old ports: A=22'0011011001100110011010, B={ $auto$wreduce.cc:454:run$2116 [19] $auto$wreduce.cc:454:run$2116 [22] 1'0 $auto$wreduce.cc:454:run$2116 [19] $auto$wreduce.cc:454:run$2116 [17:0] }, Y={ $flatten\mul_div_processor.\div.$procmux$1748_Y [25] $flatten\mul_div_processor.\div.$procmux$1748_Y [22] $flatten\mul_div_processor.\div.$procmux$1748_Y [20:19] $flatten\mul_div_processor.\div.$procmux$1748_Y [17:0] }
      New ports: A=21'011011001100110011010, B={ $auto$wreduce.cc:454:run$2116 [22] 1'0 $auto$wreduce.cc:454:run$2116 [14] $auto$wreduce.cc:454:run$2116 [17:0] }, Y={ $flatten\mul_div_processor.\div.$procmux$1748_Y [22] $flatten\mul_div_processor.\div.$procmux$1748_Y [20:19] $flatten\mul_div_processor.\div.$procmux$1748_Y [17:0] }
      New connections: $flatten\mul_div_processor.\div.$procmux$1748_Y [25] = $flatten\mul_div_processor.\div.$procmux$1748_Y [14]
  Optimizing cells in module \ORC_R32IMAZicsr.
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1742:
      Old ports: A=16'0110100100110111, B={ $auto$wreduce.cc:454:run$2114 [11] 1'0 $auto$wreduce.cc:454:run$2114 [10] $auto$wreduce.cc:454:run$2114 [12:0] }, Y={ $auto$wreduce.cc:454:run$2115 [17:15] $auto$wreduce.cc:454:run$2115 [12:0] }
      New ports: A=15'011000100110111, B={ $auto$wreduce.cc:454:run$2114 [4] 1'0 $auto$wreduce.cc:454:run$2114 [10] $auto$wreduce.cc:454:run$2114 [12] $auto$wreduce.cc:454:run$2114 [10:6] $auto$wreduce.cc:454:run$2114 [3] $auto$wreduce.cc:454:run$2114 [4:0] }, Y={ $auto$wreduce.cc:454:run$2115 [17:15] $auto$wreduce.cc:454:run$2115 [12] $auto$wreduce.cc:454:run$2115 [10:0] }
      New connections: $auto$wreduce.cc:454:run$2115 [11] = $auto$wreduce.cc:454:run$2115 [4]
    Consolidated identical input bits for $mux cell $flatten\mul_div_processor.\div.$procmux$1748:
      Old ports: A=21'011011001100110011010, B={ $auto$wreduce.cc:454:run$2116 [22] 1'0 $auto$wreduce.cc:454:run$2116 [14] $auto$wreduce.cc:454:run$2116 [17:0] }, Y={ $flatten\mul_div_processor.\div.$procmux$1748_Y [22] $flatten\mul_div_processor.\div.$procmux$1748_Y [20:19] $flatten\mul_div_processor.\div.$procmux$1748_Y [17:0] }
      New ports: A=20'01101101100110011010, B={ $auto$wreduce.cc:454:run$2116 [22] 1'0 $auto$wreduce.cc:454:run$2116 [14] $auto$wreduce.cc:454:run$2116 [17:14] $auto$wreduce.cc:454:run$2116 [12:0] }, Y={ $flatten\mul_div_processor.\div.$procmux$1748_Y [22] $flatten\mul_div_processor.\div.$procmux$1748_Y [20:19] $flatten\mul_div_processor.\div.$procmux$1748_Y [17:14] $flatten\mul_div_processor.\div.$procmux$1748_Y [12:0] }
      New connections: $flatten\mul_div_processor.\div.$procmux$1748_Y [13] = $flatten\mul_div_processor.\div.$procmux$1748_Y [9]
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 55 changes.

7.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

7.35.6. Executing OPT_DFF pass (perform DFF optimizations).

7.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

7.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.35.9. Rerunning OPT passes. (Maybe there is more to do..)

7.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~36 debug messages>

7.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1441:
      Old ports: A={ \core.w_j_simm [31] \core.w_j_simm [31] \i_inst_read_data [31] \i_inst_read_data [24:20] }, B={ \core.w_j_simm [31] \i_inst_read_data [31] \i_inst_read_data [7] \i_inst_read_data [11:8] 1'0 }, Y={ $flatten\core.$procmux$1441_Y [31] $flatten\core.$procmux$1441_Y [12:11] $flatten\core.$procmux$1441_Y [4:0] }
      New ports: A={ \core.w_j_simm [31] \i_inst_read_data [31] \i_inst_read_data [24:20] }, B={ \i_inst_read_data [31] \i_inst_read_data [7] \i_inst_read_data [11:8] 1'0 }, Y={ $flatten\core.$procmux$1441_Y [12:11] $flatten\core.$procmux$1441_Y [4:0] }
      New connections: $flatten\core.$procmux$1441_Y [31] = \core.w_j_simm [31]
  Optimizing cells in module \ORC_R32IMAZicsr.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1444:
      Old ports: A={ $flatten\core.$procmux$1441_Y [31] $flatten\core.$procmux$1441_Y [12:11] $flatten\core.$procmux$1441_Y [4:0] }, B={ \core.w_j_simm [31] \core.w_j_simm [31] \i_inst_read_data [31] \i_inst_read_data [24:20] }, Y={ $flatten\core.$procmux$1444_Y [31] $flatten\core.$procmux$1444_Y [12:11] $flatten\core.$procmux$1444_Y [4:0] }
      New ports: A={ $flatten\core.$procmux$1441_Y [12:11] $flatten\core.$procmux$1441_Y [4:0] }, B={ \core.w_j_simm [31] \i_inst_read_data [31] \i_inst_read_data [24:20] }, Y={ $flatten\core.$procmux$1444_Y [12:11] $flatten\core.$procmux$1444_Y [4:0] }
      New connections: $flatten\core.$procmux$1444_Y [31] = \core.w_j_simm [31]
  Optimizing cells in module \ORC_R32IMAZicsr.
    Consolidated identical input bits for $mux cell $flatten\core.$procmux$1447:
      Old ports: A={ $flatten\core.$procmux$1444_Y [31] $flatten\core.$procmux$1444_Y [12:11] $flatten\core.$procmux$1444_Y [4:0] }, B={ \core.w_j_simm [31] \core.w_j_simm [31] \i_inst_read_data [31] \i_inst_read_data [11:7] }, Y={ $flatten\core.$procmux$1447_Y [31] $flatten\core.$procmux$1447_Y [12:11] $flatten\core.$procmux$1447_Y [4:0] }
      New ports: A={ $flatten\core.$procmux$1444_Y [12:11] $flatten\core.$procmux$1444_Y [4:0] }, B={ \core.w_j_simm [31] \i_inst_read_data [31] \i_inst_read_data [11:7] }, Y={ $flatten\core.$procmux$1447_Y [12:11] $flatten\core.$procmux$1447_Y [4:0] }
      New connections: $flatten\core.$procmux$1447_Y [31] = \core.w_j_simm [31]
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 3 changes.

7.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.35.13. Executing OPT_DFF pass (perform DFF optimizations).

7.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.35.16. Rerunning OPT passes. (Maybe there is more to do..)

7.35.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ORC_R32IMAZicsr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~36 debug messages>

7.35.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ORC_R32IMAZicsr.
Performed a total of 0 changes.

7.35.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.35.20. Executing OPT_DFF pass (perform DFF optimizations).

7.35.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.35.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.35.23. Finished OPT passes. (There is nothing left to do.)

7.36. Executing ICE40_WRAPCARRY pass (wrap carries).

7.37. Executing TECHMAP pass (map to technology primitives).

7.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.37.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

7.37.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=33\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=64\B_WIDTH=80\Y_WIDTH=80 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=31\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=64\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=48\B_WIDTH=48\Y_WIDTH=48 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=21\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=25\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=64\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=64\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=28\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~2338 debug messages>

7.38. Executing OPT pass (performing simple optimizations).

7.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~2858 debug messages>

7.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~2916 debug messages>
Removed a total of 972 cells.

7.38.3. Executing OPT_DFF pass (perform DFF optimizations).

7.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 788 unused cells and 1318 unused wires.
<suppressed ~789 debug messages>

7.38.5. Finished fast OPT passes.

7.39. Executing ICE40_OPT pass (performing simple optimizations).

7.39.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2228.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2228.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2239.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2228.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2250.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2228.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2261.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2228.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2272.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2228.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2283.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2228.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2294.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2228.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2305.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2228.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2380.slice[0].carry: CO=\core.r_next_pc_fetch [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2383.slice[0].carry: CO=\core.r_next_pc_decode [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2394.slice[0].carry: CO=\mem_access_controller.reset_index [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2397.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2397.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2400.slice[0].carry: CO=\mul_div_processor.r_product [32]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$opt_expr.cc:1795:replace_const_cells$2424.slice[32].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ORC_R32IMAZicsr.$auto$opt_expr.cc:1795:replace_const_cells$2456.slice[32].carry: CO=1'0

7.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~17 debug messages>

7.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

7.39.4. Executing OPT_DFF pass (perform DFF optimizations).

7.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

7.39.6. Rerunning OPT passes. (Removed registers in this run.)

7.39.7. Running ICE40 specific optimizations.

7.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.39.10. Executing OPT_DFF pass (perform DFF optimizations).

7.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.39.12. Finished OPT passes. (There is nothing left to do.)

7.40. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

7.41. Executing TECHMAP pass (map to technology primitives).

7.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

7.41.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
No more expansions possible.
<suppressed ~458 debug messages>

7.42. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.43. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2380.slice[0].carry ($lut).
Mapping ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2383.slice[0].carry ($lut).
Mapping ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2394.slice[0].carry ($lut).
Mapping ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2397.slice[0].carry ($lut).
Mapping ORC_R32IMAZicsr.$auto$alumacc.cc:485:replace_alu$2400.slice[0].carry ($lut).
Mapping ORC_R32IMAZicsr.$auto$opt_expr.cc:1795:replace_const_cells$2424.slice[32].carry ($lut).
Mapping ORC_R32IMAZicsr.$auto$opt_expr.cc:1795:replace_const_cells$2456.slice[32].carry ($lut).

7.44. Executing ICE40_OPT pass (performing simple optimizations).

7.44.1. Running ICE40 specific optimizations.

7.44.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.
<suppressed ~722 debug messages>

7.44.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
<suppressed ~1098 debug messages>
Removed a total of 366 cells.

7.44.4. Executing OPT_DFF pass (perform DFF optimizations).

7.44.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..
Removed 0 unused cells and 2795 unused wires.
<suppressed ~1 debug messages>

7.44.6. Rerunning OPT passes. (Removed registers in this run.)

7.44.7. Running ICE40 specific optimizations.

7.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ORC_R32IMAZicsr.

7.44.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ORC_R32IMAZicsr'.
Removed a total of 0 cells.

7.44.10. Executing OPT_DFF pass (perform DFF optimizations).

7.44.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ORC_R32IMAZicsr..

7.44.12. Finished OPT passes. (There is nothing left to do.)

7.45. Executing TECHMAP pass (map to technology primitives).

7.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

7.45.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.46. Executing ABC pass (technology mapping using ABC).

7.46.1. Extracting gate netlist of module `\ORC_R32IMAZicsr' to `<abc-temp-dir>/input.blif'..
Extracted 4023 gates and 4872 wires to a netlist network with 847 inputs and 693 outputs.

7.46.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1097.
ABC: Participating nodes from both networks       =    2505.
ABC: Participating nodes from the first network   =    1131. (  57.18 % of nodes)
ABC: Participating nodes from the second network  =    1374. (  69.46 % of nodes)
ABC: Node pairs (any polarity)                    =    1130. (  57.13 % of names can be moved)
ABC: Node pairs (same polarity)                   =     800. (  40.44 % of names can be moved)
ABC: Total runtime =     0.17 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

7.46.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1977
ABC RESULTS:        internal signals:     3332
ABC RESULTS:           input signals:      847
ABC RESULTS:          output signals:      693
Removing temp directory.

7.47. Executing ICE40_WRAPCARRY pass (wrap carries).

7.48. Executing TECHMAP pass (map to technology primitives).

7.48.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

7.48.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 355 unused cells and 2029 unused wires.

7.49. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2536
  1-LUT              100
  2-LUT              346
  3-LUT             1112
  4-LUT              978

Eliminating LUTs.
Number of LUTs:     2536
  1-LUT              100
  2-LUT              346
  3-LUT             1112
  4-LUT              978

Combining LUTs.
Number of LUTs:     2476
  1-LUT               99
  2-LUT              289
  3-LUT             1081
  4-LUT             1007

Eliminated 0 LUTs.
Combined 60 LUTs.
<suppressed ~15552 debug messages>

7.50. Executing TECHMAP pass (map to technology primitives).

7.50.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.50.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100110011000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010001010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010001001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101011000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100101101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010000000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001100110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110001110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000111100 for cells of type $lut.
No more expansions possible.
<suppressed ~4858 debug messages>
Removed 0 unused cells and 5538 unused wires.

7.51. Executing AUTONAME pass.
Renamed 155641 objects in module ORC_R32IMAZicsr (132 iterations).
<suppressed ~4806 debug messages>

7.52. Executing HIERARCHY pass (managing design hierarchy).

7.52.1. Analyzing design hierarchy..
Top module:  \ORC_R32IMAZicsr

7.52.2. Analyzing design hierarchy..
Top module:  \ORC_R32IMAZicsr
Removed 0 unused modules.

7.53. Printing statistics.

=== ORC_R32IMAZicsr ===

   Number of wires:               1146
   Number of wire bits:           8366
   Number of public wires:        1146
   Number of public wire bits:    8366
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3820
     SB_CARRY                      889
     SB_DFF                         90
     SB_DFFESR                     311
     SB_DFFESS                       1
     SB_DFFSR                       33
     SB_DFFSS                        1
     SB_LUT4                      2476
     SB_MAC16                       15
     SB_RAM40_4K                     4

7.54. Executing CHECK pass (checking for obvious problems).
Checking module ORC_R32IMAZicsr...
Found and reported 0 problems.

7.55. Executing JSON backend.

8. Executing JSON backend.

End of script. Logfile hash: aeaa023213, CPU: user 9.23s system 0.08s, MEM: 174.27 MB peak
Yosys 0.9+3746 (git sha1 ec410c9b, gcc 10.2.1 -O3 -feliminate-unused-debug-types -fexceptions -fstack-protector -m64 -fasynchronous-unwind-tables -ftree-loop-distribute-patterns -fno-semantic-interposition -ffat-lto-objects -fno-trapping-math -mtune=skylake -fvisibility-inlines-hidden -fPIC -Os)
Time spent: 18% 1x abc (2 sec), 16% 1x autoname (1 sec), ...
